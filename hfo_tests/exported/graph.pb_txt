node {
  name: "DQNetwork/inputs"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 27
        }
        dim {
          size: 4
        }
      }
    }
  }
}
node {
  name: "DQNetwork/IS_weights"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "DQNetwork/actions_"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 3
        }
      }
    }
  }
}
node {
  name: "DQNetwork/target"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "DQNetwork/mlp1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/mlp1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "DQNetwork/mlp1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/mlp1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.40824830532073975
      }
    }
  }
}
node {
  name: "DQNetwork/mlp1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/mlp1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.40824830532073975
      }
    }
  }
}
node {
  name: "DQNetwork/mlp1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "DQNetwork/mlp1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/mlp1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "DQNetwork/mlp1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "DQNetwork/mlp1/kernel/Initializer/random_uniform/max"
  input: "DQNetwork/mlp1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/mlp1/kernel"
      }
    }
  }
}
node {
  name: "DQNetwork/mlp1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "DQNetwork/mlp1/kernel/Initializer/random_uniform/RandomUniform"
  input: "DQNetwork/mlp1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/mlp1/kernel"
      }
    }
  }
}
node {
  name: "DQNetwork/mlp1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "DQNetwork/mlp1/kernel/Initializer/random_uniform/mul"
  input: "DQNetwork/mlp1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/mlp1/kernel"
      }
    }
  }
}
node {
  name: "DQNetwork/mlp1/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/mlp1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DQNetwork/mlp1/kernel/Assign"
  op: "Assign"
  input: "DQNetwork/mlp1/kernel"
  input: "DQNetwork/mlp1/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/mlp1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DQNetwork/mlp1/kernel/read"
  op: "Identity"
  input: "DQNetwork/mlp1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/mlp1/kernel"
      }
    }
  }
}
node {
  name: "DQNetwork/mlp1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/mlp1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DQNetwork/mlp1/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/mlp1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DQNetwork/mlp1/bias/Assign"
  op: "Assign"
  input: "DQNetwork/mlp1/bias"
  input: "DQNetwork/mlp1/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/mlp1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DQNetwork/mlp1/bias/read"
  op: "Identity"
  input: "DQNetwork/mlp1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/mlp1/bias"
      }
    }
  }
}
node {
  name: "DQNetwork/mlp1/Tensordot/axes"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "DQNetwork/mlp1/Tensordot/free"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "DQNetwork/mlp1/Tensordot/Shape"
  op: "Shape"
  input: "DQNetwork/inputs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DQNetwork/mlp1/Tensordot/GatherV2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "DQNetwork/mlp1/Tensordot/GatherV2"
  op: "GatherV2"
  input: "DQNetwork/mlp1/Tensordot/Shape"
  input: "DQNetwork/mlp1/Tensordot/free"
  input: "DQNetwork/mlp1/Tensordot/GatherV2/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DQNetwork/mlp1/Tensordot/GatherV2_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "DQNetwork/mlp1/Tensordot/GatherV2_1"
  op: "GatherV2"
  input: "DQNetwork/mlp1/Tensordot/Shape"
  input: "DQNetwork/mlp1/Tensordot/axes"
  input: "DQNetwork/mlp1/Tensordot/GatherV2_1/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DQNetwork/mlp1/Tensordot/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "DQNetwork/mlp1/Tensordot/Prod"
  op: "Prod"
  input: "DQNetwork/mlp1/Tensordot/GatherV2"
  input: "DQNetwork/mlp1/Tensordot/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "DQNetwork/mlp1/Tensordot/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "DQNetwork/mlp1/Tensordot/Prod_1"
  op: "Prod"
  input: "DQNetwork/mlp1/Tensordot/GatherV2_1"
  input: "DQNetwork/mlp1/Tensordot/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "DQNetwork/mlp1/Tensordot/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "DQNetwork/mlp1/Tensordot/concat"
  op: "ConcatV2"
  input: "DQNetwork/mlp1/Tensordot/free"
  input: "DQNetwork/mlp1/Tensordot/axes"
  input: "DQNetwork/mlp1/Tensordot/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DQNetwork/mlp1/Tensordot/stack"
  op: "Pack"
  input: "DQNetwork/mlp1/Tensordot/Prod"
  input: "DQNetwork/mlp1/Tensordot/Prod_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "DQNetwork/mlp1/Tensordot/transpose"
  op: "Transpose"
  input: "DQNetwork/inputs"
  input: "DQNetwork/mlp1/Tensordot/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DQNetwork/mlp1/Tensordot/Reshape"
  op: "Reshape"
  input: "DQNetwork/mlp1/Tensordot/transpose"
  input: "DQNetwork/mlp1/Tensordot/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DQNetwork/mlp1/Tensordot/transpose_1/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "DQNetwork/mlp1/Tensordot/transpose_1"
  op: "Transpose"
  input: "DQNetwork/mlp1/kernel/read"
  input: "DQNetwork/mlp1/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DQNetwork/mlp1/Tensordot/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "DQNetwork/mlp1/Tensordot/Reshape_1"
  op: "Reshape"
  input: "DQNetwork/mlp1/Tensordot/transpose_1"
  input: "DQNetwork/mlp1/Tensordot/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DQNetwork/mlp1/Tensordot/MatMul"
  op: "MatMul"
  input: "DQNetwork/mlp1/Tensordot/Reshape"
  input: "DQNetwork/mlp1/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "DQNetwork/mlp1/Tensordot/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "DQNetwork/mlp1/Tensordot/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "DQNetwork/mlp1/Tensordot/concat_1"
  op: "ConcatV2"
  input: "DQNetwork/mlp1/Tensordot/GatherV2"
  input: "DQNetwork/mlp1/Tensordot/Const_2"
  input: "DQNetwork/mlp1/Tensordot/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DQNetwork/mlp1/Tensordot"
  op: "Reshape"
  input: "DQNetwork/mlp1/Tensordot/MatMul"
  input: "DQNetwork/mlp1/Tensordot/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DQNetwork/mlp1/BiasAdd"
  op: "BiasAdd"
  input: "DQNetwork/mlp1/Tensordot"
  input: "DQNetwork/mlp1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "DQNetwork/mlp1/Elu"
  op: "Elu"
  input: "DQNetwork/mlp1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "DQNetwork/mlp2/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/mlp2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "DQNetwork/mlp2/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/mlp2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.25
      }
    }
  }
}
node {
  name: "DQNetwork/mlp2/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/mlp2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.25
      }
    }
  }
}
node {
  name: "DQNetwork/mlp2/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "DQNetwork/mlp2/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/mlp2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "DQNetwork/mlp2/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "DQNetwork/mlp2/kernel/Initializer/random_uniform/max"
  input: "DQNetwork/mlp2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/mlp2/kernel"
      }
    }
  }
}
node {
  name: "DQNetwork/mlp2/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "DQNetwork/mlp2/kernel/Initializer/random_uniform/RandomUniform"
  input: "DQNetwork/mlp2/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/mlp2/kernel"
      }
    }
  }
}
node {
  name: "DQNetwork/mlp2/kernel/Initializer/random_uniform"
  op: "Add"
  input: "DQNetwork/mlp2/kernel/Initializer/random_uniform/mul"
  input: "DQNetwork/mlp2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/mlp2/kernel"
      }
    }
  }
}
node {
  name: "DQNetwork/mlp2/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/mlp2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DQNetwork/mlp2/kernel/Assign"
  op: "Assign"
  input: "DQNetwork/mlp2/kernel"
  input: "DQNetwork/mlp2/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/mlp2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DQNetwork/mlp2/kernel/read"
  op: "Identity"
  input: "DQNetwork/mlp2/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/mlp2/kernel"
      }
    }
  }
}
node {
  name: "DQNetwork/mlp2/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/mlp2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DQNetwork/mlp2/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/mlp2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DQNetwork/mlp2/bias/Assign"
  op: "Assign"
  input: "DQNetwork/mlp2/bias"
  input: "DQNetwork/mlp2/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/mlp2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DQNetwork/mlp2/bias/read"
  op: "Identity"
  input: "DQNetwork/mlp2/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/mlp2/bias"
      }
    }
  }
}
node {
  name: "DQNetwork/mlp2/Tensordot/axes"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "DQNetwork/mlp2/Tensordot/free"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "DQNetwork/mlp2/Tensordot/Shape"
  op: "Shape"
  input: "DQNetwork/mlp1/Elu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DQNetwork/mlp2/Tensordot/GatherV2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "DQNetwork/mlp2/Tensordot/GatherV2"
  op: "GatherV2"
  input: "DQNetwork/mlp2/Tensordot/Shape"
  input: "DQNetwork/mlp2/Tensordot/free"
  input: "DQNetwork/mlp2/Tensordot/GatherV2/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DQNetwork/mlp2/Tensordot/GatherV2_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "DQNetwork/mlp2/Tensordot/GatherV2_1"
  op: "GatherV2"
  input: "DQNetwork/mlp2/Tensordot/Shape"
  input: "DQNetwork/mlp2/Tensordot/axes"
  input: "DQNetwork/mlp2/Tensordot/GatherV2_1/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DQNetwork/mlp2/Tensordot/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "DQNetwork/mlp2/Tensordot/Prod"
  op: "Prod"
  input: "DQNetwork/mlp2/Tensordot/GatherV2"
  input: "DQNetwork/mlp2/Tensordot/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "DQNetwork/mlp2/Tensordot/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "DQNetwork/mlp2/Tensordot/Prod_1"
  op: "Prod"
  input: "DQNetwork/mlp2/Tensordot/GatherV2_1"
  input: "DQNetwork/mlp2/Tensordot/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "DQNetwork/mlp2/Tensordot/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "DQNetwork/mlp2/Tensordot/concat"
  op: "ConcatV2"
  input: "DQNetwork/mlp2/Tensordot/free"
  input: "DQNetwork/mlp2/Tensordot/axes"
  input: "DQNetwork/mlp2/Tensordot/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DQNetwork/mlp2/Tensordot/stack"
  op: "Pack"
  input: "DQNetwork/mlp2/Tensordot/Prod"
  input: "DQNetwork/mlp2/Tensordot/Prod_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "DQNetwork/mlp2/Tensordot/transpose"
  op: "Transpose"
  input: "DQNetwork/mlp1/Elu"
  input: "DQNetwork/mlp2/Tensordot/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DQNetwork/mlp2/Tensordot/Reshape"
  op: "Reshape"
  input: "DQNetwork/mlp2/Tensordot/transpose"
  input: "DQNetwork/mlp2/Tensordot/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DQNetwork/mlp2/Tensordot/transpose_1/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "DQNetwork/mlp2/Tensordot/transpose_1"
  op: "Transpose"
  input: "DQNetwork/mlp2/kernel/read"
  input: "DQNetwork/mlp2/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DQNetwork/mlp2/Tensordot/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "DQNetwork/mlp2/Tensordot/Reshape_1"
  op: "Reshape"
  input: "DQNetwork/mlp2/Tensordot/transpose_1"
  input: "DQNetwork/mlp2/Tensordot/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DQNetwork/mlp2/Tensordot/MatMul"
  op: "MatMul"
  input: "DQNetwork/mlp2/Tensordot/Reshape"
  input: "DQNetwork/mlp2/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "DQNetwork/mlp2/Tensordot/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "DQNetwork/mlp2/Tensordot/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "DQNetwork/mlp2/Tensordot/concat_1"
  op: "ConcatV2"
  input: "DQNetwork/mlp2/Tensordot/GatherV2"
  input: "DQNetwork/mlp2/Tensordot/Const_2"
  input: "DQNetwork/mlp2/Tensordot/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DQNetwork/mlp2/Tensordot"
  op: "Reshape"
  input: "DQNetwork/mlp2/Tensordot/MatMul"
  input: "DQNetwork/mlp2/Tensordot/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DQNetwork/mlp2/BiasAdd"
  op: "BiasAdd"
  input: "DQNetwork/mlp2/Tensordot"
  input: "DQNetwork/mlp2/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "DQNetwork/mlp2/Elu"
  op: "Elu"
  input: "DQNetwork/mlp2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "DQNetwork/mlp3/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/mlp3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "DQNetwork/mlp3/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/mlp3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1767766922712326
      }
    }
  }
}
node {
  name: "DQNetwork/mlp3/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/mlp3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1767766922712326
      }
    }
  }
}
node {
  name: "DQNetwork/mlp3/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "DQNetwork/mlp3/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/mlp3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "DQNetwork/mlp3/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "DQNetwork/mlp3/kernel/Initializer/random_uniform/max"
  input: "DQNetwork/mlp3/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/mlp3/kernel"
      }
    }
  }
}
node {
  name: "DQNetwork/mlp3/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "DQNetwork/mlp3/kernel/Initializer/random_uniform/RandomUniform"
  input: "DQNetwork/mlp3/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/mlp3/kernel"
      }
    }
  }
}
node {
  name: "DQNetwork/mlp3/kernel/Initializer/random_uniform"
  op: "Add"
  input: "DQNetwork/mlp3/kernel/Initializer/random_uniform/mul"
  input: "DQNetwork/mlp3/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/mlp3/kernel"
      }
    }
  }
}
node {
  name: "DQNetwork/mlp3/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/mlp3/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DQNetwork/mlp3/kernel/Assign"
  op: "Assign"
  input: "DQNetwork/mlp3/kernel"
  input: "DQNetwork/mlp3/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/mlp3/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DQNetwork/mlp3/kernel/read"
  op: "Identity"
  input: "DQNetwork/mlp3/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/mlp3/kernel"
      }
    }
  }
}
node {
  name: "DQNetwork/mlp3/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/mlp3/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DQNetwork/mlp3/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/mlp3/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DQNetwork/mlp3/bias/Assign"
  op: "Assign"
  input: "DQNetwork/mlp3/bias"
  input: "DQNetwork/mlp3/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/mlp3/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DQNetwork/mlp3/bias/read"
  op: "Identity"
  input: "DQNetwork/mlp3/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/mlp3/bias"
      }
    }
  }
}
node {
  name: "DQNetwork/mlp3/Tensordot/axes"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "DQNetwork/mlp3/Tensordot/free"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "DQNetwork/mlp3/Tensordot/Shape"
  op: "Shape"
  input: "DQNetwork/mlp2/Elu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DQNetwork/mlp3/Tensordot/GatherV2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "DQNetwork/mlp3/Tensordot/GatherV2"
  op: "GatherV2"
  input: "DQNetwork/mlp3/Tensordot/Shape"
  input: "DQNetwork/mlp3/Tensordot/free"
  input: "DQNetwork/mlp3/Tensordot/GatherV2/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DQNetwork/mlp3/Tensordot/GatherV2_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "DQNetwork/mlp3/Tensordot/GatherV2_1"
  op: "GatherV2"
  input: "DQNetwork/mlp3/Tensordot/Shape"
  input: "DQNetwork/mlp3/Tensordot/axes"
  input: "DQNetwork/mlp3/Tensordot/GatherV2_1/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DQNetwork/mlp3/Tensordot/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "DQNetwork/mlp3/Tensordot/Prod"
  op: "Prod"
  input: "DQNetwork/mlp3/Tensordot/GatherV2"
  input: "DQNetwork/mlp3/Tensordot/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "DQNetwork/mlp3/Tensordot/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "DQNetwork/mlp3/Tensordot/Prod_1"
  op: "Prod"
  input: "DQNetwork/mlp3/Tensordot/GatherV2_1"
  input: "DQNetwork/mlp3/Tensordot/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "DQNetwork/mlp3/Tensordot/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "DQNetwork/mlp3/Tensordot/concat"
  op: "ConcatV2"
  input: "DQNetwork/mlp3/Tensordot/free"
  input: "DQNetwork/mlp3/Tensordot/axes"
  input: "DQNetwork/mlp3/Tensordot/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DQNetwork/mlp3/Tensordot/stack"
  op: "Pack"
  input: "DQNetwork/mlp3/Tensordot/Prod"
  input: "DQNetwork/mlp3/Tensordot/Prod_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "DQNetwork/mlp3/Tensordot/transpose"
  op: "Transpose"
  input: "DQNetwork/mlp2/Elu"
  input: "DQNetwork/mlp3/Tensordot/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DQNetwork/mlp3/Tensordot/Reshape"
  op: "Reshape"
  input: "DQNetwork/mlp3/Tensordot/transpose"
  input: "DQNetwork/mlp3/Tensordot/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DQNetwork/mlp3/Tensordot/transpose_1/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "DQNetwork/mlp3/Tensordot/transpose_1"
  op: "Transpose"
  input: "DQNetwork/mlp3/kernel/read"
  input: "DQNetwork/mlp3/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DQNetwork/mlp3/Tensordot/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "DQNetwork/mlp3/Tensordot/Reshape_1"
  op: "Reshape"
  input: "DQNetwork/mlp3/Tensordot/transpose_1"
  input: "DQNetwork/mlp3/Tensordot/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DQNetwork/mlp3/Tensordot/MatMul"
  op: "MatMul"
  input: "DQNetwork/mlp3/Tensordot/Reshape"
  input: "DQNetwork/mlp3/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "DQNetwork/mlp3/Tensordot/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "DQNetwork/mlp3/Tensordot/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "DQNetwork/mlp3/Tensordot/concat_1"
  op: "ConcatV2"
  input: "DQNetwork/mlp3/Tensordot/GatherV2"
  input: "DQNetwork/mlp3/Tensordot/Const_2"
  input: "DQNetwork/mlp3/Tensordot/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DQNetwork/mlp3/Tensordot"
  op: "Reshape"
  input: "DQNetwork/mlp3/Tensordot/MatMul"
  input: "DQNetwork/mlp3/Tensordot/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DQNetwork/mlp3/BiasAdd"
  op: "BiasAdd"
  input: "DQNetwork/mlp3/Tensordot"
  input: "DQNetwork/mlp3/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "DQNetwork/mlp3/Elu"
  op: "Elu"
  input: "DQNetwork/mlp3/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "DQNetwork/flatten/Shape"
  op: "Shape"
  input: "DQNetwork/mlp3/Elu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DQNetwork/flatten/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "DQNetwork/flatten/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "DQNetwork/flatten/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "DQNetwork/flatten/strided_slice"
  op: "StridedSlice"
  input: "DQNetwork/flatten/Shape"
  input: "DQNetwork/flatten/strided_slice/stack"
  input: "DQNetwork/flatten/strided_slice/stack_1"
  input: "DQNetwork/flatten/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "DQNetwork/flatten/Reshape/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "DQNetwork/flatten/Reshape/shape"
  op: "Pack"
  input: "DQNetwork/flatten/strided_slice"
  input: "DQNetwork/flatten/Reshape/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "DQNetwork/flatten/Reshape"
  op: "Reshape"
  input: "DQNetwork/mlp3/Elu"
  input: "DQNetwork/flatten/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DQNetwork/value_fc/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/value_fc/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\r\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "DQNetwork/value_fc/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/value_fc/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0388856902718544
      }
    }
  }
}
node {
  name: "DQNetwork/value_fc/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/value_fc/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0388856902718544
      }
    }
  }
}
node {
  name: "DQNetwork/value_fc/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "DQNetwork/value_fc/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/value_fc/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "DQNetwork/value_fc/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "DQNetwork/value_fc/kernel/Initializer/random_uniform/max"
  input: "DQNetwork/value_fc/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/value_fc/kernel"
      }
    }
  }
}
node {
  name: "DQNetwork/value_fc/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "DQNetwork/value_fc/kernel/Initializer/random_uniform/RandomUniform"
  input: "DQNetwork/value_fc/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/value_fc/kernel"
      }
    }
  }
}
node {
  name: "DQNetwork/value_fc/kernel/Initializer/random_uniform"
  op: "Add"
  input: "DQNetwork/value_fc/kernel/Initializer/random_uniform/mul"
  input: "DQNetwork/value_fc/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/value_fc/kernel"
      }
    }
  }
}
node {
  name: "DQNetwork/value_fc/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/value_fc/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3456
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DQNetwork/value_fc/kernel/Assign"
  op: "Assign"
  input: "DQNetwork/value_fc/kernel"
  input: "DQNetwork/value_fc/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/value_fc/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DQNetwork/value_fc/kernel/read"
  op: "Identity"
  input: "DQNetwork/value_fc/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/value_fc/kernel"
      }
    }
  }
}
node {
  name: "DQNetwork/value_fc/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/value_fc/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DQNetwork/value_fc/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/value_fc/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DQNetwork/value_fc/bias/Assign"
  op: "Assign"
  input: "DQNetwork/value_fc/bias"
  input: "DQNetwork/value_fc/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/value_fc/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DQNetwork/value_fc/bias/read"
  op: "Identity"
  input: "DQNetwork/value_fc/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/value_fc/bias"
      }
    }
  }
}
node {
  name: "DQNetwork/value_fc/MatMul"
  op: "MatMul"
  input: "DQNetwork/flatten/Reshape"
  input: "DQNetwork/value_fc/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "DQNetwork/value_fc/BiasAdd"
  op: "BiasAdd"
  input: "DQNetwork/value_fc/MatMul"
  input: "DQNetwork/value_fc/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "DQNetwork/value_fc/Elu"
  op: "Elu"
  input: "DQNetwork/value_fc/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "DQNetwork/value/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/value/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "DQNetwork/value/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/value/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10814761370420456
      }
    }
  }
}
node {
  name: "DQNetwork/value/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/value/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10814761370420456
      }
    }
  }
}
node {
  name: "DQNetwork/value/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "DQNetwork/value/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/value/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "DQNetwork/value/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "DQNetwork/value/kernel/Initializer/random_uniform/max"
  input: "DQNetwork/value/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/value/kernel"
      }
    }
  }
}
node {
  name: "DQNetwork/value/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "DQNetwork/value/kernel/Initializer/random_uniform/RandomUniform"
  input: "DQNetwork/value/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/value/kernel"
      }
    }
  }
}
node {
  name: "DQNetwork/value/kernel/Initializer/random_uniform"
  op: "Add"
  input: "DQNetwork/value/kernel/Initializer/random_uniform/mul"
  input: "DQNetwork/value/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/value/kernel"
      }
    }
  }
}
node {
  name: "DQNetwork/value/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/value/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DQNetwork/value/kernel/Assign"
  op: "Assign"
  input: "DQNetwork/value/kernel"
  input: "DQNetwork/value/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/value/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DQNetwork/value/kernel/read"
  op: "Identity"
  input: "DQNetwork/value/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/value/kernel"
      }
    }
  }
}
node {
  name: "DQNetwork/value/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/value/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DQNetwork/value/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/value/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DQNetwork/value/bias/Assign"
  op: "Assign"
  input: "DQNetwork/value/bias"
  input: "DQNetwork/value/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/value/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DQNetwork/value/bias/read"
  op: "Identity"
  input: "DQNetwork/value/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/value/bias"
      }
    }
  }
}
node {
  name: "DQNetwork/value/MatMul"
  op: "MatMul"
  input: "DQNetwork/value_fc/Elu"
  input: "DQNetwork/value/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "DQNetwork/value/BiasAdd"
  op: "BiasAdd"
  input: "DQNetwork/value/MatMul"
  input: "DQNetwork/value/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "DQNetwork/advantage_fc/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/advantage_fc/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\r\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "DQNetwork/advantage_fc/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/advantage_fc/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0388856902718544
      }
    }
  }
}
node {
  name: "DQNetwork/advantage_fc/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/advantage_fc/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0388856902718544
      }
    }
  }
}
node {
  name: "DQNetwork/advantage_fc/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "DQNetwork/advantage_fc/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/advantage_fc/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "DQNetwork/advantage_fc/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "DQNetwork/advantage_fc/kernel/Initializer/random_uniform/max"
  input: "DQNetwork/advantage_fc/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/advantage_fc/kernel"
      }
    }
  }
}
node {
  name: "DQNetwork/advantage_fc/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "DQNetwork/advantage_fc/kernel/Initializer/random_uniform/RandomUniform"
  input: "DQNetwork/advantage_fc/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/advantage_fc/kernel"
      }
    }
  }
}
node {
  name: "DQNetwork/advantage_fc/kernel/Initializer/random_uniform"
  op: "Add"
  input: "DQNetwork/advantage_fc/kernel/Initializer/random_uniform/mul"
  input: "DQNetwork/advantage_fc/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/advantage_fc/kernel"
      }
    }
  }
}
node {
  name: "DQNetwork/advantage_fc/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/advantage_fc/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3456
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DQNetwork/advantage_fc/kernel/Assign"
  op: "Assign"
  input: "DQNetwork/advantage_fc/kernel"
  input: "DQNetwork/advantage_fc/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/advantage_fc/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DQNetwork/advantage_fc/kernel/read"
  op: "Identity"
  input: "DQNetwork/advantage_fc/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/advantage_fc/kernel"
      }
    }
  }
}
node {
  name: "DQNetwork/advantage_fc/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/advantage_fc/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DQNetwork/advantage_fc/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/advantage_fc/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DQNetwork/advantage_fc/bias/Assign"
  op: "Assign"
  input: "DQNetwork/advantage_fc/bias"
  input: "DQNetwork/advantage_fc/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/advantage_fc/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DQNetwork/advantage_fc/bias/read"
  op: "Identity"
  input: "DQNetwork/advantage_fc/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/advantage_fc/bias"
      }
    }
  }
}
node {
  name: "DQNetwork/advantage_fc/MatMul"
  op: "MatMul"
  input: "DQNetwork/flatten/Reshape"
  input: "DQNetwork/advantage_fc/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "DQNetwork/advantage_fc/BiasAdd"
  op: "BiasAdd"
  input: "DQNetwork/advantage_fc/MatMul"
  input: "DQNetwork/advantage_fc/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "DQNetwork/advantage_fc/Elu"
  op: "Elu"
  input: "DQNetwork/advantage_fc/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "DQNetwork/advantages/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/advantages/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "DQNetwork/advantages/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/advantages/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10793741792440414
      }
    }
  }
}
node {
  name: "DQNetwork/advantages/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/advantages/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10793741792440414
      }
    }
  }
}
node {
  name: "DQNetwork/advantages/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "DQNetwork/advantages/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/advantages/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "DQNetwork/advantages/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "DQNetwork/advantages/kernel/Initializer/random_uniform/max"
  input: "DQNetwork/advantages/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/advantages/kernel"
      }
    }
  }
}
node {
  name: "DQNetwork/advantages/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "DQNetwork/advantages/kernel/Initializer/random_uniform/RandomUniform"
  input: "DQNetwork/advantages/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/advantages/kernel"
      }
    }
  }
}
node {
  name: "DQNetwork/advantages/kernel/Initializer/random_uniform"
  op: "Add"
  input: "DQNetwork/advantages/kernel/Initializer/random_uniform/mul"
  input: "DQNetwork/advantages/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/advantages/kernel"
      }
    }
  }
}
node {
  name: "DQNetwork/advantages/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/advantages/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 3
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DQNetwork/advantages/kernel/Assign"
  op: "Assign"
  input: "DQNetwork/advantages/kernel"
  input: "DQNetwork/advantages/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/advantages/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DQNetwork/advantages/kernel/read"
  op: "Identity"
  input: "DQNetwork/advantages/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/advantages/kernel"
      }
    }
  }
}
node {
  name: "DQNetwork/advantages/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/advantages/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DQNetwork/advantages/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/advantages/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DQNetwork/advantages/bias/Assign"
  op: "Assign"
  input: "DQNetwork/advantages/bias"
  input: "DQNetwork/advantages/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/advantages/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DQNetwork/advantages/bias/read"
  op: "Identity"
  input: "DQNetwork/advantages/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/advantages/bias"
      }
    }
  }
}
node {
  name: "DQNetwork/advantages/MatMul"
  op: "MatMul"
  input: "DQNetwork/advantage_fc/Elu"
  input: "DQNetwork/advantages/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "DQNetwork/advantages/BiasAdd"
  op: "BiasAdd"
  input: "DQNetwork/advantages/MatMul"
  input: "DQNetwork/advantages/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "DQNetwork/Mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "DQNetwork/Mean"
  op: "Mean"
  input: "DQNetwork/advantages/BiasAdd"
  input: "DQNetwork/Mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "DQNetwork/Sub"
  op: "Sub"
  input: "DQNetwork/advantages/BiasAdd"
  input: "DQNetwork/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "DQNetwork/add"
  op: "Add"
  input: "DQNetwork/value/BiasAdd"
  input: "DQNetwork/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "DQNetwork/Mul"
  op: "Mul"
  input: "DQNetwork/add"
  input: "DQNetwork/actions_"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "DQNetwork/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "DQNetwork/Sum"
  op: "Sum"
  input: "DQNetwork/Mul"
  input: "DQNetwork/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "DQNetwork/sub_1"
  op: "Sub"
  input: "DQNetwork/target"
  input: "DQNetwork/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "DQNetwork/Abs"
  op: "Abs"
  input: "DQNetwork/sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "DQNetwork/SquaredDifference"
  op: "SquaredDifference"
  input: "DQNetwork/target"
  input: "DQNetwork/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "DQNetwork/mul_1"
  op: "Mul"
  input: "DQNetwork/IS_weights"
  input: "DQNetwork/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "DQNetwork/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "DQNetwork/Mean_1"
  op: "Mean"
  input: "DQNetwork/mul_1"
  input: "DQNetwork/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "DQNetwork/gradients/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "DQNetwork/gradients/grad_ys_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "DQNetwork/gradients/Fill"
  op: "Fill"
  input: "DQNetwork/gradients/Shape"
  input: "DQNetwork/gradients/grad_ys_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/Mean_1_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/Mean_1_grad/Reshape"
  op: "Reshape"
  input: "DQNetwork/gradients/Fill"
  input: "DQNetwork/gradients/DQNetwork/Mean_1_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/Mean_1_grad/Shape"
  op: "Shape"
  input: "DQNetwork/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/Mean_1_grad/Tile"
  op: "Tile"
  input: "DQNetwork/gradients/DQNetwork/Mean_1_grad/Reshape"
  input: "DQNetwork/gradients/DQNetwork/Mean_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/Mean_1_grad/Shape_1"
  op: "Shape"
  input: "DQNetwork/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/Mean_1_grad/Shape_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/Mean_1_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/Mean_1_grad/Prod"
  op: "Prod"
  input: "DQNetwork/gradients/DQNetwork/Mean_1_grad/Shape_1"
  input: "DQNetwork/gradients/DQNetwork/Mean_1_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/Mean_1_grad/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/Mean_1_grad/Prod_1"
  op: "Prod"
  input: "DQNetwork/gradients/DQNetwork/Mean_1_grad/Shape_2"
  input: "DQNetwork/gradients/DQNetwork/Mean_1_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/Mean_1_grad/Maximum/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/Mean_1_grad/Maximum"
  op: "Maximum"
  input: "DQNetwork/gradients/DQNetwork/Mean_1_grad/Prod_1"
  input: "DQNetwork/gradients/DQNetwork/Mean_1_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/Mean_1_grad/floordiv"
  op: "FloorDiv"
  input: "DQNetwork/gradients/DQNetwork/Mean_1_grad/Prod"
  input: "DQNetwork/gradients/DQNetwork/Mean_1_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/Mean_1_grad/Cast"
  op: "Cast"
  input: "DQNetwork/gradients/DQNetwork/Mean_1_grad/floordiv"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/Mean_1_grad/truediv"
  op: "RealDiv"
  input: "DQNetwork/gradients/DQNetwork/Mean_1_grad/Tile"
  input: "DQNetwork/gradients/DQNetwork/Mean_1_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/mul_1_grad/Shape"
  op: "Shape"
  input: "DQNetwork/IS_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/mul_1_grad/Shape_1"
  op: "Shape"
  input: "DQNetwork/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "DQNetwork/gradients/DQNetwork/mul_1_grad/Shape"
  input: "DQNetwork/gradients/DQNetwork/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/mul_1_grad/Mul"
  op: "Mul"
  input: "DQNetwork/gradients/DQNetwork/Mean_1_grad/truediv"
  input: "DQNetwork/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/mul_1_grad/Sum"
  op: "Sum"
  input: "DQNetwork/gradients/DQNetwork/mul_1_grad/Mul"
  input: "DQNetwork/gradients/DQNetwork/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/mul_1_grad/Reshape"
  op: "Reshape"
  input: "DQNetwork/gradients/DQNetwork/mul_1_grad/Sum"
  input: "DQNetwork/gradients/DQNetwork/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/mul_1_grad/Mul_1"
  op: "Mul"
  input: "DQNetwork/IS_weights"
  input: "DQNetwork/gradients/DQNetwork/Mean_1_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/mul_1_grad/Sum_1"
  op: "Sum"
  input: "DQNetwork/gradients/DQNetwork/mul_1_grad/Mul_1"
  input: "DQNetwork/gradients/DQNetwork/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "DQNetwork/gradients/DQNetwork/mul_1_grad/Sum_1"
  input: "DQNetwork/gradients/DQNetwork/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^DQNetwork/gradients/DQNetwork/mul_1_grad/Reshape"
  input: "^DQNetwork/gradients/DQNetwork/mul_1_grad/Reshape_1"
}
node {
  name: "DQNetwork/gradients/DQNetwork/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "DQNetwork/gradients/DQNetwork/mul_1_grad/Reshape"
  input: "^DQNetwork/gradients/DQNetwork/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/gradients/DQNetwork/mul_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "DQNetwork/gradients/DQNetwork/mul_1_grad/Reshape_1"
  input: "^DQNetwork/gradients/DQNetwork/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/gradients/DQNetwork/mul_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/SquaredDifference_grad/Shape"
  op: "Shape"
  input: "DQNetwork/target"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/SquaredDifference_grad/Shape_1"
  op: "Shape"
  input: "DQNetwork/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "DQNetwork/gradients/DQNetwork/SquaredDifference_grad/Shape"
  input: "DQNetwork/gradients/DQNetwork/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^DQNetwork/gradients/DQNetwork/mul_1_grad/tuple/control_dependency_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/SquaredDifference_grad/mul"
  op: "Mul"
  input: "DQNetwork/gradients/DQNetwork/SquaredDifference_grad/scalar"
  input: "DQNetwork/gradients/DQNetwork/mul_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/SquaredDifference_grad/sub"
  op: "Sub"
  input: "DQNetwork/target"
  input: "DQNetwork/Sum"
  input: "^DQNetwork/gradients/DQNetwork/mul_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "DQNetwork/gradients/DQNetwork/SquaredDifference_grad/mul"
  input: "DQNetwork/gradients/DQNetwork/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "DQNetwork/gradients/DQNetwork/SquaredDifference_grad/mul_1"
  input: "DQNetwork/gradients/DQNetwork/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "DQNetwork/gradients/DQNetwork/SquaredDifference_grad/Sum"
  input: "DQNetwork/gradients/DQNetwork/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "DQNetwork/gradients/DQNetwork/SquaredDifference_grad/mul_1"
  input: "DQNetwork/gradients/DQNetwork/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "DQNetwork/gradients/DQNetwork/SquaredDifference_grad/Sum_1"
  input: "DQNetwork/gradients/DQNetwork/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "DQNetwork/gradients/DQNetwork/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/SquaredDifference_grad/tuple/group_deps"
  op: "NoOp"
  input: "^DQNetwork/gradients/DQNetwork/SquaredDifference_grad/Neg"
  input: "^DQNetwork/gradients/DQNetwork/SquaredDifference_grad/Reshape"
}
node {
  name: "DQNetwork/gradients/DQNetwork/SquaredDifference_grad/tuple/control_dependency"
  op: "Identity"
  input: "DQNetwork/gradients/DQNetwork/SquaredDifference_grad/Reshape"
  input: "^DQNetwork/gradients/DQNetwork/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/gradients/DQNetwork/SquaredDifference_grad/Reshape"
      }
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/SquaredDifference_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "DQNetwork/gradients/DQNetwork/SquaredDifference_grad/Neg"
  input: "^DQNetwork/gradients/DQNetwork/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/gradients/DQNetwork/SquaredDifference_grad/Neg"
      }
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/Sum_grad/Shape"
  op: "Shape"
  input: "DQNetwork/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/Sum_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/gradients/DQNetwork/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/Sum_grad/add"
  op: "Add"
  input: "DQNetwork/Sum/reduction_indices"
  input: "DQNetwork/gradients/DQNetwork/Sum_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/gradients/DQNetwork/Sum_grad/Shape"
      }
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/Sum_grad/mod"
  op: "FloorMod"
  input: "DQNetwork/gradients/DQNetwork/Sum_grad/add"
  input: "DQNetwork/gradients/DQNetwork/Sum_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/gradients/DQNetwork/Sum_grad/Shape"
      }
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/Sum_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/gradients/DQNetwork/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/Sum_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/gradients/DQNetwork/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/Sum_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/gradients/DQNetwork/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/Sum_grad/range"
  op: "Range"
  input: "DQNetwork/gradients/DQNetwork/Sum_grad/range/start"
  input: "DQNetwork/gradients/DQNetwork/Sum_grad/Size"
  input: "DQNetwork/gradients/DQNetwork/Sum_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/gradients/DQNetwork/Sum_grad/Shape"
      }
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/Sum_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/gradients/DQNetwork/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/Sum_grad/Fill"
  op: "Fill"
  input: "DQNetwork/gradients/DQNetwork/Sum_grad/Shape_1"
  input: "DQNetwork/gradients/DQNetwork/Sum_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/gradients/DQNetwork/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/Sum_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "DQNetwork/gradients/DQNetwork/Sum_grad/range"
  input: "DQNetwork/gradients/DQNetwork/Sum_grad/mod"
  input: "DQNetwork/gradients/DQNetwork/Sum_grad/Shape"
  input: "DQNetwork/gradients/DQNetwork/Sum_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/gradients/DQNetwork/Sum_grad/Shape"
      }
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/Sum_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/gradients/DQNetwork/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/Sum_grad/Maximum"
  op: "Maximum"
  input: "DQNetwork/gradients/DQNetwork/Sum_grad/DynamicStitch"
  input: "DQNetwork/gradients/DQNetwork/Sum_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/gradients/DQNetwork/Sum_grad/Shape"
      }
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/Sum_grad/floordiv"
  op: "FloorDiv"
  input: "DQNetwork/gradients/DQNetwork/Sum_grad/Shape"
  input: "DQNetwork/gradients/DQNetwork/Sum_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/gradients/DQNetwork/Sum_grad/Shape"
      }
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/Sum_grad/Reshape"
  op: "Reshape"
  input: "DQNetwork/gradients/DQNetwork/SquaredDifference_grad/tuple/control_dependency_1"
  input: "DQNetwork/gradients/DQNetwork/Sum_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/Sum_grad/Tile"
  op: "Tile"
  input: "DQNetwork/gradients/DQNetwork/Sum_grad/Reshape"
  input: "DQNetwork/gradients/DQNetwork/Sum_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/Mul_grad/Shape"
  op: "Shape"
  input: "DQNetwork/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/Mul_grad/Shape_1"
  op: "Shape"
  input: "DQNetwork/actions_"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "DQNetwork/gradients/DQNetwork/Mul_grad/Shape"
  input: "DQNetwork/gradients/DQNetwork/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/Mul_grad/Mul"
  op: "Mul"
  input: "DQNetwork/gradients/DQNetwork/Sum_grad/Tile"
  input: "DQNetwork/actions_"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/Mul_grad/Sum"
  op: "Sum"
  input: "DQNetwork/gradients/DQNetwork/Mul_grad/Mul"
  input: "DQNetwork/gradients/DQNetwork/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/Mul_grad/Reshape"
  op: "Reshape"
  input: "DQNetwork/gradients/DQNetwork/Mul_grad/Sum"
  input: "DQNetwork/gradients/DQNetwork/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/Mul_grad/Mul_1"
  op: "Mul"
  input: "DQNetwork/add"
  input: "DQNetwork/gradients/DQNetwork/Sum_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/Mul_grad/Sum_1"
  op: "Sum"
  input: "DQNetwork/gradients/DQNetwork/Mul_grad/Mul_1"
  input: "DQNetwork/gradients/DQNetwork/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "DQNetwork/gradients/DQNetwork/Mul_grad/Sum_1"
  input: "DQNetwork/gradients/DQNetwork/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^DQNetwork/gradients/DQNetwork/Mul_grad/Reshape"
  input: "^DQNetwork/gradients/DQNetwork/Mul_grad/Reshape_1"
}
node {
  name: "DQNetwork/gradients/DQNetwork/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "DQNetwork/gradients/DQNetwork/Mul_grad/Reshape"
  input: "^DQNetwork/gradients/DQNetwork/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/gradients/DQNetwork/Mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "DQNetwork/gradients/DQNetwork/Mul_grad/Reshape_1"
  input: "^DQNetwork/gradients/DQNetwork/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/gradients/DQNetwork/Mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/add_grad/Shape"
  op: "Shape"
  input: "DQNetwork/value/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/add_grad/Shape_1"
  op: "Shape"
  input: "DQNetwork/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "DQNetwork/gradients/DQNetwork/add_grad/Shape"
  input: "DQNetwork/gradients/DQNetwork/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/add_grad/Sum"
  op: "Sum"
  input: "DQNetwork/gradients/DQNetwork/Mul_grad/tuple/control_dependency"
  input: "DQNetwork/gradients/DQNetwork/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/add_grad/Reshape"
  op: "Reshape"
  input: "DQNetwork/gradients/DQNetwork/add_grad/Sum"
  input: "DQNetwork/gradients/DQNetwork/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/add_grad/Sum_1"
  op: "Sum"
  input: "DQNetwork/gradients/DQNetwork/Mul_grad/tuple/control_dependency"
  input: "DQNetwork/gradients/DQNetwork/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/add_grad/Reshape_1"
  op: "Reshape"
  input: "DQNetwork/gradients/DQNetwork/add_grad/Sum_1"
  input: "DQNetwork/gradients/DQNetwork/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^DQNetwork/gradients/DQNetwork/add_grad/Reshape"
  input: "^DQNetwork/gradients/DQNetwork/add_grad/Reshape_1"
}
node {
  name: "DQNetwork/gradients/DQNetwork/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "DQNetwork/gradients/DQNetwork/add_grad/Reshape"
  input: "^DQNetwork/gradients/DQNetwork/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/gradients/DQNetwork/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "DQNetwork/gradients/DQNetwork/add_grad/Reshape_1"
  input: "^DQNetwork/gradients/DQNetwork/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/gradients/DQNetwork/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/value/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "DQNetwork/gradients/DQNetwork/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/value/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^DQNetwork/gradients/DQNetwork/add_grad/tuple/control_dependency"
  input: "^DQNetwork/gradients/DQNetwork/value/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "DQNetwork/gradients/DQNetwork/value/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "DQNetwork/gradients/DQNetwork/add_grad/tuple/control_dependency"
  input: "^DQNetwork/gradients/DQNetwork/value/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/gradients/DQNetwork/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/value/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "DQNetwork/gradients/DQNetwork/value/BiasAdd_grad/BiasAddGrad"
  input: "^DQNetwork/gradients/DQNetwork/value/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/gradients/DQNetwork/value/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/Sub_grad/Shape"
  op: "Shape"
  input: "DQNetwork/advantages/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/Sub_grad/Shape_1"
  op: "Shape"
  input: "DQNetwork/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/Sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "DQNetwork/gradients/DQNetwork/Sub_grad/Shape"
  input: "DQNetwork/gradients/DQNetwork/Sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/Sub_grad/Sum"
  op: "Sum"
  input: "DQNetwork/gradients/DQNetwork/add_grad/tuple/control_dependency_1"
  input: "DQNetwork/gradients/DQNetwork/Sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/Sub_grad/Reshape"
  op: "Reshape"
  input: "DQNetwork/gradients/DQNetwork/Sub_grad/Sum"
  input: "DQNetwork/gradients/DQNetwork/Sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/Sub_grad/Sum_1"
  op: "Sum"
  input: "DQNetwork/gradients/DQNetwork/add_grad/tuple/control_dependency_1"
  input: "DQNetwork/gradients/DQNetwork/Sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/Sub_grad/Neg"
  op: "Neg"
  input: "DQNetwork/gradients/DQNetwork/Sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/Sub_grad/Reshape_1"
  op: "Reshape"
  input: "DQNetwork/gradients/DQNetwork/Sub_grad/Neg"
  input: "DQNetwork/gradients/DQNetwork/Sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/Sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^DQNetwork/gradients/DQNetwork/Sub_grad/Reshape"
  input: "^DQNetwork/gradients/DQNetwork/Sub_grad/Reshape_1"
}
node {
  name: "DQNetwork/gradients/DQNetwork/Sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "DQNetwork/gradients/DQNetwork/Sub_grad/Reshape"
  input: "^DQNetwork/gradients/DQNetwork/Sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/gradients/DQNetwork/Sub_grad/Reshape"
      }
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/Sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "DQNetwork/gradients/DQNetwork/Sub_grad/Reshape_1"
  input: "^DQNetwork/gradients/DQNetwork/Sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/gradients/DQNetwork/Sub_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/value/MatMul_grad/MatMul"
  op: "MatMul"
  input: "DQNetwork/gradients/DQNetwork/value/BiasAdd_grad/tuple/control_dependency"
  input: "DQNetwork/value/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/value/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "DQNetwork/value_fc/Elu"
  input: "DQNetwork/gradients/DQNetwork/value/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/value/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^DQNetwork/gradients/DQNetwork/value/MatMul_grad/MatMul"
  input: "^DQNetwork/gradients/DQNetwork/value/MatMul_grad/MatMul_1"
}
node {
  name: "DQNetwork/gradients/DQNetwork/value/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "DQNetwork/gradients/DQNetwork/value/MatMul_grad/MatMul"
  input: "^DQNetwork/gradients/DQNetwork/value/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/gradients/DQNetwork/value/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/value/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "DQNetwork/gradients/DQNetwork/value/MatMul_grad/MatMul_1"
  input: "^DQNetwork/gradients/DQNetwork/value/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/gradients/DQNetwork/value/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/Mean_grad/Shape"
  op: "Shape"
  input: "DQNetwork/advantages/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/Mean_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/gradients/DQNetwork/Mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/Mean_grad/add"
  op: "Add"
  input: "DQNetwork/Mean/reduction_indices"
  input: "DQNetwork/gradients/DQNetwork/Mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/gradients/DQNetwork/Mean_grad/Shape"
      }
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/Mean_grad/mod"
  op: "FloorMod"
  input: "DQNetwork/gradients/DQNetwork/Mean_grad/add"
  input: "DQNetwork/gradients/DQNetwork/Mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/gradients/DQNetwork/Mean_grad/Shape"
      }
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/Mean_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/gradients/DQNetwork/Mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/Mean_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/gradients/DQNetwork/Mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/Mean_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/gradients/DQNetwork/Mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/Mean_grad/range"
  op: "Range"
  input: "DQNetwork/gradients/DQNetwork/Mean_grad/range/start"
  input: "DQNetwork/gradients/DQNetwork/Mean_grad/Size"
  input: "DQNetwork/gradients/DQNetwork/Mean_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/gradients/DQNetwork/Mean_grad/Shape"
      }
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/Mean_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/gradients/DQNetwork/Mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/Mean_grad/Fill"
  op: "Fill"
  input: "DQNetwork/gradients/DQNetwork/Mean_grad/Shape_1"
  input: "DQNetwork/gradients/DQNetwork/Mean_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/gradients/DQNetwork/Mean_grad/Shape"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/Mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "DQNetwork/gradients/DQNetwork/Mean_grad/range"
  input: "DQNetwork/gradients/DQNetwork/Mean_grad/mod"
  input: "DQNetwork/gradients/DQNetwork/Mean_grad/Shape"
  input: "DQNetwork/gradients/DQNetwork/Mean_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/gradients/DQNetwork/Mean_grad/Shape"
      }
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/Mean_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/gradients/DQNetwork/Mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/Mean_grad/Maximum"
  op: "Maximum"
  input: "DQNetwork/gradients/DQNetwork/Mean_grad/DynamicStitch"
  input: "DQNetwork/gradients/DQNetwork/Mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/gradients/DQNetwork/Mean_grad/Shape"
      }
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/Mean_grad/floordiv"
  op: "FloorDiv"
  input: "DQNetwork/gradients/DQNetwork/Mean_grad/Shape"
  input: "DQNetwork/gradients/DQNetwork/Mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/gradients/DQNetwork/Mean_grad/Shape"
      }
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/Mean_grad/Reshape"
  op: "Reshape"
  input: "DQNetwork/gradients/DQNetwork/Sub_grad/tuple/control_dependency_1"
  input: "DQNetwork/gradients/DQNetwork/Mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/Mean_grad/Tile"
  op: "Tile"
  input: "DQNetwork/gradients/DQNetwork/Mean_grad/Reshape"
  input: "DQNetwork/gradients/DQNetwork/Mean_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/Mean_grad/Shape_2"
  op: "Shape"
  input: "DQNetwork/advantages/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/Mean_grad/Shape_3"
  op: "Shape"
  input: "DQNetwork/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/Mean_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/Mean_grad/Prod"
  op: "Prod"
  input: "DQNetwork/gradients/DQNetwork/Mean_grad/Shape_2"
  input: "DQNetwork/gradients/DQNetwork/Mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/Mean_grad/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/Mean_grad/Prod_1"
  op: "Prod"
  input: "DQNetwork/gradients/DQNetwork/Mean_grad/Shape_3"
  input: "DQNetwork/gradients/DQNetwork/Mean_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/Mean_grad/Maximum_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/Mean_grad/Maximum_1"
  op: "Maximum"
  input: "DQNetwork/gradients/DQNetwork/Mean_grad/Prod_1"
  input: "DQNetwork/gradients/DQNetwork/Mean_grad/Maximum_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/Mean_grad/floordiv_1"
  op: "FloorDiv"
  input: "DQNetwork/gradients/DQNetwork/Mean_grad/Prod"
  input: "DQNetwork/gradients/DQNetwork/Mean_grad/Maximum_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/Mean_grad/Cast"
  op: "Cast"
  input: "DQNetwork/gradients/DQNetwork/Mean_grad/floordiv_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/Mean_grad/truediv"
  op: "RealDiv"
  input: "DQNetwork/gradients/DQNetwork/Mean_grad/Tile"
  input: "DQNetwork/gradients/DQNetwork/Mean_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/value_fc/Elu_grad/EluGrad"
  op: "EluGrad"
  input: "DQNetwork/gradients/DQNetwork/value/MatMul_grad/tuple/control_dependency"
  input: "DQNetwork/value_fc/Elu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "DQNetwork/gradients/AddN"
  op: "AddN"
  input: "DQNetwork/gradients/DQNetwork/Sub_grad/tuple/control_dependency"
  input: "DQNetwork/gradients/DQNetwork/Mean_grad/truediv"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/gradients/DQNetwork/Sub_grad/Reshape"
      }
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/advantages/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "DQNetwork/gradients/AddN"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/advantages/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^DQNetwork/gradients/AddN"
  input: "^DQNetwork/gradients/DQNetwork/advantages/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "DQNetwork/gradients/DQNetwork/advantages/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "DQNetwork/gradients/AddN"
  input: "^DQNetwork/gradients/DQNetwork/advantages/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/gradients/DQNetwork/Sub_grad/Reshape"
      }
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/advantages/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "DQNetwork/gradients/DQNetwork/advantages/BiasAdd_grad/BiasAddGrad"
  input: "^DQNetwork/gradients/DQNetwork/advantages/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/gradients/DQNetwork/advantages/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/value_fc/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "DQNetwork/gradients/DQNetwork/value_fc/Elu_grad/EluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/value_fc/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^DQNetwork/gradients/DQNetwork/value_fc/BiasAdd_grad/BiasAddGrad"
  input: "^DQNetwork/gradients/DQNetwork/value_fc/Elu_grad/EluGrad"
}
node {
  name: "DQNetwork/gradients/DQNetwork/value_fc/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "DQNetwork/gradients/DQNetwork/value_fc/Elu_grad/EluGrad"
  input: "^DQNetwork/gradients/DQNetwork/value_fc/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/gradients/DQNetwork/value_fc/Elu_grad/EluGrad"
      }
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/value_fc/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "DQNetwork/gradients/DQNetwork/value_fc/BiasAdd_grad/BiasAddGrad"
  input: "^DQNetwork/gradients/DQNetwork/value_fc/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/gradients/DQNetwork/value_fc/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/advantages/MatMul_grad/MatMul"
  op: "MatMul"
  input: "DQNetwork/gradients/DQNetwork/advantages/BiasAdd_grad/tuple/control_dependency"
  input: "DQNetwork/advantages/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/advantages/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "DQNetwork/advantage_fc/Elu"
  input: "DQNetwork/gradients/DQNetwork/advantages/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/advantages/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^DQNetwork/gradients/DQNetwork/advantages/MatMul_grad/MatMul"
  input: "^DQNetwork/gradients/DQNetwork/advantages/MatMul_grad/MatMul_1"
}
node {
  name: "DQNetwork/gradients/DQNetwork/advantages/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "DQNetwork/gradients/DQNetwork/advantages/MatMul_grad/MatMul"
  input: "^DQNetwork/gradients/DQNetwork/advantages/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/gradients/DQNetwork/advantages/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/advantages/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "DQNetwork/gradients/DQNetwork/advantages/MatMul_grad/MatMul_1"
  input: "^DQNetwork/gradients/DQNetwork/advantages/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/gradients/DQNetwork/advantages/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/value_fc/MatMul_grad/MatMul"
  op: "MatMul"
  input: "DQNetwork/gradients/DQNetwork/value_fc/BiasAdd_grad/tuple/control_dependency"
  input: "DQNetwork/value_fc/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/value_fc/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "DQNetwork/flatten/Reshape"
  input: "DQNetwork/gradients/DQNetwork/value_fc/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/value_fc/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^DQNetwork/gradients/DQNetwork/value_fc/MatMul_grad/MatMul"
  input: "^DQNetwork/gradients/DQNetwork/value_fc/MatMul_grad/MatMul_1"
}
node {
  name: "DQNetwork/gradients/DQNetwork/value_fc/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "DQNetwork/gradients/DQNetwork/value_fc/MatMul_grad/MatMul"
  input: "^DQNetwork/gradients/DQNetwork/value_fc/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/gradients/DQNetwork/value_fc/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/value_fc/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "DQNetwork/gradients/DQNetwork/value_fc/MatMul_grad/MatMul_1"
  input: "^DQNetwork/gradients/DQNetwork/value_fc/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/gradients/DQNetwork/value_fc/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/advantage_fc/Elu_grad/EluGrad"
  op: "EluGrad"
  input: "DQNetwork/gradients/DQNetwork/advantages/MatMul_grad/tuple/control_dependency"
  input: "DQNetwork/advantage_fc/Elu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/advantage_fc/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "DQNetwork/gradients/DQNetwork/advantage_fc/Elu_grad/EluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/advantage_fc/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^DQNetwork/gradients/DQNetwork/advantage_fc/BiasAdd_grad/BiasAddGrad"
  input: "^DQNetwork/gradients/DQNetwork/advantage_fc/Elu_grad/EluGrad"
}
node {
  name: "DQNetwork/gradients/DQNetwork/advantage_fc/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "DQNetwork/gradients/DQNetwork/advantage_fc/Elu_grad/EluGrad"
  input: "^DQNetwork/gradients/DQNetwork/advantage_fc/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/gradients/DQNetwork/advantage_fc/Elu_grad/EluGrad"
      }
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/advantage_fc/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "DQNetwork/gradients/DQNetwork/advantage_fc/BiasAdd_grad/BiasAddGrad"
  input: "^DQNetwork/gradients/DQNetwork/advantage_fc/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/gradients/DQNetwork/advantage_fc/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/advantage_fc/MatMul_grad/MatMul"
  op: "MatMul"
  input: "DQNetwork/gradients/DQNetwork/advantage_fc/BiasAdd_grad/tuple/control_dependency"
  input: "DQNetwork/advantage_fc/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/advantage_fc/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "DQNetwork/flatten/Reshape"
  input: "DQNetwork/gradients/DQNetwork/advantage_fc/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/advantage_fc/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^DQNetwork/gradients/DQNetwork/advantage_fc/MatMul_grad/MatMul"
  input: "^DQNetwork/gradients/DQNetwork/advantage_fc/MatMul_grad/MatMul_1"
}
node {
  name: "DQNetwork/gradients/DQNetwork/advantage_fc/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "DQNetwork/gradients/DQNetwork/advantage_fc/MatMul_grad/MatMul"
  input: "^DQNetwork/gradients/DQNetwork/advantage_fc/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/gradients/DQNetwork/advantage_fc/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/advantage_fc/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "DQNetwork/gradients/DQNetwork/advantage_fc/MatMul_grad/MatMul_1"
  input: "^DQNetwork/gradients/DQNetwork/advantage_fc/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/gradients/DQNetwork/advantage_fc/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "DQNetwork/gradients/AddN_1"
  op: "AddN"
  input: "DQNetwork/gradients/DQNetwork/value_fc/MatMul_grad/tuple/control_dependency"
  input: "DQNetwork/gradients/DQNetwork/advantage_fc/MatMul_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/gradients/DQNetwork/value_fc/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/flatten/Reshape_grad/Shape"
  op: "Shape"
  input: "DQNetwork/mlp3/Elu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/flatten/Reshape_grad/Reshape"
  op: "Reshape"
  input: "DQNetwork/gradients/AddN_1"
  input: "DQNetwork/gradients/DQNetwork/flatten/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/mlp3/Elu_grad/EluGrad"
  op: "EluGrad"
  input: "DQNetwork/gradients/DQNetwork/flatten/Reshape_grad/Reshape"
  input: "DQNetwork/mlp3/Elu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/mlp3/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "DQNetwork/gradients/DQNetwork/mlp3/Elu_grad/EluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/mlp3/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^DQNetwork/gradients/DQNetwork/mlp3/BiasAdd_grad/BiasAddGrad"
  input: "^DQNetwork/gradients/DQNetwork/mlp3/Elu_grad/EluGrad"
}
node {
  name: "DQNetwork/gradients/DQNetwork/mlp3/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "DQNetwork/gradients/DQNetwork/mlp3/Elu_grad/EluGrad"
  input: "^DQNetwork/gradients/DQNetwork/mlp3/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/gradients/DQNetwork/mlp3/Elu_grad/EluGrad"
      }
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/mlp3/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "DQNetwork/gradients/DQNetwork/mlp3/BiasAdd_grad/BiasAddGrad"
  input: "^DQNetwork/gradients/DQNetwork/mlp3/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/gradients/DQNetwork/mlp3/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/mlp3/Tensordot_grad/Shape"
  op: "Shape"
  input: "DQNetwork/mlp3/Tensordot/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/mlp3/Tensordot_grad/Reshape"
  op: "Reshape"
  input: "DQNetwork/gradients/DQNetwork/mlp3/BiasAdd_grad/tuple/control_dependency"
  input: "DQNetwork/gradients/DQNetwork/mlp3/Tensordot_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/mlp3/Tensordot/MatMul_grad/MatMul"
  op: "MatMul"
  input: "DQNetwork/gradients/DQNetwork/mlp3/Tensordot_grad/Reshape"
  input: "DQNetwork/mlp3/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/mlp3/Tensordot/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "DQNetwork/mlp3/Tensordot/Reshape"
  input: "DQNetwork/gradients/DQNetwork/mlp3/Tensordot_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/mlp3/Tensordot/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^DQNetwork/gradients/DQNetwork/mlp3/Tensordot/MatMul_grad/MatMul"
  input: "^DQNetwork/gradients/DQNetwork/mlp3/Tensordot/MatMul_grad/MatMul_1"
}
node {
  name: "DQNetwork/gradients/DQNetwork/mlp3/Tensordot/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "DQNetwork/gradients/DQNetwork/mlp3/Tensordot/MatMul_grad/MatMul"
  input: "^DQNetwork/gradients/DQNetwork/mlp3/Tensordot/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/gradients/DQNetwork/mlp3/Tensordot/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/mlp3/Tensordot/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "DQNetwork/gradients/DQNetwork/mlp3/Tensordot/MatMul_grad/MatMul_1"
  input: "^DQNetwork/gradients/DQNetwork/mlp3/Tensordot/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/gradients/DQNetwork/mlp3/Tensordot/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/mlp3/Tensordot/Reshape_grad/Shape"
  op: "Shape"
  input: "DQNetwork/mlp3/Tensordot/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/mlp3/Tensordot/Reshape_grad/Reshape"
  op: "Reshape"
  input: "DQNetwork/gradients/DQNetwork/mlp3/Tensordot/MatMul_grad/tuple/control_dependency"
  input: "DQNetwork/gradients/DQNetwork/mlp3/Tensordot/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/mlp3/Tensordot/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/mlp3/Tensordot/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "DQNetwork/gradients/DQNetwork/mlp3/Tensordot/MatMul_grad/tuple/control_dependency_1"
  input: "DQNetwork/gradients/DQNetwork/mlp3/Tensordot/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/mlp3/Tensordot/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "DQNetwork/mlp3/Tensordot/concat"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/mlp3/Tensordot/transpose_grad/transpose"
  op: "Transpose"
  input: "DQNetwork/gradients/DQNetwork/mlp3/Tensordot/Reshape_grad/Reshape"
  input: "DQNetwork/gradients/DQNetwork/mlp3/Tensordot/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/mlp3/Tensordot/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "DQNetwork/mlp3/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/mlp3/Tensordot/transpose_1_grad/transpose"
  op: "Transpose"
  input: "DQNetwork/gradients/DQNetwork/mlp3/Tensordot/Reshape_1_grad/Reshape"
  input: "DQNetwork/gradients/DQNetwork/mlp3/Tensordot/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/mlp2/Elu_grad/EluGrad"
  op: "EluGrad"
  input: "DQNetwork/gradients/DQNetwork/mlp3/Tensordot/transpose_grad/transpose"
  input: "DQNetwork/mlp2/Elu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/mlp2/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "DQNetwork/gradients/DQNetwork/mlp2/Elu_grad/EluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/mlp2/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^DQNetwork/gradients/DQNetwork/mlp2/BiasAdd_grad/BiasAddGrad"
  input: "^DQNetwork/gradients/DQNetwork/mlp2/Elu_grad/EluGrad"
}
node {
  name: "DQNetwork/gradients/DQNetwork/mlp2/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "DQNetwork/gradients/DQNetwork/mlp2/Elu_grad/EluGrad"
  input: "^DQNetwork/gradients/DQNetwork/mlp2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/gradients/DQNetwork/mlp2/Elu_grad/EluGrad"
      }
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/mlp2/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "DQNetwork/gradients/DQNetwork/mlp2/BiasAdd_grad/BiasAddGrad"
  input: "^DQNetwork/gradients/DQNetwork/mlp2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/gradients/DQNetwork/mlp2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/mlp2/Tensordot_grad/Shape"
  op: "Shape"
  input: "DQNetwork/mlp2/Tensordot/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/mlp2/Tensordot_grad/Reshape"
  op: "Reshape"
  input: "DQNetwork/gradients/DQNetwork/mlp2/BiasAdd_grad/tuple/control_dependency"
  input: "DQNetwork/gradients/DQNetwork/mlp2/Tensordot_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/mlp2/Tensordot/MatMul_grad/MatMul"
  op: "MatMul"
  input: "DQNetwork/gradients/DQNetwork/mlp2/Tensordot_grad/Reshape"
  input: "DQNetwork/mlp2/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/mlp2/Tensordot/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "DQNetwork/mlp2/Tensordot/Reshape"
  input: "DQNetwork/gradients/DQNetwork/mlp2/Tensordot_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/mlp2/Tensordot/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^DQNetwork/gradients/DQNetwork/mlp2/Tensordot/MatMul_grad/MatMul"
  input: "^DQNetwork/gradients/DQNetwork/mlp2/Tensordot/MatMul_grad/MatMul_1"
}
node {
  name: "DQNetwork/gradients/DQNetwork/mlp2/Tensordot/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "DQNetwork/gradients/DQNetwork/mlp2/Tensordot/MatMul_grad/MatMul"
  input: "^DQNetwork/gradients/DQNetwork/mlp2/Tensordot/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/gradients/DQNetwork/mlp2/Tensordot/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/mlp2/Tensordot/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "DQNetwork/gradients/DQNetwork/mlp2/Tensordot/MatMul_grad/MatMul_1"
  input: "^DQNetwork/gradients/DQNetwork/mlp2/Tensordot/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/gradients/DQNetwork/mlp2/Tensordot/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/mlp2/Tensordot/Reshape_grad/Shape"
  op: "Shape"
  input: "DQNetwork/mlp2/Tensordot/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/mlp2/Tensordot/Reshape_grad/Reshape"
  op: "Reshape"
  input: "DQNetwork/gradients/DQNetwork/mlp2/Tensordot/MatMul_grad/tuple/control_dependency"
  input: "DQNetwork/gradients/DQNetwork/mlp2/Tensordot/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/mlp2/Tensordot/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/mlp2/Tensordot/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "DQNetwork/gradients/DQNetwork/mlp2/Tensordot/MatMul_grad/tuple/control_dependency_1"
  input: "DQNetwork/gradients/DQNetwork/mlp2/Tensordot/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/mlp2/Tensordot/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "DQNetwork/mlp2/Tensordot/concat"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/mlp2/Tensordot/transpose_grad/transpose"
  op: "Transpose"
  input: "DQNetwork/gradients/DQNetwork/mlp2/Tensordot/Reshape_grad/Reshape"
  input: "DQNetwork/gradients/DQNetwork/mlp2/Tensordot/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/mlp2/Tensordot/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "DQNetwork/mlp2/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/mlp2/Tensordot/transpose_1_grad/transpose"
  op: "Transpose"
  input: "DQNetwork/gradients/DQNetwork/mlp2/Tensordot/Reshape_1_grad/Reshape"
  input: "DQNetwork/gradients/DQNetwork/mlp2/Tensordot/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/mlp1/Elu_grad/EluGrad"
  op: "EluGrad"
  input: "DQNetwork/gradients/DQNetwork/mlp2/Tensordot/transpose_grad/transpose"
  input: "DQNetwork/mlp1/Elu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/mlp1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "DQNetwork/gradients/DQNetwork/mlp1/Elu_grad/EluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/mlp1/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^DQNetwork/gradients/DQNetwork/mlp1/BiasAdd_grad/BiasAddGrad"
  input: "^DQNetwork/gradients/DQNetwork/mlp1/Elu_grad/EluGrad"
}
node {
  name: "DQNetwork/gradients/DQNetwork/mlp1/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "DQNetwork/gradients/DQNetwork/mlp1/Elu_grad/EluGrad"
  input: "^DQNetwork/gradients/DQNetwork/mlp1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/gradients/DQNetwork/mlp1/Elu_grad/EluGrad"
      }
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/mlp1/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "DQNetwork/gradients/DQNetwork/mlp1/BiasAdd_grad/BiasAddGrad"
  input: "^DQNetwork/gradients/DQNetwork/mlp1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/gradients/DQNetwork/mlp1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/mlp1/Tensordot_grad/Shape"
  op: "Shape"
  input: "DQNetwork/mlp1/Tensordot/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/mlp1/Tensordot_grad/Reshape"
  op: "Reshape"
  input: "DQNetwork/gradients/DQNetwork/mlp1/BiasAdd_grad/tuple/control_dependency"
  input: "DQNetwork/gradients/DQNetwork/mlp1/Tensordot_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/mlp1/Tensordot/MatMul_grad/MatMul"
  op: "MatMul"
  input: "DQNetwork/gradients/DQNetwork/mlp1/Tensordot_grad/Reshape"
  input: "DQNetwork/mlp1/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/mlp1/Tensordot/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "DQNetwork/mlp1/Tensordot/Reshape"
  input: "DQNetwork/gradients/DQNetwork/mlp1/Tensordot_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/mlp1/Tensordot/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^DQNetwork/gradients/DQNetwork/mlp1/Tensordot/MatMul_grad/MatMul"
  input: "^DQNetwork/gradients/DQNetwork/mlp1/Tensordot/MatMul_grad/MatMul_1"
}
node {
  name: "DQNetwork/gradients/DQNetwork/mlp1/Tensordot/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "DQNetwork/gradients/DQNetwork/mlp1/Tensordot/MatMul_grad/MatMul"
  input: "^DQNetwork/gradients/DQNetwork/mlp1/Tensordot/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/gradients/DQNetwork/mlp1/Tensordot/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/mlp1/Tensordot/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "DQNetwork/gradients/DQNetwork/mlp1/Tensordot/MatMul_grad/MatMul_1"
  input: "^DQNetwork/gradients/DQNetwork/mlp1/Tensordot/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/gradients/DQNetwork/mlp1/Tensordot/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/mlp1/Tensordot/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/mlp1/Tensordot/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "DQNetwork/gradients/DQNetwork/mlp1/Tensordot/MatMul_grad/tuple/control_dependency_1"
  input: "DQNetwork/gradients/DQNetwork/mlp1/Tensordot/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/mlp1/Tensordot/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "DQNetwork/mlp1/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DQNetwork/gradients/DQNetwork/mlp1/Tensordot/transpose_1_grad/transpose"
  op: "Transpose"
  input: "DQNetwork/gradients/DQNetwork/mlp1/Tensordot/Reshape_1_grad/Reshape"
  input: "DQNetwork/gradients/DQNetwork/mlp1/Tensordot/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DQNetwork/DQNetwork/mlp1/kernel/RMSProp/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/mlp1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "DQNetwork/DQNetwork/mlp1/kernel/RMSProp"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/mlp1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DQNetwork/DQNetwork/mlp1/kernel/RMSProp/Assign"
  op: "Assign"
  input: "DQNetwork/DQNetwork/mlp1/kernel/RMSProp"
  input: "DQNetwork/DQNetwork/mlp1/kernel/RMSProp/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/mlp1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DQNetwork/DQNetwork/mlp1/kernel/RMSProp/read"
  op: "Identity"
  input: "DQNetwork/DQNetwork/mlp1/kernel/RMSProp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/mlp1/kernel"
      }
    }
  }
}
node {
  name: "DQNetwork/DQNetwork/mlp1/kernel/RMSProp_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/mlp1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DQNetwork/DQNetwork/mlp1/kernel/RMSProp_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/mlp1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DQNetwork/DQNetwork/mlp1/kernel/RMSProp_1/Assign"
  op: "Assign"
  input: "DQNetwork/DQNetwork/mlp1/kernel/RMSProp_1"
  input: "DQNetwork/DQNetwork/mlp1/kernel/RMSProp_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/mlp1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DQNetwork/DQNetwork/mlp1/kernel/RMSProp_1/read"
  op: "Identity"
  input: "DQNetwork/DQNetwork/mlp1/kernel/RMSProp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/mlp1/kernel"
      }
    }
  }
}
node {
  name: "DQNetwork/DQNetwork/mlp1/bias/RMSProp/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/mlp1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "DQNetwork/DQNetwork/mlp1/bias/RMSProp"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/mlp1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DQNetwork/DQNetwork/mlp1/bias/RMSProp/Assign"
  op: "Assign"
  input: "DQNetwork/DQNetwork/mlp1/bias/RMSProp"
  input: "DQNetwork/DQNetwork/mlp1/bias/RMSProp/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/mlp1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DQNetwork/DQNetwork/mlp1/bias/RMSProp/read"
  op: "Identity"
  input: "DQNetwork/DQNetwork/mlp1/bias/RMSProp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/mlp1/bias"
      }
    }
  }
}
node {
  name: "DQNetwork/DQNetwork/mlp1/bias/RMSProp_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/mlp1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DQNetwork/DQNetwork/mlp1/bias/RMSProp_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/mlp1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DQNetwork/DQNetwork/mlp1/bias/RMSProp_1/Assign"
  op: "Assign"
  input: "DQNetwork/DQNetwork/mlp1/bias/RMSProp_1"
  input: "DQNetwork/DQNetwork/mlp1/bias/RMSProp_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/mlp1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DQNetwork/DQNetwork/mlp1/bias/RMSProp_1/read"
  op: "Identity"
  input: "DQNetwork/DQNetwork/mlp1/bias/RMSProp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/mlp1/bias"
      }
    }
  }
}
node {
  name: "DQNetwork/DQNetwork/mlp2/kernel/RMSProp/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/mlp2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "DQNetwork/DQNetwork/mlp2/kernel/RMSProp/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/mlp2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "DQNetwork/DQNetwork/mlp2/kernel/RMSProp/Initializer/ones"
  op: "Fill"
  input: "DQNetwork/DQNetwork/mlp2/kernel/RMSProp/Initializer/ones/shape_as_tensor"
  input: "DQNetwork/DQNetwork/mlp2/kernel/RMSProp/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/mlp2/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DQNetwork/DQNetwork/mlp2/kernel/RMSProp"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/mlp2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DQNetwork/DQNetwork/mlp2/kernel/RMSProp/Assign"
  op: "Assign"
  input: "DQNetwork/DQNetwork/mlp2/kernel/RMSProp"
  input: "DQNetwork/DQNetwork/mlp2/kernel/RMSProp/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/mlp2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DQNetwork/DQNetwork/mlp2/kernel/RMSProp/read"
  op: "Identity"
  input: "DQNetwork/DQNetwork/mlp2/kernel/RMSProp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/mlp2/kernel"
      }
    }
  }
}
node {
  name: "DQNetwork/DQNetwork/mlp2/kernel/RMSProp_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/mlp2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "DQNetwork/DQNetwork/mlp2/kernel/RMSProp_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/mlp2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DQNetwork/DQNetwork/mlp2/kernel/RMSProp_1/Initializer/zeros"
  op: "Fill"
  input: "DQNetwork/DQNetwork/mlp2/kernel/RMSProp_1/Initializer/zeros/shape_as_tensor"
  input: "DQNetwork/DQNetwork/mlp2/kernel/RMSProp_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/mlp2/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DQNetwork/DQNetwork/mlp2/kernel/RMSProp_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/mlp2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DQNetwork/DQNetwork/mlp2/kernel/RMSProp_1/Assign"
  op: "Assign"
  input: "DQNetwork/DQNetwork/mlp2/kernel/RMSProp_1"
  input: "DQNetwork/DQNetwork/mlp2/kernel/RMSProp_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/mlp2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DQNetwork/DQNetwork/mlp2/kernel/RMSProp_1/read"
  op: "Identity"
  input: "DQNetwork/DQNetwork/mlp2/kernel/RMSProp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/mlp2/kernel"
      }
    }
  }
}
node {
  name: "DQNetwork/DQNetwork/mlp2/bias/RMSProp/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/mlp2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "DQNetwork/DQNetwork/mlp2/bias/RMSProp"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/mlp2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DQNetwork/DQNetwork/mlp2/bias/RMSProp/Assign"
  op: "Assign"
  input: "DQNetwork/DQNetwork/mlp2/bias/RMSProp"
  input: "DQNetwork/DQNetwork/mlp2/bias/RMSProp/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/mlp2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DQNetwork/DQNetwork/mlp2/bias/RMSProp/read"
  op: "Identity"
  input: "DQNetwork/DQNetwork/mlp2/bias/RMSProp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/mlp2/bias"
      }
    }
  }
}
node {
  name: "DQNetwork/DQNetwork/mlp2/bias/RMSProp_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/mlp2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DQNetwork/DQNetwork/mlp2/bias/RMSProp_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/mlp2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DQNetwork/DQNetwork/mlp2/bias/RMSProp_1/Assign"
  op: "Assign"
  input: "DQNetwork/DQNetwork/mlp2/bias/RMSProp_1"
  input: "DQNetwork/DQNetwork/mlp2/bias/RMSProp_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/mlp2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DQNetwork/DQNetwork/mlp2/bias/RMSProp_1/read"
  op: "Identity"
  input: "DQNetwork/DQNetwork/mlp2/bias/RMSProp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/mlp2/bias"
      }
    }
  }
}
node {
  name: "DQNetwork/DQNetwork/mlp3/kernel/RMSProp/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/mlp3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "DQNetwork/DQNetwork/mlp3/kernel/RMSProp/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/mlp3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "DQNetwork/DQNetwork/mlp3/kernel/RMSProp/Initializer/ones"
  op: "Fill"
  input: "DQNetwork/DQNetwork/mlp3/kernel/RMSProp/Initializer/ones/shape_as_tensor"
  input: "DQNetwork/DQNetwork/mlp3/kernel/RMSProp/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/mlp3/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DQNetwork/DQNetwork/mlp3/kernel/RMSProp"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/mlp3/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DQNetwork/DQNetwork/mlp3/kernel/RMSProp/Assign"
  op: "Assign"
  input: "DQNetwork/DQNetwork/mlp3/kernel/RMSProp"
  input: "DQNetwork/DQNetwork/mlp3/kernel/RMSProp/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/mlp3/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DQNetwork/DQNetwork/mlp3/kernel/RMSProp/read"
  op: "Identity"
  input: "DQNetwork/DQNetwork/mlp3/kernel/RMSProp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/mlp3/kernel"
      }
    }
  }
}
node {
  name: "DQNetwork/DQNetwork/mlp3/kernel/RMSProp_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/mlp3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "DQNetwork/DQNetwork/mlp3/kernel/RMSProp_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/mlp3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DQNetwork/DQNetwork/mlp3/kernel/RMSProp_1/Initializer/zeros"
  op: "Fill"
  input: "DQNetwork/DQNetwork/mlp3/kernel/RMSProp_1/Initializer/zeros/shape_as_tensor"
  input: "DQNetwork/DQNetwork/mlp3/kernel/RMSProp_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/mlp3/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DQNetwork/DQNetwork/mlp3/kernel/RMSProp_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/mlp3/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DQNetwork/DQNetwork/mlp3/kernel/RMSProp_1/Assign"
  op: "Assign"
  input: "DQNetwork/DQNetwork/mlp3/kernel/RMSProp_1"
  input: "DQNetwork/DQNetwork/mlp3/kernel/RMSProp_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/mlp3/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DQNetwork/DQNetwork/mlp3/kernel/RMSProp_1/read"
  op: "Identity"
  input: "DQNetwork/DQNetwork/mlp3/kernel/RMSProp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/mlp3/kernel"
      }
    }
  }
}
node {
  name: "DQNetwork/DQNetwork/mlp3/bias/RMSProp/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/mlp3/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "DQNetwork/DQNetwork/mlp3/bias/RMSProp"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/mlp3/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DQNetwork/DQNetwork/mlp3/bias/RMSProp/Assign"
  op: "Assign"
  input: "DQNetwork/DQNetwork/mlp3/bias/RMSProp"
  input: "DQNetwork/DQNetwork/mlp3/bias/RMSProp/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/mlp3/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DQNetwork/DQNetwork/mlp3/bias/RMSProp/read"
  op: "Identity"
  input: "DQNetwork/DQNetwork/mlp3/bias/RMSProp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/mlp3/bias"
      }
    }
  }
}
node {
  name: "DQNetwork/DQNetwork/mlp3/bias/RMSProp_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/mlp3/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DQNetwork/DQNetwork/mlp3/bias/RMSProp_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/mlp3/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DQNetwork/DQNetwork/mlp3/bias/RMSProp_1/Assign"
  op: "Assign"
  input: "DQNetwork/DQNetwork/mlp3/bias/RMSProp_1"
  input: "DQNetwork/DQNetwork/mlp3/bias/RMSProp_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/mlp3/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DQNetwork/DQNetwork/mlp3/bias/RMSProp_1/read"
  op: "Identity"
  input: "DQNetwork/DQNetwork/mlp3/bias/RMSProp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/mlp3/bias"
      }
    }
  }
}
node {
  name: "DQNetwork/DQNetwork/value_fc/kernel/RMSProp/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/value_fc/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\r\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "DQNetwork/DQNetwork/value_fc/kernel/RMSProp/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/value_fc/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "DQNetwork/DQNetwork/value_fc/kernel/RMSProp/Initializer/ones"
  op: "Fill"
  input: "DQNetwork/DQNetwork/value_fc/kernel/RMSProp/Initializer/ones/shape_as_tensor"
  input: "DQNetwork/DQNetwork/value_fc/kernel/RMSProp/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/value_fc/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DQNetwork/DQNetwork/value_fc/kernel/RMSProp"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/value_fc/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3456
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DQNetwork/DQNetwork/value_fc/kernel/RMSProp/Assign"
  op: "Assign"
  input: "DQNetwork/DQNetwork/value_fc/kernel/RMSProp"
  input: "DQNetwork/DQNetwork/value_fc/kernel/RMSProp/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/value_fc/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DQNetwork/DQNetwork/value_fc/kernel/RMSProp/read"
  op: "Identity"
  input: "DQNetwork/DQNetwork/value_fc/kernel/RMSProp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/value_fc/kernel"
      }
    }
  }
}
node {
  name: "DQNetwork/DQNetwork/value_fc/kernel/RMSProp_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/value_fc/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\r\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "DQNetwork/DQNetwork/value_fc/kernel/RMSProp_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/value_fc/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DQNetwork/DQNetwork/value_fc/kernel/RMSProp_1/Initializer/zeros"
  op: "Fill"
  input: "DQNetwork/DQNetwork/value_fc/kernel/RMSProp_1/Initializer/zeros/shape_as_tensor"
  input: "DQNetwork/DQNetwork/value_fc/kernel/RMSProp_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/value_fc/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DQNetwork/DQNetwork/value_fc/kernel/RMSProp_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/value_fc/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3456
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DQNetwork/DQNetwork/value_fc/kernel/RMSProp_1/Assign"
  op: "Assign"
  input: "DQNetwork/DQNetwork/value_fc/kernel/RMSProp_1"
  input: "DQNetwork/DQNetwork/value_fc/kernel/RMSProp_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/value_fc/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DQNetwork/DQNetwork/value_fc/kernel/RMSProp_1/read"
  op: "Identity"
  input: "DQNetwork/DQNetwork/value_fc/kernel/RMSProp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/value_fc/kernel"
      }
    }
  }
}
node {
  name: "DQNetwork/DQNetwork/value_fc/bias/RMSProp/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/value_fc/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "DQNetwork/DQNetwork/value_fc/bias/RMSProp"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/value_fc/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DQNetwork/DQNetwork/value_fc/bias/RMSProp/Assign"
  op: "Assign"
  input: "DQNetwork/DQNetwork/value_fc/bias/RMSProp"
  input: "DQNetwork/DQNetwork/value_fc/bias/RMSProp/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/value_fc/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DQNetwork/DQNetwork/value_fc/bias/RMSProp/read"
  op: "Identity"
  input: "DQNetwork/DQNetwork/value_fc/bias/RMSProp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/value_fc/bias"
      }
    }
  }
}
node {
  name: "DQNetwork/DQNetwork/value_fc/bias/RMSProp_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/value_fc/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DQNetwork/DQNetwork/value_fc/bias/RMSProp_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/value_fc/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DQNetwork/DQNetwork/value_fc/bias/RMSProp_1/Assign"
  op: "Assign"
  input: "DQNetwork/DQNetwork/value_fc/bias/RMSProp_1"
  input: "DQNetwork/DQNetwork/value_fc/bias/RMSProp_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/value_fc/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DQNetwork/DQNetwork/value_fc/bias/RMSProp_1/read"
  op: "Identity"
  input: "DQNetwork/DQNetwork/value_fc/bias/RMSProp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/value_fc/bias"
      }
    }
  }
}
node {
  name: "DQNetwork/DQNetwork/value/kernel/RMSProp/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/value/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
          dim {
            size: 1
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "DQNetwork/DQNetwork/value/kernel/RMSProp"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/value/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DQNetwork/DQNetwork/value/kernel/RMSProp/Assign"
  op: "Assign"
  input: "DQNetwork/DQNetwork/value/kernel/RMSProp"
  input: "DQNetwork/DQNetwork/value/kernel/RMSProp/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/value/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DQNetwork/DQNetwork/value/kernel/RMSProp/read"
  op: "Identity"
  input: "DQNetwork/DQNetwork/value/kernel/RMSProp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/value/kernel"
      }
    }
  }
}
node {
  name: "DQNetwork/DQNetwork/value/kernel/RMSProp_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/value/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DQNetwork/DQNetwork/value/kernel/RMSProp_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/value/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DQNetwork/DQNetwork/value/kernel/RMSProp_1/Assign"
  op: "Assign"
  input: "DQNetwork/DQNetwork/value/kernel/RMSProp_1"
  input: "DQNetwork/DQNetwork/value/kernel/RMSProp_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/value/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DQNetwork/DQNetwork/value/kernel/RMSProp_1/read"
  op: "Identity"
  input: "DQNetwork/DQNetwork/value/kernel/RMSProp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/value/kernel"
      }
    }
  }
}
node {
  name: "DQNetwork/DQNetwork/value/bias/RMSProp/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/value/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "DQNetwork/DQNetwork/value/bias/RMSProp"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/value/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DQNetwork/DQNetwork/value/bias/RMSProp/Assign"
  op: "Assign"
  input: "DQNetwork/DQNetwork/value/bias/RMSProp"
  input: "DQNetwork/DQNetwork/value/bias/RMSProp/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/value/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DQNetwork/DQNetwork/value/bias/RMSProp/read"
  op: "Identity"
  input: "DQNetwork/DQNetwork/value/bias/RMSProp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/value/bias"
      }
    }
  }
}
node {
  name: "DQNetwork/DQNetwork/value/bias/RMSProp_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/value/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DQNetwork/DQNetwork/value/bias/RMSProp_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/value/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DQNetwork/DQNetwork/value/bias/RMSProp_1/Assign"
  op: "Assign"
  input: "DQNetwork/DQNetwork/value/bias/RMSProp_1"
  input: "DQNetwork/DQNetwork/value/bias/RMSProp_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/value/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DQNetwork/DQNetwork/value/bias/RMSProp_1/read"
  op: "Identity"
  input: "DQNetwork/DQNetwork/value/bias/RMSProp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/value/bias"
      }
    }
  }
}
node {
  name: "DQNetwork/DQNetwork/advantage_fc/kernel/RMSProp/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/advantage_fc/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\r\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "DQNetwork/DQNetwork/advantage_fc/kernel/RMSProp/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/advantage_fc/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "DQNetwork/DQNetwork/advantage_fc/kernel/RMSProp/Initializer/ones"
  op: "Fill"
  input: "DQNetwork/DQNetwork/advantage_fc/kernel/RMSProp/Initializer/ones/shape_as_tensor"
  input: "DQNetwork/DQNetwork/advantage_fc/kernel/RMSProp/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/advantage_fc/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DQNetwork/DQNetwork/advantage_fc/kernel/RMSProp"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/advantage_fc/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3456
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DQNetwork/DQNetwork/advantage_fc/kernel/RMSProp/Assign"
  op: "Assign"
  input: "DQNetwork/DQNetwork/advantage_fc/kernel/RMSProp"
  input: "DQNetwork/DQNetwork/advantage_fc/kernel/RMSProp/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/advantage_fc/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DQNetwork/DQNetwork/advantage_fc/kernel/RMSProp/read"
  op: "Identity"
  input: "DQNetwork/DQNetwork/advantage_fc/kernel/RMSProp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/advantage_fc/kernel"
      }
    }
  }
}
node {
  name: "DQNetwork/DQNetwork/advantage_fc/kernel/RMSProp_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/advantage_fc/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\r\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "DQNetwork/DQNetwork/advantage_fc/kernel/RMSProp_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/advantage_fc/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DQNetwork/DQNetwork/advantage_fc/kernel/RMSProp_1/Initializer/zeros"
  op: "Fill"
  input: "DQNetwork/DQNetwork/advantage_fc/kernel/RMSProp_1/Initializer/zeros/shape_as_tensor"
  input: "DQNetwork/DQNetwork/advantage_fc/kernel/RMSProp_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/advantage_fc/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DQNetwork/DQNetwork/advantage_fc/kernel/RMSProp_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/advantage_fc/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3456
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DQNetwork/DQNetwork/advantage_fc/kernel/RMSProp_1/Assign"
  op: "Assign"
  input: "DQNetwork/DQNetwork/advantage_fc/kernel/RMSProp_1"
  input: "DQNetwork/DQNetwork/advantage_fc/kernel/RMSProp_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/advantage_fc/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DQNetwork/DQNetwork/advantage_fc/kernel/RMSProp_1/read"
  op: "Identity"
  input: "DQNetwork/DQNetwork/advantage_fc/kernel/RMSProp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/advantage_fc/kernel"
      }
    }
  }
}
node {
  name: "DQNetwork/DQNetwork/advantage_fc/bias/RMSProp/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/advantage_fc/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "DQNetwork/DQNetwork/advantage_fc/bias/RMSProp"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/advantage_fc/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DQNetwork/DQNetwork/advantage_fc/bias/RMSProp/Assign"
  op: "Assign"
  input: "DQNetwork/DQNetwork/advantage_fc/bias/RMSProp"
  input: "DQNetwork/DQNetwork/advantage_fc/bias/RMSProp/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/advantage_fc/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DQNetwork/DQNetwork/advantage_fc/bias/RMSProp/read"
  op: "Identity"
  input: "DQNetwork/DQNetwork/advantage_fc/bias/RMSProp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/advantage_fc/bias"
      }
    }
  }
}
node {
  name: "DQNetwork/DQNetwork/advantage_fc/bias/RMSProp_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/advantage_fc/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DQNetwork/DQNetwork/advantage_fc/bias/RMSProp_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/advantage_fc/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DQNetwork/DQNetwork/advantage_fc/bias/RMSProp_1/Assign"
  op: "Assign"
  input: "DQNetwork/DQNetwork/advantage_fc/bias/RMSProp_1"
  input: "DQNetwork/DQNetwork/advantage_fc/bias/RMSProp_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/advantage_fc/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DQNetwork/DQNetwork/advantage_fc/bias/RMSProp_1/read"
  op: "Identity"
  input: "DQNetwork/DQNetwork/advantage_fc/bias/RMSProp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/advantage_fc/bias"
      }
    }
  }
}
node {
  name: "DQNetwork/DQNetwork/advantages/kernel/RMSProp/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/advantages/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "DQNetwork/DQNetwork/advantages/kernel/RMSProp/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/advantages/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "DQNetwork/DQNetwork/advantages/kernel/RMSProp/Initializer/ones"
  op: "Fill"
  input: "DQNetwork/DQNetwork/advantages/kernel/RMSProp/Initializer/ones/shape_as_tensor"
  input: "DQNetwork/DQNetwork/advantages/kernel/RMSProp/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/advantages/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DQNetwork/DQNetwork/advantages/kernel/RMSProp"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/advantages/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 3
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DQNetwork/DQNetwork/advantages/kernel/RMSProp/Assign"
  op: "Assign"
  input: "DQNetwork/DQNetwork/advantages/kernel/RMSProp"
  input: "DQNetwork/DQNetwork/advantages/kernel/RMSProp/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/advantages/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DQNetwork/DQNetwork/advantages/kernel/RMSProp/read"
  op: "Identity"
  input: "DQNetwork/DQNetwork/advantages/kernel/RMSProp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/advantages/kernel"
      }
    }
  }
}
node {
  name: "DQNetwork/DQNetwork/advantages/kernel/RMSProp_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/advantages/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "DQNetwork/DQNetwork/advantages/kernel/RMSProp_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/advantages/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DQNetwork/DQNetwork/advantages/kernel/RMSProp_1/Initializer/zeros"
  op: "Fill"
  input: "DQNetwork/DQNetwork/advantages/kernel/RMSProp_1/Initializer/zeros/shape_as_tensor"
  input: "DQNetwork/DQNetwork/advantages/kernel/RMSProp_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/advantages/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DQNetwork/DQNetwork/advantages/kernel/RMSProp_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/advantages/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 3
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DQNetwork/DQNetwork/advantages/kernel/RMSProp_1/Assign"
  op: "Assign"
  input: "DQNetwork/DQNetwork/advantages/kernel/RMSProp_1"
  input: "DQNetwork/DQNetwork/advantages/kernel/RMSProp_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/advantages/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DQNetwork/DQNetwork/advantages/kernel/RMSProp_1/read"
  op: "Identity"
  input: "DQNetwork/DQNetwork/advantages/kernel/RMSProp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/advantages/kernel"
      }
    }
  }
}
node {
  name: "DQNetwork/DQNetwork/advantages/bias/RMSProp/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/advantages/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "DQNetwork/DQNetwork/advantages/bias/RMSProp"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/advantages/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DQNetwork/DQNetwork/advantages/bias/RMSProp/Assign"
  op: "Assign"
  input: "DQNetwork/DQNetwork/advantages/bias/RMSProp"
  input: "DQNetwork/DQNetwork/advantages/bias/RMSProp/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/advantages/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DQNetwork/DQNetwork/advantages/bias/RMSProp/read"
  op: "Identity"
  input: "DQNetwork/DQNetwork/advantages/bias/RMSProp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/advantages/bias"
      }
    }
  }
}
node {
  name: "DQNetwork/DQNetwork/advantages/bias/RMSProp_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/advantages/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DQNetwork/DQNetwork/advantages/bias/RMSProp_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/advantages/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DQNetwork/DQNetwork/advantages/bias/RMSProp_1/Assign"
  op: "Assign"
  input: "DQNetwork/DQNetwork/advantages/bias/RMSProp_1"
  input: "DQNetwork/DQNetwork/advantages/bias/RMSProp_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/advantages/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DQNetwork/DQNetwork/advantages/bias/RMSProp_1/read"
  op: "Identity"
  input: "DQNetwork/DQNetwork/advantages/bias/RMSProp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/advantages/bias"
      }
    }
  }
}
node {
  name: "DQNetwork/RMSProp/learning_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0002500000118743628
      }
    }
  }
}
node {
  name: "DQNetwork/RMSProp/decay"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "DQNetwork/RMSProp/momentum"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DQNetwork/RMSProp/epsilon"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.000000013351432e-10
      }
    }
  }
}
node {
  name: "DQNetwork/RMSProp/update_DQNetwork/mlp1/kernel/ApplyRMSProp"
  op: "ApplyRMSProp"
  input: "DQNetwork/mlp1/kernel"
  input: "DQNetwork/DQNetwork/mlp1/kernel/RMSProp"
  input: "DQNetwork/DQNetwork/mlp1/kernel/RMSProp_1"
  input: "DQNetwork/RMSProp/learning_rate"
  input: "DQNetwork/RMSProp/decay"
  input: "DQNetwork/RMSProp/momentum"
  input: "DQNetwork/RMSProp/epsilon"
  input: "DQNetwork/gradients/DQNetwork/mlp1/Tensordot/transpose_1_grad/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/mlp1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "DQNetwork/RMSProp/update_DQNetwork/mlp1/bias/ApplyRMSProp"
  op: "ApplyRMSProp"
  input: "DQNetwork/mlp1/bias"
  input: "DQNetwork/DQNetwork/mlp1/bias/RMSProp"
  input: "DQNetwork/DQNetwork/mlp1/bias/RMSProp_1"
  input: "DQNetwork/RMSProp/learning_rate"
  input: "DQNetwork/RMSProp/decay"
  input: "DQNetwork/RMSProp/momentum"
  input: "DQNetwork/RMSProp/epsilon"
  input: "DQNetwork/gradients/DQNetwork/mlp1/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/mlp1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "DQNetwork/RMSProp/update_DQNetwork/mlp2/kernel/ApplyRMSProp"
  op: "ApplyRMSProp"
  input: "DQNetwork/mlp2/kernel"
  input: "DQNetwork/DQNetwork/mlp2/kernel/RMSProp"
  input: "DQNetwork/DQNetwork/mlp2/kernel/RMSProp_1"
  input: "DQNetwork/RMSProp/learning_rate"
  input: "DQNetwork/RMSProp/decay"
  input: "DQNetwork/RMSProp/momentum"
  input: "DQNetwork/RMSProp/epsilon"
  input: "DQNetwork/gradients/DQNetwork/mlp2/Tensordot/transpose_1_grad/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/mlp2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "DQNetwork/RMSProp/update_DQNetwork/mlp2/bias/ApplyRMSProp"
  op: "ApplyRMSProp"
  input: "DQNetwork/mlp2/bias"
  input: "DQNetwork/DQNetwork/mlp2/bias/RMSProp"
  input: "DQNetwork/DQNetwork/mlp2/bias/RMSProp_1"
  input: "DQNetwork/RMSProp/learning_rate"
  input: "DQNetwork/RMSProp/decay"
  input: "DQNetwork/RMSProp/momentum"
  input: "DQNetwork/RMSProp/epsilon"
  input: "DQNetwork/gradients/DQNetwork/mlp2/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/mlp2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "DQNetwork/RMSProp/update_DQNetwork/mlp3/kernel/ApplyRMSProp"
  op: "ApplyRMSProp"
  input: "DQNetwork/mlp3/kernel"
  input: "DQNetwork/DQNetwork/mlp3/kernel/RMSProp"
  input: "DQNetwork/DQNetwork/mlp3/kernel/RMSProp_1"
  input: "DQNetwork/RMSProp/learning_rate"
  input: "DQNetwork/RMSProp/decay"
  input: "DQNetwork/RMSProp/momentum"
  input: "DQNetwork/RMSProp/epsilon"
  input: "DQNetwork/gradients/DQNetwork/mlp3/Tensordot/transpose_1_grad/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/mlp3/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "DQNetwork/RMSProp/update_DQNetwork/mlp3/bias/ApplyRMSProp"
  op: "ApplyRMSProp"
  input: "DQNetwork/mlp3/bias"
  input: "DQNetwork/DQNetwork/mlp3/bias/RMSProp"
  input: "DQNetwork/DQNetwork/mlp3/bias/RMSProp_1"
  input: "DQNetwork/RMSProp/learning_rate"
  input: "DQNetwork/RMSProp/decay"
  input: "DQNetwork/RMSProp/momentum"
  input: "DQNetwork/RMSProp/epsilon"
  input: "DQNetwork/gradients/DQNetwork/mlp3/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/mlp3/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "DQNetwork/RMSProp/update_DQNetwork/value_fc/kernel/ApplyRMSProp"
  op: "ApplyRMSProp"
  input: "DQNetwork/value_fc/kernel"
  input: "DQNetwork/DQNetwork/value_fc/kernel/RMSProp"
  input: "DQNetwork/DQNetwork/value_fc/kernel/RMSProp_1"
  input: "DQNetwork/RMSProp/learning_rate"
  input: "DQNetwork/RMSProp/decay"
  input: "DQNetwork/RMSProp/momentum"
  input: "DQNetwork/RMSProp/epsilon"
  input: "DQNetwork/gradients/DQNetwork/value_fc/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/value_fc/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "DQNetwork/RMSProp/update_DQNetwork/value_fc/bias/ApplyRMSProp"
  op: "ApplyRMSProp"
  input: "DQNetwork/value_fc/bias"
  input: "DQNetwork/DQNetwork/value_fc/bias/RMSProp"
  input: "DQNetwork/DQNetwork/value_fc/bias/RMSProp_1"
  input: "DQNetwork/RMSProp/learning_rate"
  input: "DQNetwork/RMSProp/decay"
  input: "DQNetwork/RMSProp/momentum"
  input: "DQNetwork/RMSProp/epsilon"
  input: "DQNetwork/gradients/DQNetwork/value_fc/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/value_fc/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "DQNetwork/RMSProp/update_DQNetwork/value/kernel/ApplyRMSProp"
  op: "ApplyRMSProp"
  input: "DQNetwork/value/kernel"
  input: "DQNetwork/DQNetwork/value/kernel/RMSProp"
  input: "DQNetwork/DQNetwork/value/kernel/RMSProp_1"
  input: "DQNetwork/RMSProp/learning_rate"
  input: "DQNetwork/RMSProp/decay"
  input: "DQNetwork/RMSProp/momentum"
  input: "DQNetwork/RMSProp/epsilon"
  input: "DQNetwork/gradients/DQNetwork/value/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/value/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "DQNetwork/RMSProp/update_DQNetwork/value/bias/ApplyRMSProp"
  op: "ApplyRMSProp"
  input: "DQNetwork/value/bias"
  input: "DQNetwork/DQNetwork/value/bias/RMSProp"
  input: "DQNetwork/DQNetwork/value/bias/RMSProp_1"
  input: "DQNetwork/RMSProp/learning_rate"
  input: "DQNetwork/RMSProp/decay"
  input: "DQNetwork/RMSProp/momentum"
  input: "DQNetwork/RMSProp/epsilon"
  input: "DQNetwork/gradients/DQNetwork/value/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/value/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "DQNetwork/RMSProp/update_DQNetwork/advantage_fc/kernel/ApplyRMSProp"
  op: "ApplyRMSProp"
  input: "DQNetwork/advantage_fc/kernel"
  input: "DQNetwork/DQNetwork/advantage_fc/kernel/RMSProp"
  input: "DQNetwork/DQNetwork/advantage_fc/kernel/RMSProp_1"
  input: "DQNetwork/RMSProp/learning_rate"
  input: "DQNetwork/RMSProp/decay"
  input: "DQNetwork/RMSProp/momentum"
  input: "DQNetwork/RMSProp/epsilon"
  input: "DQNetwork/gradients/DQNetwork/advantage_fc/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/advantage_fc/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "DQNetwork/RMSProp/update_DQNetwork/advantage_fc/bias/ApplyRMSProp"
  op: "ApplyRMSProp"
  input: "DQNetwork/advantage_fc/bias"
  input: "DQNetwork/DQNetwork/advantage_fc/bias/RMSProp"
  input: "DQNetwork/DQNetwork/advantage_fc/bias/RMSProp_1"
  input: "DQNetwork/RMSProp/learning_rate"
  input: "DQNetwork/RMSProp/decay"
  input: "DQNetwork/RMSProp/momentum"
  input: "DQNetwork/RMSProp/epsilon"
  input: "DQNetwork/gradients/DQNetwork/advantage_fc/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/advantage_fc/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "DQNetwork/RMSProp/update_DQNetwork/advantages/kernel/ApplyRMSProp"
  op: "ApplyRMSProp"
  input: "DQNetwork/advantages/kernel"
  input: "DQNetwork/DQNetwork/advantages/kernel/RMSProp"
  input: "DQNetwork/DQNetwork/advantages/kernel/RMSProp_1"
  input: "DQNetwork/RMSProp/learning_rate"
  input: "DQNetwork/RMSProp/decay"
  input: "DQNetwork/RMSProp/momentum"
  input: "DQNetwork/RMSProp/epsilon"
  input: "DQNetwork/gradients/DQNetwork/advantages/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/advantages/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "DQNetwork/RMSProp/update_DQNetwork/advantages/bias/ApplyRMSProp"
  op: "ApplyRMSProp"
  input: "DQNetwork/advantages/bias"
  input: "DQNetwork/DQNetwork/advantages/bias/RMSProp"
  input: "DQNetwork/DQNetwork/advantages/bias/RMSProp_1"
  input: "DQNetwork/RMSProp/learning_rate"
  input: "DQNetwork/RMSProp/decay"
  input: "DQNetwork/RMSProp/momentum"
  input: "DQNetwork/RMSProp/epsilon"
  input: "DQNetwork/gradients/DQNetwork/advantages/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/advantages/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "DQNetwork/RMSProp"
  op: "NoOp"
  input: "^DQNetwork/RMSProp/update_DQNetwork/advantage_fc/bias/ApplyRMSProp"
  input: "^DQNetwork/RMSProp/update_DQNetwork/advantage_fc/kernel/ApplyRMSProp"
  input: "^DQNetwork/RMSProp/update_DQNetwork/advantages/bias/ApplyRMSProp"
  input: "^DQNetwork/RMSProp/update_DQNetwork/advantages/kernel/ApplyRMSProp"
  input: "^DQNetwork/RMSProp/update_DQNetwork/mlp1/bias/ApplyRMSProp"
  input: "^DQNetwork/RMSProp/update_DQNetwork/mlp1/kernel/ApplyRMSProp"
  input: "^DQNetwork/RMSProp/update_DQNetwork/mlp2/bias/ApplyRMSProp"
  input: "^DQNetwork/RMSProp/update_DQNetwork/mlp2/kernel/ApplyRMSProp"
  input: "^DQNetwork/RMSProp/update_DQNetwork/mlp3/bias/ApplyRMSProp"
  input: "^DQNetwork/RMSProp/update_DQNetwork/mlp3/kernel/ApplyRMSProp"
  input: "^DQNetwork/RMSProp/update_DQNetwork/value/bias/ApplyRMSProp"
  input: "^DQNetwork/RMSProp/update_DQNetwork/value/kernel/ApplyRMSProp"
  input: "^DQNetwork/RMSProp/update_DQNetwork/value_fc/bias/ApplyRMSProp"
  input: "^DQNetwork/RMSProp/update_DQNetwork/value_fc/kernel/ApplyRMSProp"
}
node {
  name: "TargetNetwork/inputs"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 27
        }
        dim {
          size: 4
        }
      }
    }
  }
}
node {
  name: "TargetNetwork/IS_weights"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "TargetNetwork/actions_"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 3
        }
      }
    }
  }
}
node {
  name: "TargetNetwork/target"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "TargetNetwork/mlp1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/mlp1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "TargetNetwork/mlp1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/mlp1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.40824830532073975
      }
    }
  }
}
node {
  name: "TargetNetwork/mlp1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/mlp1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.40824830532073975
      }
    }
  }
}
node {
  name: "TargetNetwork/mlp1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "TargetNetwork/mlp1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/mlp1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "TargetNetwork/mlp1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "TargetNetwork/mlp1/kernel/Initializer/random_uniform/max"
  input: "TargetNetwork/mlp1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/mlp1/kernel"
      }
    }
  }
}
node {
  name: "TargetNetwork/mlp1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "TargetNetwork/mlp1/kernel/Initializer/random_uniform/RandomUniform"
  input: "TargetNetwork/mlp1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/mlp1/kernel"
      }
    }
  }
}
node {
  name: "TargetNetwork/mlp1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "TargetNetwork/mlp1/kernel/Initializer/random_uniform/mul"
  input: "TargetNetwork/mlp1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/mlp1/kernel"
      }
    }
  }
}
node {
  name: "TargetNetwork/mlp1/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/mlp1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "TargetNetwork/mlp1/kernel/Assign"
  op: "Assign"
  input: "TargetNetwork/mlp1/kernel"
  input: "TargetNetwork/mlp1/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/mlp1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "TargetNetwork/mlp1/kernel/read"
  op: "Identity"
  input: "TargetNetwork/mlp1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/mlp1/kernel"
      }
    }
  }
}
node {
  name: "TargetNetwork/mlp1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/mlp1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "TargetNetwork/mlp1/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/mlp1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "TargetNetwork/mlp1/bias/Assign"
  op: "Assign"
  input: "TargetNetwork/mlp1/bias"
  input: "TargetNetwork/mlp1/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/mlp1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "TargetNetwork/mlp1/bias/read"
  op: "Identity"
  input: "TargetNetwork/mlp1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/mlp1/bias"
      }
    }
  }
}
node {
  name: "TargetNetwork/mlp1/Tensordot/axes"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "TargetNetwork/mlp1/Tensordot/free"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "TargetNetwork/mlp1/Tensordot/Shape"
  op: "Shape"
  input: "TargetNetwork/inputs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "TargetNetwork/mlp1/Tensordot/GatherV2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "TargetNetwork/mlp1/Tensordot/GatherV2"
  op: "GatherV2"
  input: "TargetNetwork/mlp1/Tensordot/Shape"
  input: "TargetNetwork/mlp1/Tensordot/free"
  input: "TargetNetwork/mlp1/Tensordot/GatherV2/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "TargetNetwork/mlp1/Tensordot/GatherV2_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "TargetNetwork/mlp1/Tensordot/GatherV2_1"
  op: "GatherV2"
  input: "TargetNetwork/mlp1/Tensordot/Shape"
  input: "TargetNetwork/mlp1/Tensordot/axes"
  input: "TargetNetwork/mlp1/Tensordot/GatherV2_1/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "TargetNetwork/mlp1/Tensordot/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "TargetNetwork/mlp1/Tensordot/Prod"
  op: "Prod"
  input: "TargetNetwork/mlp1/Tensordot/GatherV2"
  input: "TargetNetwork/mlp1/Tensordot/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "TargetNetwork/mlp1/Tensordot/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "TargetNetwork/mlp1/Tensordot/Prod_1"
  op: "Prod"
  input: "TargetNetwork/mlp1/Tensordot/GatherV2_1"
  input: "TargetNetwork/mlp1/Tensordot/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "TargetNetwork/mlp1/Tensordot/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "TargetNetwork/mlp1/Tensordot/concat"
  op: "ConcatV2"
  input: "TargetNetwork/mlp1/Tensordot/free"
  input: "TargetNetwork/mlp1/Tensordot/axes"
  input: "TargetNetwork/mlp1/Tensordot/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "TargetNetwork/mlp1/Tensordot/stack"
  op: "Pack"
  input: "TargetNetwork/mlp1/Tensordot/Prod"
  input: "TargetNetwork/mlp1/Tensordot/Prod_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "TargetNetwork/mlp1/Tensordot/transpose"
  op: "Transpose"
  input: "TargetNetwork/inputs"
  input: "TargetNetwork/mlp1/Tensordot/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "TargetNetwork/mlp1/Tensordot/Reshape"
  op: "Reshape"
  input: "TargetNetwork/mlp1/Tensordot/transpose"
  input: "TargetNetwork/mlp1/Tensordot/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "TargetNetwork/mlp1/Tensordot/transpose_1/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "TargetNetwork/mlp1/Tensordot/transpose_1"
  op: "Transpose"
  input: "TargetNetwork/mlp1/kernel/read"
  input: "TargetNetwork/mlp1/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "TargetNetwork/mlp1/Tensordot/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "TargetNetwork/mlp1/Tensordot/Reshape_1"
  op: "Reshape"
  input: "TargetNetwork/mlp1/Tensordot/transpose_1"
  input: "TargetNetwork/mlp1/Tensordot/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "TargetNetwork/mlp1/Tensordot/MatMul"
  op: "MatMul"
  input: "TargetNetwork/mlp1/Tensordot/Reshape"
  input: "TargetNetwork/mlp1/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "TargetNetwork/mlp1/Tensordot/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "TargetNetwork/mlp1/Tensordot/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "TargetNetwork/mlp1/Tensordot/concat_1"
  op: "ConcatV2"
  input: "TargetNetwork/mlp1/Tensordot/GatherV2"
  input: "TargetNetwork/mlp1/Tensordot/Const_2"
  input: "TargetNetwork/mlp1/Tensordot/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "TargetNetwork/mlp1/Tensordot"
  op: "Reshape"
  input: "TargetNetwork/mlp1/Tensordot/MatMul"
  input: "TargetNetwork/mlp1/Tensordot/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "TargetNetwork/mlp1/BiasAdd"
  op: "BiasAdd"
  input: "TargetNetwork/mlp1/Tensordot"
  input: "TargetNetwork/mlp1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "TargetNetwork/mlp1/Elu"
  op: "Elu"
  input: "TargetNetwork/mlp1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "TargetNetwork/mlp2/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/mlp2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "TargetNetwork/mlp2/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/mlp2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.25
      }
    }
  }
}
node {
  name: "TargetNetwork/mlp2/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/mlp2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.25
      }
    }
  }
}
node {
  name: "TargetNetwork/mlp2/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "TargetNetwork/mlp2/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/mlp2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "TargetNetwork/mlp2/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "TargetNetwork/mlp2/kernel/Initializer/random_uniform/max"
  input: "TargetNetwork/mlp2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/mlp2/kernel"
      }
    }
  }
}
node {
  name: "TargetNetwork/mlp2/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "TargetNetwork/mlp2/kernel/Initializer/random_uniform/RandomUniform"
  input: "TargetNetwork/mlp2/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/mlp2/kernel"
      }
    }
  }
}
node {
  name: "TargetNetwork/mlp2/kernel/Initializer/random_uniform"
  op: "Add"
  input: "TargetNetwork/mlp2/kernel/Initializer/random_uniform/mul"
  input: "TargetNetwork/mlp2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/mlp2/kernel"
      }
    }
  }
}
node {
  name: "TargetNetwork/mlp2/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/mlp2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "TargetNetwork/mlp2/kernel/Assign"
  op: "Assign"
  input: "TargetNetwork/mlp2/kernel"
  input: "TargetNetwork/mlp2/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/mlp2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "TargetNetwork/mlp2/kernel/read"
  op: "Identity"
  input: "TargetNetwork/mlp2/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/mlp2/kernel"
      }
    }
  }
}
node {
  name: "TargetNetwork/mlp2/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/mlp2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "TargetNetwork/mlp2/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/mlp2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "TargetNetwork/mlp2/bias/Assign"
  op: "Assign"
  input: "TargetNetwork/mlp2/bias"
  input: "TargetNetwork/mlp2/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/mlp2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "TargetNetwork/mlp2/bias/read"
  op: "Identity"
  input: "TargetNetwork/mlp2/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/mlp2/bias"
      }
    }
  }
}
node {
  name: "TargetNetwork/mlp2/Tensordot/axes"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "TargetNetwork/mlp2/Tensordot/free"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "TargetNetwork/mlp2/Tensordot/Shape"
  op: "Shape"
  input: "TargetNetwork/mlp1/Elu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "TargetNetwork/mlp2/Tensordot/GatherV2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "TargetNetwork/mlp2/Tensordot/GatherV2"
  op: "GatherV2"
  input: "TargetNetwork/mlp2/Tensordot/Shape"
  input: "TargetNetwork/mlp2/Tensordot/free"
  input: "TargetNetwork/mlp2/Tensordot/GatherV2/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "TargetNetwork/mlp2/Tensordot/GatherV2_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "TargetNetwork/mlp2/Tensordot/GatherV2_1"
  op: "GatherV2"
  input: "TargetNetwork/mlp2/Tensordot/Shape"
  input: "TargetNetwork/mlp2/Tensordot/axes"
  input: "TargetNetwork/mlp2/Tensordot/GatherV2_1/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "TargetNetwork/mlp2/Tensordot/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "TargetNetwork/mlp2/Tensordot/Prod"
  op: "Prod"
  input: "TargetNetwork/mlp2/Tensordot/GatherV2"
  input: "TargetNetwork/mlp2/Tensordot/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "TargetNetwork/mlp2/Tensordot/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "TargetNetwork/mlp2/Tensordot/Prod_1"
  op: "Prod"
  input: "TargetNetwork/mlp2/Tensordot/GatherV2_1"
  input: "TargetNetwork/mlp2/Tensordot/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "TargetNetwork/mlp2/Tensordot/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "TargetNetwork/mlp2/Tensordot/concat"
  op: "ConcatV2"
  input: "TargetNetwork/mlp2/Tensordot/free"
  input: "TargetNetwork/mlp2/Tensordot/axes"
  input: "TargetNetwork/mlp2/Tensordot/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "TargetNetwork/mlp2/Tensordot/stack"
  op: "Pack"
  input: "TargetNetwork/mlp2/Tensordot/Prod"
  input: "TargetNetwork/mlp2/Tensordot/Prod_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "TargetNetwork/mlp2/Tensordot/transpose"
  op: "Transpose"
  input: "TargetNetwork/mlp1/Elu"
  input: "TargetNetwork/mlp2/Tensordot/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "TargetNetwork/mlp2/Tensordot/Reshape"
  op: "Reshape"
  input: "TargetNetwork/mlp2/Tensordot/transpose"
  input: "TargetNetwork/mlp2/Tensordot/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "TargetNetwork/mlp2/Tensordot/transpose_1/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "TargetNetwork/mlp2/Tensordot/transpose_1"
  op: "Transpose"
  input: "TargetNetwork/mlp2/kernel/read"
  input: "TargetNetwork/mlp2/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "TargetNetwork/mlp2/Tensordot/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "TargetNetwork/mlp2/Tensordot/Reshape_1"
  op: "Reshape"
  input: "TargetNetwork/mlp2/Tensordot/transpose_1"
  input: "TargetNetwork/mlp2/Tensordot/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "TargetNetwork/mlp2/Tensordot/MatMul"
  op: "MatMul"
  input: "TargetNetwork/mlp2/Tensordot/Reshape"
  input: "TargetNetwork/mlp2/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "TargetNetwork/mlp2/Tensordot/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "TargetNetwork/mlp2/Tensordot/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "TargetNetwork/mlp2/Tensordot/concat_1"
  op: "ConcatV2"
  input: "TargetNetwork/mlp2/Tensordot/GatherV2"
  input: "TargetNetwork/mlp2/Tensordot/Const_2"
  input: "TargetNetwork/mlp2/Tensordot/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "TargetNetwork/mlp2/Tensordot"
  op: "Reshape"
  input: "TargetNetwork/mlp2/Tensordot/MatMul"
  input: "TargetNetwork/mlp2/Tensordot/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "TargetNetwork/mlp2/BiasAdd"
  op: "BiasAdd"
  input: "TargetNetwork/mlp2/Tensordot"
  input: "TargetNetwork/mlp2/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "TargetNetwork/mlp2/Elu"
  op: "Elu"
  input: "TargetNetwork/mlp2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "TargetNetwork/mlp3/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/mlp3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "TargetNetwork/mlp3/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/mlp3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1767766922712326
      }
    }
  }
}
node {
  name: "TargetNetwork/mlp3/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/mlp3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1767766922712326
      }
    }
  }
}
node {
  name: "TargetNetwork/mlp3/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "TargetNetwork/mlp3/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/mlp3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "TargetNetwork/mlp3/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "TargetNetwork/mlp3/kernel/Initializer/random_uniform/max"
  input: "TargetNetwork/mlp3/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/mlp3/kernel"
      }
    }
  }
}
node {
  name: "TargetNetwork/mlp3/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "TargetNetwork/mlp3/kernel/Initializer/random_uniform/RandomUniform"
  input: "TargetNetwork/mlp3/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/mlp3/kernel"
      }
    }
  }
}
node {
  name: "TargetNetwork/mlp3/kernel/Initializer/random_uniform"
  op: "Add"
  input: "TargetNetwork/mlp3/kernel/Initializer/random_uniform/mul"
  input: "TargetNetwork/mlp3/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/mlp3/kernel"
      }
    }
  }
}
node {
  name: "TargetNetwork/mlp3/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/mlp3/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "TargetNetwork/mlp3/kernel/Assign"
  op: "Assign"
  input: "TargetNetwork/mlp3/kernel"
  input: "TargetNetwork/mlp3/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/mlp3/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "TargetNetwork/mlp3/kernel/read"
  op: "Identity"
  input: "TargetNetwork/mlp3/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/mlp3/kernel"
      }
    }
  }
}
node {
  name: "TargetNetwork/mlp3/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/mlp3/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "TargetNetwork/mlp3/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/mlp3/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "TargetNetwork/mlp3/bias/Assign"
  op: "Assign"
  input: "TargetNetwork/mlp3/bias"
  input: "TargetNetwork/mlp3/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/mlp3/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "TargetNetwork/mlp3/bias/read"
  op: "Identity"
  input: "TargetNetwork/mlp3/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/mlp3/bias"
      }
    }
  }
}
node {
  name: "TargetNetwork/mlp3/Tensordot/axes"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "TargetNetwork/mlp3/Tensordot/free"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "TargetNetwork/mlp3/Tensordot/Shape"
  op: "Shape"
  input: "TargetNetwork/mlp2/Elu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "TargetNetwork/mlp3/Tensordot/GatherV2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "TargetNetwork/mlp3/Tensordot/GatherV2"
  op: "GatherV2"
  input: "TargetNetwork/mlp3/Tensordot/Shape"
  input: "TargetNetwork/mlp3/Tensordot/free"
  input: "TargetNetwork/mlp3/Tensordot/GatherV2/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "TargetNetwork/mlp3/Tensordot/GatherV2_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "TargetNetwork/mlp3/Tensordot/GatherV2_1"
  op: "GatherV2"
  input: "TargetNetwork/mlp3/Tensordot/Shape"
  input: "TargetNetwork/mlp3/Tensordot/axes"
  input: "TargetNetwork/mlp3/Tensordot/GatherV2_1/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "TargetNetwork/mlp3/Tensordot/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "TargetNetwork/mlp3/Tensordot/Prod"
  op: "Prod"
  input: "TargetNetwork/mlp3/Tensordot/GatherV2"
  input: "TargetNetwork/mlp3/Tensordot/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "TargetNetwork/mlp3/Tensordot/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "TargetNetwork/mlp3/Tensordot/Prod_1"
  op: "Prod"
  input: "TargetNetwork/mlp3/Tensordot/GatherV2_1"
  input: "TargetNetwork/mlp3/Tensordot/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "TargetNetwork/mlp3/Tensordot/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "TargetNetwork/mlp3/Tensordot/concat"
  op: "ConcatV2"
  input: "TargetNetwork/mlp3/Tensordot/free"
  input: "TargetNetwork/mlp3/Tensordot/axes"
  input: "TargetNetwork/mlp3/Tensordot/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "TargetNetwork/mlp3/Tensordot/stack"
  op: "Pack"
  input: "TargetNetwork/mlp3/Tensordot/Prod"
  input: "TargetNetwork/mlp3/Tensordot/Prod_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "TargetNetwork/mlp3/Tensordot/transpose"
  op: "Transpose"
  input: "TargetNetwork/mlp2/Elu"
  input: "TargetNetwork/mlp3/Tensordot/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "TargetNetwork/mlp3/Tensordot/Reshape"
  op: "Reshape"
  input: "TargetNetwork/mlp3/Tensordot/transpose"
  input: "TargetNetwork/mlp3/Tensordot/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "TargetNetwork/mlp3/Tensordot/transpose_1/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "TargetNetwork/mlp3/Tensordot/transpose_1"
  op: "Transpose"
  input: "TargetNetwork/mlp3/kernel/read"
  input: "TargetNetwork/mlp3/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "TargetNetwork/mlp3/Tensordot/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "TargetNetwork/mlp3/Tensordot/Reshape_1"
  op: "Reshape"
  input: "TargetNetwork/mlp3/Tensordot/transpose_1"
  input: "TargetNetwork/mlp3/Tensordot/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "TargetNetwork/mlp3/Tensordot/MatMul"
  op: "MatMul"
  input: "TargetNetwork/mlp3/Tensordot/Reshape"
  input: "TargetNetwork/mlp3/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "TargetNetwork/mlp3/Tensordot/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "TargetNetwork/mlp3/Tensordot/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "TargetNetwork/mlp3/Tensordot/concat_1"
  op: "ConcatV2"
  input: "TargetNetwork/mlp3/Tensordot/GatherV2"
  input: "TargetNetwork/mlp3/Tensordot/Const_2"
  input: "TargetNetwork/mlp3/Tensordot/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "TargetNetwork/mlp3/Tensordot"
  op: "Reshape"
  input: "TargetNetwork/mlp3/Tensordot/MatMul"
  input: "TargetNetwork/mlp3/Tensordot/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "TargetNetwork/mlp3/BiasAdd"
  op: "BiasAdd"
  input: "TargetNetwork/mlp3/Tensordot"
  input: "TargetNetwork/mlp3/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "TargetNetwork/mlp3/Elu"
  op: "Elu"
  input: "TargetNetwork/mlp3/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "TargetNetwork/flatten/Shape"
  op: "Shape"
  input: "TargetNetwork/mlp3/Elu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "TargetNetwork/flatten/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "TargetNetwork/flatten/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "TargetNetwork/flatten/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "TargetNetwork/flatten/strided_slice"
  op: "StridedSlice"
  input: "TargetNetwork/flatten/Shape"
  input: "TargetNetwork/flatten/strided_slice/stack"
  input: "TargetNetwork/flatten/strided_slice/stack_1"
  input: "TargetNetwork/flatten/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "TargetNetwork/flatten/Reshape/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "TargetNetwork/flatten/Reshape/shape"
  op: "Pack"
  input: "TargetNetwork/flatten/strided_slice"
  input: "TargetNetwork/flatten/Reshape/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "TargetNetwork/flatten/Reshape"
  op: "Reshape"
  input: "TargetNetwork/mlp3/Elu"
  input: "TargetNetwork/flatten/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "TargetNetwork/value_fc/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/value_fc/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\r\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "TargetNetwork/value_fc/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/value_fc/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0388856902718544
      }
    }
  }
}
node {
  name: "TargetNetwork/value_fc/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/value_fc/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0388856902718544
      }
    }
  }
}
node {
  name: "TargetNetwork/value_fc/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "TargetNetwork/value_fc/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/value_fc/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "TargetNetwork/value_fc/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "TargetNetwork/value_fc/kernel/Initializer/random_uniform/max"
  input: "TargetNetwork/value_fc/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/value_fc/kernel"
      }
    }
  }
}
node {
  name: "TargetNetwork/value_fc/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "TargetNetwork/value_fc/kernel/Initializer/random_uniform/RandomUniform"
  input: "TargetNetwork/value_fc/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/value_fc/kernel"
      }
    }
  }
}
node {
  name: "TargetNetwork/value_fc/kernel/Initializer/random_uniform"
  op: "Add"
  input: "TargetNetwork/value_fc/kernel/Initializer/random_uniform/mul"
  input: "TargetNetwork/value_fc/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/value_fc/kernel"
      }
    }
  }
}
node {
  name: "TargetNetwork/value_fc/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/value_fc/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3456
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "TargetNetwork/value_fc/kernel/Assign"
  op: "Assign"
  input: "TargetNetwork/value_fc/kernel"
  input: "TargetNetwork/value_fc/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/value_fc/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "TargetNetwork/value_fc/kernel/read"
  op: "Identity"
  input: "TargetNetwork/value_fc/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/value_fc/kernel"
      }
    }
  }
}
node {
  name: "TargetNetwork/value_fc/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/value_fc/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "TargetNetwork/value_fc/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/value_fc/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "TargetNetwork/value_fc/bias/Assign"
  op: "Assign"
  input: "TargetNetwork/value_fc/bias"
  input: "TargetNetwork/value_fc/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/value_fc/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "TargetNetwork/value_fc/bias/read"
  op: "Identity"
  input: "TargetNetwork/value_fc/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/value_fc/bias"
      }
    }
  }
}
node {
  name: "TargetNetwork/value_fc/MatMul"
  op: "MatMul"
  input: "TargetNetwork/flatten/Reshape"
  input: "TargetNetwork/value_fc/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "TargetNetwork/value_fc/BiasAdd"
  op: "BiasAdd"
  input: "TargetNetwork/value_fc/MatMul"
  input: "TargetNetwork/value_fc/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "TargetNetwork/value_fc/Elu"
  op: "Elu"
  input: "TargetNetwork/value_fc/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "TargetNetwork/value/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/value/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "TargetNetwork/value/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/value/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10814761370420456
      }
    }
  }
}
node {
  name: "TargetNetwork/value/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/value/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10814761370420456
      }
    }
  }
}
node {
  name: "TargetNetwork/value/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "TargetNetwork/value/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/value/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "TargetNetwork/value/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "TargetNetwork/value/kernel/Initializer/random_uniform/max"
  input: "TargetNetwork/value/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/value/kernel"
      }
    }
  }
}
node {
  name: "TargetNetwork/value/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "TargetNetwork/value/kernel/Initializer/random_uniform/RandomUniform"
  input: "TargetNetwork/value/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/value/kernel"
      }
    }
  }
}
node {
  name: "TargetNetwork/value/kernel/Initializer/random_uniform"
  op: "Add"
  input: "TargetNetwork/value/kernel/Initializer/random_uniform/mul"
  input: "TargetNetwork/value/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/value/kernel"
      }
    }
  }
}
node {
  name: "TargetNetwork/value/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/value/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "TargetNetwork/value/kernel/Assign"
  op: "Assign"
  input: "TargetNetwork/value/kernel"
  input: "TargetNetwork/value/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/value/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "TargetNetwork/value/kernel/read"
  op: "Identity"
  input: "TargetNetwork/value/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/value/kernel"
      }
    }
  }
}
node {
  name: "TargetNetwork/value/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/value/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "TargetNetwork/value/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/value/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "TargetNetwork/value/bias/Assign"
  op: "Assign"
  input: "TargetNetwork/value/bias"
  input: "TargetNetwork/value/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/value/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "TargetNetwork/value/bias/read"
  op: "Identity"
  input: "TargetNetwork/value/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/value/bias"
      }
    }
  }
}
node {
  name: "TargetNetwork/value/MatMul"
  op: "MatMul"
  input: "TargetNetwork/value_fc/Elu"
  input: "TargetNetwork/value/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "TargetNetwork/value/BiasAdd"
  op: "BiasAdd"
  input: "TargetNetwork/value/MatMul"
  input: "TargetNetwork/value/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "TargetNetwork/advantage_fc/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/advantage_fc/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\r\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "TargetNetwork/advantage_fc/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/advantage_fc/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0388856902718544
      }
    }
  }
}
node {
  name: "TargetNetwork/advantage_fc/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/advantage_fc/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0388856902718544
      }
    }
  }
}
node {
  name: "TargetNetwork/advantage_fc/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "TargetNetwork/advantage_fc/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/advantage_fc/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "TargetNetwork/advantage_fc/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "TargetNetwork/advantage_fc/kernel/Initializer/random_uniform/max"
  input: "TargetNetwork/advantage_fc/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/advantage_fc/kernel"
      }
    }
  }
}
node {
  name: "TargetNetwork/advantage_fc/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "TargetNetwork/advantage_fc/kernel/Initializer/random_uniform/RandomUniform"
  input: "TargetNetwork/advantage_fc/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/advantage_fc/kernel"
      }
    }
  }
}
node {
  name: "TargetNetwork/advantage_fc/kernel/Initializer/random_uniform"
  op: "Add"
  input: "TargetNetwork/advantage_fc/kernel/Initializer/random_uniform/mul"
  input: "TargetNetwork/advantage_fc/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/advantage_fc/kernel"
      }
    }
  }
}
node {
  name: "TargetNetwork/advantage_fc/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/advantage_fc/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3456
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "TargetNetwork/advantage_fc/kernel/Assign"
  op: "Assign"
  input: "TargetNetwork/advantage_fc/kernel"
  input: "TargetNetwork/advantage_fc/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/advantage_fc/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "TargetNetwork/advantage_fc/kernel/read"
  op: "Identity"
  input: "TargetNetwork/advantage_fc/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/advantage_fc/kernel"
      }
    }
  }
}
node {
  name: "TargetNetwork/advantage_fc/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/advantage_fc/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "TargetNetwork/advantage_fc/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/advantage_fc/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "TargetNetwork/advantage_fc/bias/Assign"
  op: "Assign"
  input: "TargetNetwork/advantage_fc/bias"
  input: "TargetNetwork/advantage_fc/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/advantage_fc/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "TargetNetwork/advantage_fc/bias/read"
  op: "Identity"
  input: "TargetNetwork/advantage_fc/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/advantage_fc/bias"
      }
    }
  }
}
node {
  name: "TargetNetwork/advantage_fc/MatMul"
  op: "MatMul"
  input: "TargetNetwork/flatten/Reshape"
  input: "TargetNetwork/advantage_fc/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "TargetNetwork/advantage_fc/BiasAdd"
  op: "BiasAdd"
  input: "TargetNetwork/advantage_fc/MatMul"
  input: "TargetNetwork/advantage_fc/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "TargetNetwork/advantage_fc/Elu"
  op: "Elu"
  input: "TargetNetwork/advantage_fc/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "TargetNetwork/advantages/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/advantages/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "TargetNetwork/advantages/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/advantages/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10793741792440414
      }
    }
  }
}
node {
  name: "TargetNetwork/advantages/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/advantages/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10793741792440414
      }
    }
  }
}
node {
  name: "TargetNetwork/advantages/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "TargetNetwork/advantages/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/advantages/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "TargetNetwork/advantages/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "TargetNetwork/advantages/kernel/Initializer/random_uniform/max"
  input: "TargetNetwork/advantages/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/advantages/kernel"
      }
    }
  }
}
node {
  name: "TargetNetwork/advantages/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "TargetNetwork/advantages/kernel/Initializer/random_uniform/RandomUniform"
  input: "TargetNetwork/advantages/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/advantages/kernel"
      }
    }
  }
}
node {
  name: "TargetNetwork/advantages/kernel/Initializer/random_uniform"
  op: "Add"
  input: "TargetNetwork/advantages/kernel/Initializer/random_uniform/mul"
  input: "TargetNetwork/advantages/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/advantages/kernel"
      }
    }
  }
}
node {
  name: "TargetNetwork/advantages/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/advantages/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 3
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "TargetNetwork/advantages/kernel/Assign"
  op: "Assign"
  input: "TargetNetwork/advantages/kernel"
  input: "TargetNetwork/advantages/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/advantages/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "TargetNetwork/advantages/kernel/read"
  op: "Identity"
  input: "TargetNetwork/advantages/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/advantages/kernel"
      }
    }
  }
}
node {
  name: "TargetNetwork/advantages/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/advantages/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "TargetNetwork/advantages/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/advantages/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "TargetNetwork/advantages/bias/Assign"
  op: "Assign"
  input: "TargetNetwork/advantages/bias"
  input: "TargetNetwork/advantages/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/advantages/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "TargetNetwork/advantages/bias/read"
  op: "Identity"
  input: "TargetNetwork/advantages/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/advantages/bias"
      }
    }
  }
}
node {
  name: "TargetNetwork/advantages/MatMul"
  op: "MatMul"
  input: "TargetNetwork/advantage_fc/Elu"
  input: "TargetNetwork/advantages/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "TargetNetwork/advantages/BiasAdd"
  op: "BiasAdd"
  input: "TargetNetwork/advantages/MatMul"
  input: "TargetNetwork/advantages/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "TargetNetwork/Mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "TargetNetwork/Mean"
  op: "Mean"
  input: "TargetNetwork/advantages/BiasAdd"
  input: "TargetNetwork/Mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "TargetNetwork/Sub"
  op: "Sub"
  input: "TargetNetwork/advantages/BiasAdd"
  input: "TargetNetwork/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "TargetNetwork/add"
  op: "Add"
  input: "TargetNetwork/value/BiasAdd"
  input: "TargetNetwork/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "TargetNetwork/Mul"
  op: "Mul"
  input: "TargetNetwork/add"
  input: "TargetNetwork/actions_"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "TargetNetwork/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "TargetNetwork/Sum"
  op: "Sum"
  input: "TargetNetwork/Mul"
  input: "TargetNetwork/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "TargetNetwork/sub_1"
  op: "Sub"
  input: "TargetNetwork/target"
  input: "TargetNetwork/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "TargetNetwork/Abs"
  op: "Abs"
  input: "TargetNetwork/sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "TargetNetwork/SquaredDifference"
  op: "SquaredDifference"
  input: "TargetNetwork/target"
  input: "TargetNetwork/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "TargetNetwork/mul_1"
  op: "Mul"
  input: "TargetNetwork/IS_weights"
  input: "TargetNetwork/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "TargetNetwork/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "TargetNetwork/Mean_1"
  op: "Mean"
  input: "TargetNetwork/mul_1"
  input: "TargetNetwork/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "TargetNetwork/gradients/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TargetNetwork/gradients/grad_ys_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "TargetNetwork/gradients/Fill"
  op: "Fill"
  input: "TargetNetwork/gradients/Shape"
  input: "TargetNetwork/gradients/grad_ys_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/Mean_1_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/Mean_1_grad/Reshape"
  op: "Reshape"
  input: "TargetNetwork/gradients/Fill"
  input: "TargetNetwork/gradients/TargetNetwork/Mean_1_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/Mean_1_grad/Shape"
  op: "Shape"
  input: "TargetNetwork/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/Mean_1_grad/Tile"
  op: "Tile"
  input: "TargetNetwork/gradients/TargetNetwork/Mean_1_grad/Reshape"
  input: "TargetNetwork/gradients/TargetNetwork/Mean_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/Mean_1_grad/Shape_1"
  op: "Shape"
  input: "TargetNetwork/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/Mean_1_grad/Shape_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/Mean_1_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/Mean_1_grad/Prod"
  op: "Prod"
  input: "TargetNetwork/gradients/TargetNetwork/Mean_1_grad/Shape_1"
  input: "TargetNetwork/gradients/TargetNetwork/Mean_1_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/Mean_1_grad/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/Mean_1_grad/Prod_1"
  op: "Prod"
  input: "TargetNetwork/gradients/TargetNetwork/Mean_1_grad/Shape_2"
  input: "TargetNetwork/gradients/TargetNetwork/Mean_1_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/Mean_1_grad/Maximum/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/Mean_1_grad/Maximum"
  op: "Maximum"
  input: "TargetNetwork/gradients/TargetNetwork/Mean_1_grad/Prod_1"
  input: "TargetNetwork/gradients/TargetNetwork/Mean_1_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/Mean_1_grad/floordiv"
  op: "FloorDiv"
  input: "TargetNetwork/gradients/TargetNetwork/Mean_1_grad/Prod"
  input: "TargetNetwork/gradients/TargetNetwork/Mean_1_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/Mean_1_grad/Cast"
  op: "Cast"
  input: "TargetNetwork/gradients/TargetNetwork/Mean_1_grad/floordiv"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/Mean_1_grad/truediv"
  op: "RealDiv"
  input: "TargetNetwork/gradients/TargetNetwork/Mean_1_grad/Tile"
  input: "TargetNetwork/gradients/TargetNetwork/Mean_1_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/mul_1_grad/Shape"
  op: "Shape"
  input: "TargetNetwork/IS_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/mul_1_grad/Shape_1"
  op: "Shape"
  input: "TargetNetwork/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "TargetNetwork/gradients/TargetNetwork/mul_1_grad/Shape"
  input: "TargetNetwork/gradients/TargetNetwork/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/mul_1_grad/Mul"
  op: "Mul"
  input: "TargetNetwork/gradients/TargetNetwork/Mean_1_grad/truediv"
  input: "TargetNetwork/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/mul_1_grad/Sum"
  op: "Sum"
  input: "TargetNetwork/gradients/TargetNetwork/mul_1_grad/Mul"
  input: "TargetNetwork/gradients/TargetNetwork/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/mul_1_grad/Reshape"
  op: "Reshape"
  input: "TargetNetwork/gradients/TargetNetwork/mul_1_grad/Sum"
  input: "TargetNetwork/gradients/TargetNetwork/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/mul_1_grad/Mul_1"
  op: "Mul"
  input: "TargetNetwork/IS_weights"
  input: "TargetNetwork/gradients/TargetNetwork/Mean_1_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/mul_1_grad/Sum_1"
  op: "Sum"
  input: "TargetNetwork/gradients/TargetNetwork/mul_1_grad/Mul_1"
  input: "TargetNetwork/gradients/TargetNetwork/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "TargetNetwork/gradients/TargetNetwork/mul_1_grad/Sum_1"
  input: "TargetNetwork/gradients/TargetNetwork/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^TargetNetwork/gradients/TargetNetwork/mul_1_grad/Reshape"
  input: "^TargetNetwork/gradients/TargetNetwork/mul_1_grad/Reshape_1"
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "TargetNetwork/gradients/TargetNetwork/mul_1_grad/Reshape"
  input: "^TargetNetwork/gradients/TargetNetwork/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/gradients/TargetNetwork/mul_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "TargetNetwork/gradients/TargetNetwork/mul_1_grad/Reshape_1"
  input: "^TargetNetwork/gradients/TargetNetwork/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/gradients/TargetNetwork/mul_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/SquaredDifference_grad/Shape"
  op: "Shape"
  input: "TargetNetwork/target"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/SquaredDifference_grad/Shape_1"
  op: "Shape"
  input: "TargetNetwork/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "TargetNetwork/gradients/TargetNetwork/SquaredDifference_grad/Shape"
  input: "TargetNetwork/gradients/TargetNetwork/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^TargetNetwork/gradients/TargetNetwork/mul_1_grad/tuple/control_dependency_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/SquaredDifference_grad/mul"
  op: "Mul"
  input: "TargetNetwork/gradients/TargetNetwork/SquaredDifference_grad/scalar"
  input: "TargetNetwork/gradients/TargetNetwork/mul_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/SquaredDifference_grad/sub"
  op: "Sub"
  input: "TargetNetwork/target"
  input: "TargetNetwork/Sum"
  input: "^TargetNetwork/gradients/TargetNetwork/mul_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "TargetNetwork/gradients/TargetNetwork/SquaredDifference_grad/mul"
  input: "TargetNetwork/gradients/TargetNetwork/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "TargetNetwork/gradients/TargetNetwork/SquaredDifference_grad/mul_1"
  input: "TargetNetwork/gradients/TargetNetwork/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "TargetNetwork/gradients/TargetNetwork/SquaredDifference_grad/Sum"
  input: "TargetNetwork/gradients/TargetNetwork/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "TargetNetwork/gradients/TargetNetwork/SquaredDifference_grad/mul_1"
  input: "TargetNetwork/gradients/TargetNetwork/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "TargetNetwork/gradients/TargetNetwork/SquaredDifference_grad/Sum_1"
  input: "TargetNetwork/gradients/TargetNetwork/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "TargetNetwork/gradients/TargetNetwork/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/SquaredDifference_grad/tuple/group_deps"
  op: "NoOp"
  input: "^TargetNetwork/gradients/TargetNetwork/SquaredDifference_grad/Neg"
  input: "^TargetNetwork/gradients/TargetNetwork/SquaredDifference_grad/Reshape"
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/SquaredDifference_grad/tuple/control_dependency"
  op: "Identity"
  input: "TargetNetwork/gradients/TargetNetwork/SquaredDifference_grad/Reshape"
  input: "^TargetNetwork/gradients/TargetNetwork/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/gradients/TargetNetwork/SquaredDifference_grad/Reshape"
      }
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/SquaredDifference_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "TargetNetwork/gradients/TargetNetwork/SquaredDifference_grad/Neg"
  input: "^TargetNetwork/gradients/TargetNetwork/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/gradients/TargetNetwork/SquaredDifference_grad/Neg"
      }
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/Sum_grad/Shape"
  op: "Shape"
  input: "TargetNetwork/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/Sum_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/gradients/TargetNetwork/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/Sum_grad/add"
  op: "Add"
  input: "TargetNetwork/Sum/reduction_indices"
  input: "TargetNetwork/gradients/TargetNetwork/Sum_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/gradients/TargetNetwork/Sum_grad/Shape"
      }
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/Sum_grad/mod"
  op: "FloorMod"
  input: "TargetNetwork/gradients/TargetNetwork/Sum_grad/add"
  input: "TargetNetwork/gradients/TargetNetwork/Sum_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/gradients/TargetNetwork/Sum_grad/Shape"
      }
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/Sum_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/gradients/TargetNetwork/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/Sum_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/gradients/TargetNetwork/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/Sum_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/gradients/TargetNetwork/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/Sum_grad/range"
  op: "Range"
  input: "TargetNetwork/gradients/TargetNetwork/Sum_grad/range/start"
  input: "TargetNetwork/gradients/TargetNetwork/Sum_grad/Size"
  input: "TargetNetwork/gradients/TargetNetwork/Sum_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/gradients/TargetNetwork/Sum_grad/Shape"
      }
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/Sum_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/gradients/TargetNetwork/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/Sum_grad/Fill"
  op: "Fill"
  input: "TargetNetwork/gradients/TargetNetwork/Sum_grad/Shape_1"
  input: "TargetNetwork/gradients/TargetNetwork/Sum_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/gradients/TargetNetwork/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/Sum_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "TargetNetwork/gradients/TargetNetwork/Sum_grad/range"
  input: "TargetNetwork/gradients/TargetNetwork/Sum_grad/mod"
  input: "TargetNetwork/gradients/TargetNetwork/Sum_grad/Shape"
  input: "TargetNetwork/gradients/TargetNetwork/Sum_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/gradients/TargetNetwork/Sum_grad/Shape"
      }
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/Sum_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/gradients/TargetNetwork/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/Sum_grad/Maximum"
  op: "Maximum"
  input: "TargetNetwork/gradients/TargetNetwork/Sum_grad/DynamicStitch"
  input: "TargetNetwork/gradients/TargetNetwork/Sum_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/gradients/TargetNetwork/Sum_grad/Shape"
      }
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/Sum_grad/floordiv"
  op: "FloorDiv"
  input: "TargetNetwork/gradients/TargetNetwork/Sum_grad/Shape"
  input: "TargetNetwork/gradients/TargetNetwork/Sum_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/gradients/TargetNetwork/Sum_grad/Shape"
      }
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/Sum_grad/Reshape"
  op: "Reshape"
  input: "TargetNetwork/gradients/TargetNetwork/SquaredDifference_grad/tuple/control_dependency_1"
  input: "TargetNetwork/gradients/TargetNetwork/Sum_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/Sum_grad/Tile"
  op: "Tile"
  input: "TargetNetwork/gradients/TargetNetwork/Sum_grad/Reshape"
  input: "TargetNetwork/gradients/TargetNetwork/Sum_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/Mul_grad/Shape"
  op: "Shape"
  input: "TargetNetwork/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/Mul_grad/Shape_1"
  op: "Shape"
  input: "TargetNetwork/actions_"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "TargetNetwork/gradients/TargetNetwork/Mul_grad/Shape"
  input: "TargetNetwork/gradients/TargetNetwork/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/Mul_grad/Mul"
  op: "Mul"
  input: "TargetNetwork/gradients/TargetNetwork/Sum_grad/Tile"
  input: "TargetNetwork/actions_"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/Mul_grad/Sum"
  op: "Sum"
  input: "TargetNetwork/gradients/TargetNetwork/Mul_grad/Mul"
  input: "TargetNetwork/gradients/TargetNetwork/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/Mul_grad/Reshape"
  op: "Reshape"
  input: "TargetNetwork/gradients/TargetNetwork/Mul_grad/Sum"
  input: "TargetNetwork/gradients/TargetNetwork/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/Mul_grad/Mul_1"
  op: "Mul"
  input: "TargetNetwork/add"
  input: "TargetNetwork/gradients/TargetNetwork/Sum_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/Mul_grad/Sum_1"
  op: "Sum"
  input: "TargetNetwork/gradients/TargetNetwork/Mul_grad/Mul_1"
  input: "TargetNetwork/gradients/TargetNetwork/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "TargetNetwork/gradients/TargetNetwork/Mul_grad/Sum_1"
  input: "TargetNetwork/gradients/TargetNetwork/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^TargetNetwork/gradients/TargetNetwork/Mul_grad/Reshape"
  input: "^TargetNetwork/gradients/TargetNetwork/Mul_grad/Reshape_1"
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "TargetNetwork/gradients/TargetNetwork/Mul_grad/Reshape"
  input: "^TargetNetwork/gradients/TargetNetwork/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/gradients/TargetNetwork/Mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "TargetNetwork/gradients/TargetNetwork/Mul_grad/Reshape_1"
  input: "^TargetNetwork/gradients/TargetNetwork/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/gradients/TargetNetwork/Mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/add_grad/Shape"
  op: "Shape"
  input: "TargetNetwork/value/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/add_grad/Shape_1"
  op: "Shape"
  input: "TargetNetwork/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "TargetNetwork/gradients/TargetNetwork/add_grad/Shape"
  input: "TargetNetwork/gradients/TargetNetwork/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/add_grad/Sum"
  op: "Sum"
  input: "TargetNetwork/gradients/TargetNetwork/Mul_grad/tuple/control_dependency"
  input: "TargetNetwork/gradients/TargetNetwork/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/add_grad/Reshape"
  op: "Reshape"
  input: "TargetNetwork/gradients/TargetNetwork/add_grad/Sum"
  input: "TargetNetwork/gradients/TargetNetwork/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/add_grad/Sum_1"
  op: "Sum"
  input: "TargetNetwork/gradients/TargetNetwork/Mul_grad/tuple/control_dependency"
  input: "TargetNetwork/gradients/TargetNetwork/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/add_grad/Reshape_1"
  op: "Reshape"
  input: "TargetNetwork/gradients/TargetNetwork/add_grad/Sum_1"
  input: "TargetNetwork/gradients/TargetNetwork/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^TargetNetwork/gradients/TargetNetwork/add_grad/Reshape"
  input: "^TargetNetwork/gradients/TargetNetwork/add_grad/Reshape_1"
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "TargetNetwork/gradients/TargetNetwork/add_grad/Reshape"
  input: "^TargetNetwork/gradients/TargetNetwork/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/gradients/TargetNetwork/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "TargetNetwork/gradients/TargetNetwork/add_grad/Reshape_1"
  input: "^TargetNetwork/gradients/TargetNetwork/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/gradients/TargetNetwork/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/value/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "TargetNetwork/gradients/TargetNetwork/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/value/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^TargetNetwork/gradients/TargetNetwork/add_grad/tuple/control_dependency"
  input: "^TargetNetwork/gradients/TargetNetwork/value/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/value/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "TargetNetwork/gradients/TargetNetwork/add_grad/tuple/control_dependency"
  input: "^TargetNetwork/gradients/TargetNetwork/value/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/gradients/TargetNetwork/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/value/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "TargetNetwork/gradients/TargetNetwork/value/BiasAdd_grad/BiasAddGrad"
  input: "^TargetNetwork/gradients/TargetNetwork/value/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/gradients/TargetNetwork/value/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/Sub_grad/Shape"
  op: "Shape"
  input: "TargetNetwork/advantages/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/Sub_grad/Shape_1"
  op: "Shape"
  input: "TargetNetwork/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/Sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "TargetNetwork/gradients/TargetNetwork/Sub_grad/Shape"
  input: "TargetNetwork/gradients/TargetNetwork/Sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/Sub_grad/Sum"
  op: "Sum"
  input: "TargetNetwork/gradients/TargetNetwork/add_grad/tuple/control_dependency_1"
  input: "TargetNetwork/gradients/TargetNetwork/Sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/Sub_grad/Reshape"
  op: "Reshape"
  input: "TargetNetwork/gradients/TargetNetwork/Sub_grad/Sum"
  input: "TargetNetwork/gradients/TargetNetwork/Sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/Sub_grad/Sum_1"
  op: "Sum"
  input: "TargetNetwork/gradients/TargetNetwork/add_grad/tuple/control_dependency_1"
  input: "TargetNetwork/gradients/TargetNetwork/Sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/Sub_grad/Neg"
  op: "Neg"
  input: "TargetNetwork/gradients/TargetNetwork/Sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/Sub_grad/Reshape_1"
  op: "Reshape"
  input: "TargetNetwork/gradients/TargetNetwork/Sub_grad/Neg"
  input: "TargetNetwork/gradients/TargetNetwork/Sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/Sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^TargetNetwork/gradients/TargetNetwork/Sub_grad/Reshape"
  input: "^TargetNetwork/gradients/TargetNetwork/Sub_grad/Reshape_1"
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/Sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "TargetNetwork/gradients/TargetNetwork/Sub_grad/Reshape"
  input: "^TargetNetwork/gradients/TargetNetwork/Sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/gradients/TargetNetwork/Sub_grad/Reshape"
      }
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/Sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "TargetNetwork/gradients/TargetNetwork/Sub_grad/Reshape_1"
  input: "^TargetNetwork/gradients/TargetNetwork/Sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/gradients/TargetNetwork/Sub_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/value/MatMul_grad/MatMul"
  op: "MatMul"
  input: "TargetNetwork/gradients/TargetNetwork/value/BiasAdd_grad/tuple/control_dependency"
  input: "TargetNetwork/value/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/value/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "TargetNetwork/value_fc/Elu"
  input: "TargetNetwork/gradients/TargetNetwork/value/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/value/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^TargetNetwork/gradients/TargetNetwork/value/MatMul_grad/MatMul"
  input: "^TargetNetwork/gradients/TargetNetwork/value/MatMul_grad/MatMul_1"
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/value/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "TargetNetwork/gradients/TargetNetwork/value/MatMul_grad/MatMul"
  input: "^TargetNetwork/gradients/TargetNetwork/value/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/gradients/TargetNetwork/value/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/value/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "TargetNetwork/gradients/TargetNetwork/value/MatMul_grad/MatMul_1"
  input: "^TargetNetwork/gradients/TargetNetwork/value/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/gradients/TargetNetwork/value/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/Mean_grad/Shape"
  op: "Shape"
  input: "TargetNetwork/advantages/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/Mean_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/gradients/TargetNetwork/Mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/Mean_grad/add"
  op: "Add"
  input: "TargetNetwork/Mean/reduction_indices"
  input: "TargetNetwork/gradients/TargetNetwork/Mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/gradients/TargetNetwork/Mean_grad/Shape"
      }
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/Mean_grad/mod"
  op: "FloorMod"
  input: "TargetNetwork/gradients/TargetNetwork/Mean_grad/add"
  input: "TargetNetwork/gradients/TargetNetwork/Mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/gradients/TargetNetwork/Mean_grad/Shape"
      }
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/Mean_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/gradients/TargetNetwork/Mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/Mean_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/gradients/TargetNetwork/Mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/Mean_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/gradients/TargetNetwork/Mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/Mean_grad/range"
  op: "Range"
  input: "TargetNetwork/gradients/TargetNetwork/Mean_grad/range/start"
  input: "TargetNetwork/gradients/TargetNetwork/Mean_grad/Size"
  input: "TargetNetwork/gradients/TargetNetwork/Mean_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/gradients/TargetNetwork/Mean_grad/Shape"
      }
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/Mean_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/gradients/TargetNetwork/Mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/Mean_grad/Fill"
  op: "Fill"
  input: "TargetNetwork/gradients/TargetNetwork/Mean_grad/Shape_1"
  input: "TargetNetwork/gradients/TargetNetwork/Mean_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/gradients/TargetNetwork/Mean_grad/Shape"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/Mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "TargetNetwork/gradients/TargetNetwork/Mean_grad/range"
  input: "TargetNetwork/gradients/TargetNetwork/Mean_grad/mod"
  input: "TargetNetwork/gradients/TargetNetwork/Mean_grad/Shape"
  input: "TargetNetwork/gradients/TargetNetwork/Mean_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/gradients/TargetNetwork/Mean_grad/Shape"
      }
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/Mean_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/gradients/TargetNetwork/Mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/Mean_grad/Maximum"
  op: "Maximum"
  input: "TargetNetwork/gradients/TargetNetwork/Mean_grad/DynamicStitch"
  input: "TargetNetwork/gradients/TargetNetwork/Mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/gradients/TargetNetwork/Mean_grad/Shape"
      }
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/Mean_grad/floordiv"
  op: "FloorDiv"
  input: "TargetNetwork/gradients/TargetNetwork/Mean_grad/Shape"
  input: "TargetNetwork/gradients/TargetNetwork/Mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/gradients/TargetNetwork/Mean_grad/Shape"
      }
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/Mean_grad/Reshape"
  op: "Reshape"
  input: "TargetNetwork/gradients/TargetNetwork/Sub_grad/tuple/control_dependency_1"
  input: "TargetNetwork/gradients/TargetNetwork/Mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/Mean_grad/Tile"
  op: "Tile"
  input: "TargetNetwork/gradients/TargetNetwork/Mean_grad/Reshape"
  input: "TargetNetwork/gradients/TargetNetwork/Mean_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/Mean_grad/Shape_2"
  op: "Shape"
  input: "TargetNetwork/advantages/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/Mean_grad/Shape_3"
  op: "Shape"
  input: "TargetNetwork/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/Mean_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/Mean_grad/Prod"
  op: "Prod"
  input: "TargetNetwork/gradients/TargetNetwork/Mean_grad/Shape_2"
  input: "TargetNetwork/gradients/TargetNetwork/Mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/Mean_grad/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/Mean_grad/Prod_1"
  op: "Prod"
  input: "TargetNetwork/gradients/TargetNetwork/Mean_grad/Shape_3"
  input: "TargetNetwork/gradients/TargetNetwork/Mean_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/Mean_grad/Maximum_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/Mean_grad/Maximum_1"
  op: "Maximum"
  input: "TargetNetwork/gradients/TargetNetwork/Mean_grad/Prod_1"
  input: "TargetNetwork/gradients/TargetNetwork/Mean_grad/Maximum_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/Mean_grad/floordiv_1"
  op: "FloorDiv"
  input: "TargetNetwork/gradients/TargetNetwork/Mean_grad/Prod"
  input: "TargetNetwork/gradients/TargetNetwork/Mean_grad/Maximum_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/Mean_grad/Cast"
  op: "Cast"
  input: "TargetNetwork/gradients/TargetNetwork/Mean_grad/floordiv_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/Mean_grad/truediv"
  op: "RealDiv"
  input: "TargetNetwork/gradients/TargetNetwork/Mean_grad/Tile"
  input: "TargetNetwork/gradients/TargetNetwork/Mean_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/value_fc/Elu_grad/EluGrad"
  op: "EluGrad"
  input: "TargetNetwork/gradients/TargetNetwork/value/MatMul_grad/tuple/control_dependency"
  input: "TargetNetwork/value_fc/Elu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "TargetNetwork/gradients/AddN"
  op: "AddN"
  input: "TargetNetwork/gradients/TargetNetwork/Sub_grad/tuple/control_dependency"
  input: "TargetNetwork/gradients/TargetNetwork/Mean_grad/truediv"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/gradients/TargetNetwork/Sub_grad/Reshape"
      }
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/advantages/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "TargetNetwork/gradients/AddN"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/advantages/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^TargetNetwork/gradients/AddN"
  input: "^TargetNetwork/gradients/TargetNetwork/advantages/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/advantages/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "TargetNetwork/gradients/AddN"
  input: "^TargetNetwork/gradients/TargetNetwork/advantages/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/gradients/TargetNetwork/Sub_grad/Reshape"
      }
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/advantages/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "TargetNetwork/gradients/TargetNetwork/advantages/BiasAdd_grad/BiasAddGrad"
  input: "^TargetNetwork/gradients/TargetNetwork/advantages/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/gradients/TargetNetwork/advantages/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/value_fc/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "TargetNetwork/gradients/TargetNetwork/value_fc/Elu_grad/EluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/value_fc/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^TargetNetwork/gradients/TargetNetwork/value_fc/BiasAdd_grad/BiasAddGrad"
  input: "^TargetNetwork/gradients/TargetNetwork/value_fc/Elu_grad/EluGrad"
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/value_fc/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "TargetNetwork/gradients/TargetNetwork/value_fc/Elu_grad/EluGrad"
  input: "^TargetNetwork/gradients/TargetNetwork/value_fc/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/gradients/TargetNetwork/value_fc/Elu_grad/EluGrad"
      }
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/value_fc/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "TargetNetwork/gradients/TargetNetwork/value_fc/BiasAdd_grad/BiasAddGrad"
  input: "^TargetNetwork/gradients/TargetNetwork/value_fc/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/gradients/TargetNetwork/value_fc/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/advantages/MatMul_grad/MatMul"
  op: "MatMul"
  input: "TargetNetwork/gradients/TargetNetwork/advantages/BiasAdd_grad/tuple/control_dependency"
  input: "TargetNetwork/advantages/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/advantages/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "TargetNetwork/advantage_fc/Elu"
  input: "TargetNetwork/gradients/TargetNetwork/advantages/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/advantages/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^TargetNetwork/gradients/TargetNetwork/advantages/MatMul_grad/MatMul"
  input: "^TargetNetwork/gradients/TargetNetwork/advantages/MatMul_grad/MatMul_1"
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/advantages/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "TargetNetwork/gradients/TargetNetwork/advantages/MatMul_grad/MatMul"
  input: "^TargetNetwork/gradients/TargetNetwork/advantages/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/gradients/TargetNetwork/advantages/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/advantages/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "TargetNetwork/gradients/TargetNetwork/advantages/MatMul_grad/MatMul_1"
  input: "^TargetNetwork/gradients/TargetNetwork/advantages/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/gradients/TargetNetwork/advantages/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/value_fc/MatMul_grad/MatMul"
  op: "MatMul"
  input: "TargetNetwork/gradients/TargetNetwork/value_fc/BiasAdd_grad/tuple/control_dependency"
  input: "TargetNetwork/value_fc/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/value_fc/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "TargetNetwork/flatten/Reshape"
  input: "TargetNetwork/gradients/TargetNetwork/value_fc/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/value_fc/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^TargetNetwork/gradients/TargetNetwork/value_fc/MatMul_grad/MatMul"
  input: "^TargetNetwork/gradients/TargetNetwork/value_fc/MatMul_grad/MatMul_1"
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/value_fc/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "TargetNetwork/gradients/TargetNetwork/value_fc/MatMul_grad/MatMul"
  input: "^TargetNetwork/gradients/TargetNetwork/value_fc/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/gradients/TargetNetwork/value_fc/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/value_fc/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "TargetNetwork/gradients/TargetNetwork/value_fc/MatMul_grad/MatMul_1"
  input: "^TargetNetwork/gradients/TargetNetwork/value_fc/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/gradients/TargetNetwork/value_fc/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/advantage_fc/Elu_grad/EluGrad"
  op: "EluGrad"
  input: "TargetNetwork/gradients/TargetNetwork/advantages/MatMul_grad/tuple/control_dependency"
  input: "TargetNetwork/advantage_fc/Elu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/advantage_fc/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "TargetNetwork/gradients/TargetNetwork/advantage_fc/Elu_grad/EluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/advantage_fc/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^TargetNetwork/gradients/TargetNetwork/advantage_fc/BiasAdd_grad/BiasAddGrad"
  input: "^TargetNetwork/gradients/TargetNetwork/advantage_fc/Elu_grad/EluGrad"
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/advantage_fc/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "TargetNetwork/gradients/TargetNetwork/advantage_fc/Elu_grad/EluGrad"
  input: "^TargetNetwork/gradients/TargetNetwork/advantage_fc/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/gradients/TargetNetwork/advantage_fc/Elu_grad/EluGrad"
      }
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/advantage_fc/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "TargetNetwork/gradients/TargetNetwork/advantage_fc/BiasAdd_grad/BiasAddGrad"
  input: "^TargetNetwork/gradients/TargetNetwork/advantage_fc/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/gradients/TargetNetwork/advantage_fc/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/advantage_fc/MatMul_grad/MatMul"
  op: "MatMul"
  input: "TargetNetwork/gradients/TargetNetwork/advantage_fc/BiasAdd_grad/tuple/control_dependency"
  input: "TargetNetwork/advantage_fc/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/advantage_fc/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "TargetNetwork/flatten/Reshape"
  input: "TargetNetwork/gradients/TargetNetwork/advantage_fc/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/advantage_fc/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^TargetNetwork/gradients/TargetNetwork/advantage_fc/MatMul_grad/MatMul"
  input: "^TargetNetwork/gradients/TargetNetwork/advantage_fc/MatMul_grad/MatMul_1"
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/advantage_fc/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "TargetNetwork/gradients/TargetNetwork/advantage_fc/MatMul_grad/MatMul"
  input: "^TargetNetwork/gradients/TargetNetwork/advantage_fc/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/gradients/TargetNetwork/advantage_fc/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/advantage_fc/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "TargetNetwork/gradients/TargetNetwork/advantage_fc/MatMul_grad/MatMul_1"
  input: "^TargetNetwork/gradients/TargetNetwork/advantage_fc/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/gradients/TargetNetwork/advantage_fc/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "TargetNetwork/gradients/AddN_1"
  op: "AddN"
  input: "TargetNetwork/gradients/TargetNetwork/value_fc/MatMul_grad/tuple/control_dependency"
  input: "TargetNetwork/gradients/TargetNetwork/advantage_fc/MatMul_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/gradients/TargetNetwork/value_fc/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/flatten/Reshape_grad/Shape"
  op: "Shape"
  input: "TargetNetwork/mlp3/Elu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/flatten/Reshape_grad/Reshape"
  op: "Reshape"
  input: "TargetNetwork/gradients/AddN_1"
  input: "TargetNetwork/gradients/TargetNetwork/flatten/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/mlp3/Elu_grad/EluGrad"
  op: "EluGrad"
  input: "TargetNetwork/gradients/TargetNetwork/flatten/Reshape_grad/Reshape"
  input: "TargetNetwork/mlp3/Elu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/mlp3/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "TargetNetwork/gradients/TargetNetwork/mlp3/Elu_grad/EluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/mlp3/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^TargetNetwork/gradients/TargetNetwork/mlp3/BiasAdd_grad/BiasAddGrad"
  input: "^TargetNetwork/gradients/TargetNetwork/mlp3/Elu_grad/EluGrad"
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/mlp3/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "TargetNetwork/gradients/TargetNetwork/mlp3/Elu_grad/EluGrad"
  input: "^TargetNetwork/gradients/TargetNetwork/mlp3/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/gradients/TargetNetwork/mlp3/Elu_grad/EluGrad"
      }
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/mlp3/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "TargetNetwork/gradients/TargetNetwork/mlp3/BiasAdd_grad/BiasAddGrad"
  input: "^TargetNetwork/gradients/TargetNetwork/mlp3/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/gradients/TargetNetwork/mlp3/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/mlp3/Tensordot_grad/Shape"
  op: "Shape"
  input: "TargetNetwork/mlp3/Tensordot/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/mlp3/Tensordot_grad/Reshape"
  op: "Reshape"
  input: "TargetNetwork/gradients/TargetNetwork/mlp3/BiasAdd_grad/tuple/control_dependency"
  input: "TargetNetwork/gradients/TargetNetwork/mlp3/Tensordot_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/mlp3/Tensordot/MatMul_grad/MatMul"
  op: "MatMul"
  input: "TargetNetwork/gradients/TargetNetwork/mlp3/Tensordot_grad/Reshape"
  input: "TargetNetwork/mlp3/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/mlp3/Tensordot/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "TargetNetwork/mlp3/Tensordot/Reshape"
  input: "TargetNetwork/gradients/TargetNetwork/mlp3/Tensordot_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/mlp3/Tensordot/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^TargetNetwork/gradients/TargetNetwork/mlp3/Tensordot/MatMul_grad/MatMul"
  input: "^TargetNetwork/gradients/TargetNetwork/mlp3/Tensordot/MatMul_grad/MatMul_1"
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/mlp3/Tensordot/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "TargetNetwork/gradients/TargetNetwork/mlp3/Tensordot/MatMul_grad/MatMul"
  input: "^TargetNetwork/gradients/TargetNetwork/mlp3/Tensordot/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/gradients/TargetNetwork/mlp3/Tensordot/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/mlp3/Tensordot/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "TargetNetwork/gradients/TargetNetwork/mlp3/Tensordot/MatMul_grad/MatMul_1"
  input: "^TargetNetwork/gradients/TargetNetwork/mlp3/Tensordot/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/gradients/TargetNetwork/mlp3/Tensordot/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/mlp3/Tensordot/Reshape_grad/Shape"
  op: "Shape"
  input: "TargetNetwork/mlp3/Tensordot/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/mlp3/Tensordot/Reshape_grad/Reshape"
  op: "Reshape"
  input: "TargetNetwork/gradients/TargetNetwork/mlp3/Tensordot/MatMul_grad/tuple/control_dependency"
  input: "TargetNetwork/gradients/TargetNetwork/mlp3/Tensordot/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/mlp3/Tensordot/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/mlp3/Tensordot/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "TargetNetwork/gradients/TargetNetwork/mlp3/Tensordot/MatMul_grad/tuple/control_dependency_1"
  input: "TargetNetwork/gradients/TargetNetwork/mlp3/Tensordot/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/mlp3/Tensordot/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "TargetNetwork/mlp3/Tensordot/concat"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/mlp3/Tensordot/transpose_grad/transpose"
  op: "Transpose"
  input: "TargetNetwork/gradients/TargetNetwork/mlp3/Tensordot/Reshape_grad/Reshape"
  input: "TargetNetwork/gradients/TargetNetwork/mlp3/Tensordot/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/mlp3/Tensordot/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "TargetNetwork/mlp3/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/mlp3/Tensordot/transpose_1_grad/transpose"
  op: "Transpose"
  input: "TargetNetwork/gradients/TargetNetwork/mlp3/Tensordot/Reshape_1_grad/Reshape"
  input: "TargetNetwork/gradients/TargetNetwork/mlp3/Tensordot/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/mlp2/Elu_grad/EluGrad"
  op: "EluGrad"
  input: "TargetNetwork/gradients/TargetNetwork/mlp3/Tensordot/transpose_grad/transpose"
  input: "TargetNetwork/mlp2/Elu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/mlp2/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "TargetNetwork/gradients/TargetNetwork/mlp2/Elu_grad/EluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/mlp2/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^TargetNetwork/gradients/TargetNetwork/mlp2/BiasAdd_grad/BiasAddGrad"
  input: "^TargetNetwork/gradients/TargetNetwork/mlp2/Elu_grad/EluGrad"
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/mlp2/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "TargetNetwork/gradients/TargetNetwork/mlp2/Elu_grad/EluGrad"
  input: "^TargetNetwork/gradients/TargetNetwork/mlp2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/gradients/TargetNetwork/mlp2/Elu_grad/EluGrad"
      }
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/mlp2/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "TargetNetwork/gradients/TargetNetwork/mlp2/BiasAdd_grad/BiasAddGrad"
  input: "^TargetNetwork/gradients/TargetNetwork/mlp2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/gradients/TargetNetwork/mlp2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/mlp2/Tensordot_grad/Shape"
  op: "Shape"
  input: "TargetNetwork/mlp2/Tensordot/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/mlp2/Tensordot_grad/Reshape"
  op: "Reshape"
  input: "TargetNetwork/gradients/TargetNetwork/mlp2/BiasAdd_grad/tuple/control_dependency"
  input: "TargetNetwork/gradients/TargetNetwork/mlp2/Tensordot_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/mlp2/Tensordot/MatMul_grad/MatMul"
  op: "MatMul"
  input: "TargetNetwork/gradients/TargetNetwork/mlp2/Tensordot_grad/Reshape"
  input: "TargetNetwork/mlp2/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/mlp2/Tensordot/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "TargetNetwork/mlp2/Tensordot/Reshape"
  input: "TargetNetwork/gradients/TargetNetwork/mlp2/Tensordot_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/mlp2/Tensordot/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^TargetNetwork/gradients/TargetNetwork/mlp2/Tensordot/MatMul_grad/MatMul"
  input: "^TargetNetwork/gradients/TargetNetwork/mlp2/Tensordot/MatMul_grad/MatMul_1"
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/mlp2/Tensordot/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "TargetNetwork/gradients/TargetNetwork/mlp2/Tensordot/MatMul_grad/MatMul"
  input: "^TargetNetwork/gradients/TargetNetwork/mlp2/Tensordot/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/gradients/TargetNetwork/mlp2/Tensordot/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/mlp2/Tensordot/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "TargetNetwork/gradients/TargetNetwork/mlp2/Tensordot/MatMul_grad/MatMul_1"
  input: "^TargetNetwork/gradients/TargetNetwork/mlp2/Tensordot/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/gradients/TargetNetwork/mlp2/Tensordot/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/mlp2/Tensordot/Reshape_grad/Shape"
  op: "Shape"
  input: "TargetNetwork/mlp2/Tensordot/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/mlp2/Tensordot/Reshape_grad/Reshape"
  op: "Reshape"
  input: "TargetNetwork/gradients/TargetNetwork/mlp2/Tensordot/MatMul_grad/tuple/control_dependency"
  input: "TargetNetwork/gradients/TargetNetwork/mlp2/Tensordot/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/mlp2/Tensordot/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/mlp2/Tensordot/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "TargetNetwork/gradients/TargetNetwork/mlp2/Tensordot/MatMul_grad/tuple/control_dependency_1"
  input: "TargetNetwork/gradients/TargetNetwork/mlp2/Tensordot/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/mlp2/Tensordot/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "TargetNetwork/mlp2/Tensordot/concat"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/mlp2/Tensordot/transpose_grad/transpose"
  op: "Transpose"
  input: "TargetNetwork/gradients/TargetNetwork/mlp2/Tensordot/Reshape_grad/Reshape"
  input: "TargetNetwork/gradients/TargetNetwork/mlp2/Tensordot/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/mlp2/Tensordot/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "TargetNetwork/mlp2/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/mlp2/Tensordot/transpose_1_grad/transpose"
  op: "Transpose"
  input: "TargetNetwork/gradients/TargetNetwork/mlp2/Tensordot/Reshape_1_grad/Reshape"
  input: "TargetNetwork/gradients/TargetNetwork/mlp2/Tensordot/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/mlp1/Elu_grad/EluGrad"
  op: "EluGrad"
  input: "TargetNetwork/gradients/TargetNetwork/mlp2/Tensordot/transpose_grad/transpose"
  input: "TargetNetwork/mlp1/Elu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/mlp1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "TargetNetwork/gradients/TargetNetwork/mlp1/Elu_grad/EluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/mlp1/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^TargetNetwork/gradients/TargetNetwork/mlp1/BiasAdd_grad/BiasAddGrad"
  input: "^TargetNetwork/gradients/TargetNetwork/mlp1/Elu_grad/EluGrad"
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/mlp1/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "TargetNetwork/gradients/TargetNetwork/mlp1/Elu_grad/EluGrad"
  input: "^TargetNetwork/gradients/TargetNetwork/mlp1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/gradients/TargetNetwork/mlp1/Elu_grad/EluGrad"
      }
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/mlp1/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "TargetNetwork/gradients/TargetNetwork/mlp1/BiasAdd_grad/BiasAddGrad"
  input: "^TargetNetwork/gradients/TargetNetwork/mlp1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/gradients/TargetNetwork/mlp1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/mlp1/Tensordot_grad/Shape"
  op: "Shape"
  input: "TargetNetwork/mlp1/Tensordot/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/mlp1/Tensordot_grad/Reshape"
  op: "Reshape"
  input: "TargetNetwork/gradients/TargetNetwork/mlp1/BiasAdd_grad/tuple/control_dependency"
  input: "TargetNetwork/gradients/TargetNetwork/mlp1/Tensordot_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/mlp1/Tensordot/MatMul_grad/MatMul"
  op: "MatMul"
  input: "TargetNetwork/gradients/TargetNetwork/mlp1/Tensordot_grad/Reshape"
  input: "TargetNetwork/mlp1/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/mlp1/Tensordot/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "TargetNetwork/mlp1/Tensordot/Reshape"
  input: "TargetNetwork/gradients/TargetNetwork/mlp1/Tensordot_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/mlp1/Tensordot/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^TargetNetwork/gradients/TargetNetwork/mlp1/Tensordot/MatMul_grad/MatMul"
  input: "^TargetNetwork/gradients/TargetNetwork/mlp1/Tensordot/MatMul_grad/MatMul_1"
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/mlp1/Tensordot/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "TargetNetwork/gradients/TargetNetwork/mlp1/Tensordot/MatMul_grad/MatMul"
  input: "^TargetNetwork/gradients/TargetNetwork/mlp1/Tensordot/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/gradients/TargetNetwork/mlp1/Tensordot/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/mlp1/Tensordot/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "TargetNetwork/gradients/TargetNetwork/mlp1/Tensordot/MatMul_grad/MatMul_1"
  input: "^TargetNetwork/gradients/TargetNetwork/mlp1/Tensordot/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/gradients/TargetNetwork/mlp1/Tensordot/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/mlp1/Tensordot/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/mlp1/Tensordot/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "TargetNetwork/gradients/TargetNetwork/mlp1/Tensordot/MatMul_grad/tuple/control_dependency_1"
  input: "TargetNetwork/gradients/TargetNetwork/mlp1/Tensordot/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/mlp1/Tensordot/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "TargetNetwork/mlp1/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "TargetNetwork/gradients/TargetNetwork/mlp1/Tensordot/transpose_1_grad/transpose"
  op: "Transpose"
  input: "TargetNetwork/gradients/TargetNetwork/mlp1/Tensordot/Reshape_1_grad/Reshape"
  input: "TargetNetwork/gradients/TargetNetwork/mlp1/Tensordot/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "TargetNetwork/TargetNetwork/mlp1/kernel/RMSProp/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/mlp1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "TargetNetwork/TargetNetwork/mlp1/kernel/RMSProp"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/mlp1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "TargetNetwork/TargetNetwork/mlp1/kernel/RMSProp/Assign"
  op: "Assign"
  input: "TargetNetwork/TargetNetwork/mlp1/kernel/RMSProp"
  input: "TargetNetwork/TargetNetwork/mlp1/kernel/RMSProp/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/mlp1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "TargetNetwork/TargetNetwork/mlp1/kernel/RMSProp/read"
  op: "Identity"
  input: "TargetNetwork/TargetNetwork/mlp1/kernel/RMSProp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/mlp1/kernel"
      }
    }
  }
}
node {
  name: "TargetNetwork/TargetNetwork/mlp1/kernel/RMSProp_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/mlp1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "TargetNetwork/TargetNetwork/mlp1/kernel/RMSProp_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/mlp1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "TargetNetwork/TargetNetwork/mlp1/kernel/RMSProp_1/Assign"
  op: "Assign"
  input: "TargetNetwork/TargetNetwork/mlp1/kernel/RMSProp_1"
  input: "TargetNetwork/TargetNetwork/mlp1/kernel/RMSProp_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/mlp1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "TargetNetwork/TargetNetwork/mlp1/kernel/RMSProp_1/read"
  op: "Identity"
  input: "TargetNetwork/TargetNetwork/mlp1/kernel/RMSProp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/mlp1/kernel"
      }
    }
  }
}
node {
  name: "TargetNetwork/TargetNetwork/mlp1/bias/RMSProp/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/mlp1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "TargetNetwork/TargetNetwork/mlp1/bias/RMSProp"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/mlp1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "TargetNetwork/TargetNetwork/mlp1/bias/RMSProp/Assign"
  op: "Assign"
  input: "TargetNetwork/TargetNetwork/mlp1/bias/RMSProp"
  input: "TargetNetwork/TargetNetwork/mlp1/bias/RMSProp/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/mlp1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "TargetNetwork/TargetNetwork/mlp1/bias/RMSProp/read"
  op: "Identity"
  input: "TargetNetwork/TargetNetwork/mlp1/bias/RMSProp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/mlp1/bias"
      }
    }
  }
}
node {
  name: "TargetNetwork/TargetNetwork/mlp1/bias/RMSProp_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/mlp1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "TargetNetwork/TargetNetwork/mlp1/bias/RMSProp_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/mlp1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "TargetNetwork/TargetNetwork/mlp1/bias/RMSProp_1/Assign"
  op: "Assign"
  input: "TargetNetwork/TargetNetwork/mlp1/bias/RMSProp_1"
  input: "TargetNetwork/TargetNetwork/mlp1/bias/RMSProp_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/mlp1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "TargetNetwork/TargetNetwork/mlp1/bias/RMSProp_1/read"
  op: "Identity"
  input: "TargetNetwork/TargetNetwork/mlp1/bias/RMSProp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/mlp1/bias"
      }
    }
  }
}
node {
  name: "TargetNetwork/TargetNetwork/mlp2/kernel/RMSProp/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/mlp2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "TargetNetwork/TargetNetwork/mlp2/kernel/RMSProp/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/mlp2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "TargetNetwork/TargetNetwork/mlp2/kernel/RMSProp/Initializer/ones"
  op: "Fill"
  input: "TargetNetwork/TargetNetwork/mlp2/kernel/RMSProp/Initializer/ones/shape_as_tensor"
  input: "TargetNetwork/TargetNetwork/mlp2/kernel/RMSProp/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/mlp2/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "TargetNetwork/TargetNetwork/mlp2/kernel/RMSProp"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/mlp2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "TargetNetwork/TargetNetwork/mlp2/kernel/RMSProp/Assign"
  op: "Assign"
  input: "TargetNetwork/TargetNetwork/mlp2/kernel/RMSProp"
  input: "TargetNetwork/TargetNetwork/mlp2/kernel/RMSProp/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/mlp2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "TargetNetwork/TargetNetwork/mlp2/kernel/RMSProp/read"
  op: "Identity"
  input: "TargetNetwork/TargetNetwork/mlp2/kernel/RMSProp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/mlp2/kernel"
      }
    }
  }
}
node {
  name: "TargetNetwork/TargetNetwork/mlp2/kernel/RMSProp_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/mlp2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "TargetNetwork/TargetNetwork/mlp2/kernel/RMSProp_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/mlp2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "TargetNetwork/TargetNetwork/mlp2/kernel/RMSProp_1/Initializer/zeros"
  op: "Fill"
  input: "TargetNetwork/TargetNetwork/mlp2/kernel/RMSProp_1/Initializer/zeros/shape_as_tensor"
  input: "TargetNetwork/TargetNetwork/mlp2/kernel/RMSProp_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/mlp2/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "TargetNetwork/TargetNetwork/mlp2/kernel/RMSProp_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/mlp2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "TargetNetwork/TargetNetwork/mlp2/kernel/RMSProp_1/Assign"
  op: "Assign"
  input: "TargetNetwork/TargetNetwork/mlp2/kernel/RMSProp_1"
  input: "TargetNetwork/TargetNetwork/mlp2/kernel/RMSProp_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/mlp2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "TargetNetwork/TargetNetwork/mlp2/kernel/RMSProp_1/read"
  op: "Identity"
  input: "TargetNetwork/TargetNetwork/mlp2/kernel/RMSProp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/mlp2/kernel"
      }
    }
  }
}
node {
  name: "TargetNetwork/TargetNetwork/mlp2/bias/RMSProp/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/mlp2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "TargetNetwork/TargetNetwork/mlp2/bias/RMSProp"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/mlp2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "TargetNetwork/TargetNetwork/mlp2/bias/RMSProp/Assign"
  op: "Assign"
  input: "TargetNetwork/TargetNetwork/mlp2/bias/RMSProp"
  input: "TargetNetwork/TargetNetwork/mlp2/bias/RMSProp/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/mlp2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "TargetNetwork/TargetNetwork/mlp2/bias/RMSProp/read"
  op: "Identity"
  input: "TargetNetwork/TargetNetwork/mlp2/bias/RMSProp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/mlp2/bias"
      }
    }
  }
}
node {
  name: "TargetNetwork/TargetNetwork/mlp2/bias/RMSProp_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/mlp2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "TargetNetwork/TargetNetwork/mlp2/bias/RMSProp_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/mlp2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "TargetNetwork/TargetNetwork/mlp2/bias/RMSProp_1/Assign"
  op: "Assign"
  input: "TargetNetwork/TargetNetwork/mlp2/bias/RMSProp_1"
  input: "TargetNetwork/TargetNetwork/mlp2/bias/RMSProp_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/mlp2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "TargetNetwork/TargetNetwork/mlp2/bias/RMSProp_1/read"
  op: "Identity"
  input: "TargetNetwork/TargetNetwork/mlp2/bias/RMSProp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/mlp2/bias"
      }
    }
  }
}
node {
  name: "TargetNetwork/TargetNetwork/mlp3/kernel/RMSProp/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/mlp3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "TargetNetwork/TargetNetwork/mlp3/kernel/RMSProp/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/mlp3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "TargetNetwork/TargetNetwork/mlp3/kernel/RMSProp/Initializer/ones"
  op: "Fill"
  input: "TargetNetwork/TargetNetwork/mlp3/kernel/RMSProp/Initializer/ones/shape_as_tensor"
  input: "TargetNetwork/TargetNetwork/mlp3/kernel/RMSProp/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/mlp3/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "TargetNetwork/TargetNetwork/mlp3/kernel/RMSProp"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/mlp3/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "TargetNetwork/TargetNetwork/mlp3/kernel/RMSProp/Assign"
  op: "Assign"
  input: "TargetNetwork/TargetNetwork/mlp3/kernel/RMSProp"
  input: "TargetNetwork/TargetNetwork/mlp3/kernel/RMSProp/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/mlp3/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "TargetNetwork/TargetNetwork/mlp3/kernel/RMSProp/read"
  op: "Identity"
  input: "TargetNetwork/TargetNetwork/mlp3/kernel/RMSProp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/mlp3/kernel"
      }
    }
  }
}
node {
  name: "TargetNetwork/TargetNetwork/mlp3/kernel/RMSProp_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/mlp3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "TargetNetwork/TargetNetwork/mlp3/kernel/RMSProp_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/mlp3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "TargetNetwork/TargetNetwork/mlp3/kernel/RMSProp_1/Initializer/zeros"
  op: "Fill"
  input: "TargetNetwork/TargetNetwork/mlp3/kernel/RMSProp_1/Initializer/zeros/shape_as_tensor"
  input: "TargetNetwork/TargetNetwork/mlp3/kernel/RMSProp_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/mlp3/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "TargetNetwork/TargetNetwork/mlp3/kernel/RMSProp_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/mlp3/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "TargetNetwork/TargetNetwork/mlp3/kernel/RMSProp_1/Assign"
  op: "Assign"
  input: "TargetNetwork/TargetNetwork/mlp3/kernel/RMSProp_1"
  input: "TargetNetwork/TargetNetwork/mlp3/kernel/RMSProp_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/mlp3/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "TargetNetwork/TargetNetwork/mlp3/kernel/RMSProp_1/read"
  op: "Identity"
  input: "TargetNetwork/TargetNetwork/mlp3/kernel/RMSProp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/mlp3/kernel"
      }
    }
  }
}
node {
  name: "TargetNetwork/TargetNetwork/mlp3/bias/RMSProp/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/mlp3/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "TargetNetwork/TargetNetwork/mlp3/bias/RMSProp"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/mlp3/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "TargetNetwork/TargetNetwork/mlp3/bias/RMSProp/Assign"
  op: "Assign"
  input: "TargetNetwork/TargetNetwork/mlp3/bias/RMSProp"
  input: "TargetNetwork/TargetNetwork/mlp3/bias/RMSProp/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/mlp3/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "TargetNetwork/TargetNetwork/mlp3/bias/RMSProp/read"
  op: "Identity"
  input: "TargetNetwork/TargetNetwork/mlp3/bias/RMSProp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/mlp3/bias"
      }
    }
  }
}
node {
  name: "TargetNetwork/TargetNetwork/mlp3/bias/RMSProp_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/mlp3/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "TargetNetwork/TargetNetwork/mlp3/bias/RMSProp_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/mlp3/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "TargetNetwork/TargetNetwork/mlp3/bias/RMSProp_1/Assign"
  op: "Assign"
  input: "TargetNetwork/TargetNetwork/mlp3/bias/RMSProp_1"
  input: "TargetNetwork/TargetNetwork/mlp3/bias/RMSProp_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/mlp3/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "TargetNetwork/TargetNetwork/mlp3/bias/RMSProp_1/read"
  op: "Identity"
  input: "TargetNetwork/TargetNetwork/mlp3/bias/RMSProp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/mlp3/bias"
      }
    }
  }
}
node {
  name: "TargetNetwork/TargetNetwork/value_fc/kernel/RMSProp/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/value_fc/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\r\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "TargetNetwork/TargetNetwork/value_fc/kernel/RMSProp/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/value_fc/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "TargetNetwork/TargetNetwork/value_fc/kernel/RMSProp/Initializer/ones"
  op: "Fill"
  input: "TargetNetwork/TargetNetwork/value_fc/kernel/RMSProp/Initializer/ones/shape_as_tensor"
  input: "TargetNetwork/TargetNetwork/value_fc/kernel/RMSProp/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/value_fc/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "TargetNetwork/TargetNetwork/value_fc/kernel/RMSProp"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/value_fc/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3456
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "TargetNetwork/TargetNetwork/value_fc/kernel/RMSProp/Assign"
  op: "Assign"
  input: "TargetNetwork/TargetNetwork/value_fc/kernel/RMSProp"
  input: "TargetNetwork/TargetNetwork/value_fc/kernel/RMSProp/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/value_fc/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "TargetNetwork/TargetNetwork/value_fc/kernel/RMSProp/read"
  op: "Identity"
  input: "TargetNetwork/TargetNetwork/value_fc/kernel/RMSProp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/value_fc/kernel"
      }
    }
  }
}
node {
  name: "TargetNetwork/TargetNetwork/value_fc/kernel/RMSProp_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/value_fc/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\r\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "TargetNetwork/TargetNetwork/value_fc/kernel/RMSProp_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/value_fc/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "TargetNetwork/TargetNetwork/value_fc/kernel/RMSProp_1/Initializer/zeros"
  op: "Fill"
  input: "TargetNetwork/TargetNetwork/value_fc/kernel/RMSProp_1/Initializer/zeros/shape_as_tensor"
  input: "TargetNetwork/TargetNetwork/value_fc/kernel/RMSProp_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/value_fc/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "TargetNetwork/TargetNetwork/value_fc/kernel/RMSProp_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/value_fc/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3456
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "TargetNetwork/TargetNetwork/value_fc/kernel/RMSProp_1/Assign"
  op: "Assign"
  input: "TargetNetwork/TargetNetwork/value_fc/kernel/RMSProp_1"
  input: "TargetNetwork/TargetNetwork/value_fc/kernel/RMSProp_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/value_fc/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "TargetNetwork/TargetNetwork/value_fc/kernel/RMSProp_1/read"
  op: "Identity"
  input: "TargetNetwork/TargetNetwork/value_fc/kernel/RMSProp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/value_fc/kernel"
      }
    }
  }
}
node {
  name: "TargetNetwork/TargetNetwork/value_fc/bias/RMSProp/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/value_fc/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "TargetNetwork/TargetNetwork/value_fc/bias/RMSProp"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/value_fc/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "TargetNetwork/TargetNetwork/value_fc/bias/RMSProp/Assign"
  op: "Assign"
  input: "TargetNetwork/TargetNetwork/value_fc/bias/RMSProp"
  input: "TargetNetwork/TargetNetwork/value_fc/bias/RMSProp/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/value_fc/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "TargetNetwork/TargetNetwork/value_fc/bias/RMSProp/read"
  op: "Identity"
  input: "TargetNetwork/TargetNetwork/value_fc/bias/RMSProp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/value_fc/bias"
      }
    }
  }
}
node {
  name: "TargetNetwork/TargetNetwork/value_fc/bias/RMSProp_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/value_fc/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "TargetNetwork/TargetNetwork/value_fc/bias/RMSProp_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/value_fc/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "TargetNetwork/TargetNetwork/value_fc/bias/RMSProp_1/Assign"
  op: "Assign"
  input: "TargetNetwork/TargetNetwork/value_fc/bias/RMSProp_1"
  input: "TargetNetwork/TargetNetwork/value_fc/bias/RMSProp_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/value_fc/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "TargetNetwork/TargetNetwork/value_fc/bias/RMSProp_1/read"
  op: "Identity"
  input: "TargetNetwork/TargetNetwork/value_fc/bias/RMSProp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/value_fc/bias"
      }
    }
  }
}
node {
  name: "TargetNetwork/TargetNetwork/value/kernel/RMSProp/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/value/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
          dim {
            size: 1
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "TargetNetwork/TargetNetwork/value/kernel/RMSProp"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/value/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "TargetNetwork/TargetNetwork/value/kernel/RMSProp/Assign"
  op: "Assign"
  input: "TargetNetwork/TargetNetwork/value/kernel/RMSProp"
  input: "TargetNetwork/TargetNetwork/value/kernel/RMSProp/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/value/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "TargetNetwork/TargetNetwork/value/kernel/RMSProp/read"
  op: "Identity"
  input: "TargetNetwork/TargetNetwork/value/kernel/RMSProp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/value/kernel"
      }
    }
  }
}
node {
  name: "TargetNetwork/TargetNetwork/value/kernel/RMSProp_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/value/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "TargetNetwork/TargetNetwork/value/kernel/RMSProp_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/value/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "TargetNetwork/TargetNetwork/value/kernel/RMSProp_1/Assign"
  op: "Assign"
  input: "TargetNetwork/TargetNetwork/value/kernel/RMSProp_1"
  input: "TargetNetwork/TargetNetwork/value/kernel/RMSProp_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/value/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "TargetNetwork/TargetNetwork/value/kernel/RMSProp_1/read"
  op: "Identity"
  input: "TargetNetwork/TargetNetwork/value/kernel/RMSProp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/value/kernel"
      }
    }
  }
}
node {
  name: "TargetNetwork/TargetNetwork/value/bias/RMSProp/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/value/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "TargetNetwork/TargetNetwork/value/bias/RMSProp"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/value/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "TargetNetwork/TargetNetwork/value/bias/RMSProp/Assign"
  op: "Assign"
  input: "TargetNetwork/TargetNetwork/value/bias/RMSProp"
  input: "TargetNetwork/TargetNetwork/value/bias/RMSProp/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/value/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "TargetNetwork/TargetNetwork/value/bias/RMSProp/read"
  op: "Identity"
  input: "TargetNetwork/TargetNetwork/value/bias/RMSProp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/value/bias"
      }
    }
  }
}
node {
  name: "TargetNetwork/TargetNetwork/value/bias/RMSProp_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/value/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "TargetNetwork/TargetNetwork/value/bias/RMSProp_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/value/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "TargetNetwork/TargetNetwork/value/bias/RMSProp_1/Assign"
  op: "Assign"
  input: "TargetNetwork/TargetNetwork/value/bias/RMSProp_1"
  input: "TargetNetwork/TargetNetwork/value/bias/RMSProp_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/value/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "TargetNetwork/TargetNetwork/value/bias/RMSProp_1/read"
  op: "Identity"
  input: "TargetNetwork/TargetNetwork/value/bias/RMSProp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/value/bias"
      }
    }
  }
}
node {
  name: "TargetNetwork/TargetNetwork/advantage_fc/kernel/RMSProp/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/advantage_fc/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\r\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "TargetNetwork/TargetNetwork/advantage_fc/kernel/RMSProp/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/advantage_fc/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "TargetNetwork/TargetNetwork/advantage_fc/kernel/RMSProp/Initializer/ones"
  op: "Fill"
  input: "TargetNetwork/TargetNetwork/advantage_fc/kernel/RMSProp/Initializer/ones/shape_as_tensor"
  input: "TargetNetwork/TargetNetwork/advantage_fc/kernel/RMSProp/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/advantage_fc/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "TargetNetwork/TargetNetwork/advantage_fc/kernel/RMSProp"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/advantage_fc/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3456
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "TargetNetwork/TargetNetwork/advantage_fc/kernel/RMSProp/Assign"
  op: "Assign"
  input: "TargetNetwork/TargetNetwork/advantage_fc/kernel/RMSProp"
  input: "TargetNetwork/TargetNetwork/advantage_fc/kernel/RMSProp/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/advantage_fc/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "TargetNetwork/TargetNetwork/advantage_fc/kernel/RMSProp/read"
  op: "Identity"
  input: "TargetNetwork/TargetNetwork/advantage_fc/kernel/RMSProp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/advantage_fc/kernel"
      }
    }
  }
}
node {
  name: "TargetNetwork/TargetNetwork/advantage_fc/kernel/RMSProp_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/advantage_fc/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\r\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "TargetNetwork/TargetNetwork/advantage_fc/kernel/RMSProp_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/advantage_fc/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "TargetNetwork/TargetNetwork/advantage_fc/kernel/RMSProp_1/Initializer/zeros"
  op: "Fill"
  input: "TargetNetwork/TargetNetwork/advantage_fc/kernel/RMSProp_1/Initializer/zeros/shape_as_tensor"
  input: "TargetNetwork/TargetNetwork/advantage_fc/kernel/RMSProp_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/advantage_fc/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "TargetNetwork/TargetNetwork/advantage_fc/kernel/RMSProp_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/advantage_fc/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3456
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "TargetNetwork/TargetNetwork/advantage_fc/kernel/RMSProp_1/Assign"
  op: "Assign"
  input: "TargetNetwork/TargetNetwork/advantage_fc/kernel/RMSProp_1"
  input: "TargetNetwork/TargetNetwork/advantage_fc/kernel/RMSProp_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/advantage_fc/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "TargetNetwork/TargetNetwork/advantage_fc/kernel/RMSProp_1/read"
  op: "Identity"
  input: "TargetNetwork/TargetNetwork/advantage_fc/kernel/RMSProp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/advantage_fc/kernel"
      }
    }
  }
}
node {
  name: "TargetNetwork/TargetNetwork/advantage_fc/bias/RMSProp/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/advantage_fc/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "TargetNetwork/TargetNetwork/advantage_fc/bias/RMSProp"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/advantage_fc/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "TargetNetwork/TargetNetwork/advantage_fc/bias/RMSProp/Assign"
  op: "Assign"
  input: "TargetNetwork/TargetNetwork/advantage_fc/bias/RMSProp"
  input: "TargetNetwork/TargetNetwork/advantage_fc/bias/RMSProp/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/advantage_fc/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "TargetNetwork/TargetNetwork/advantage_fc/bias/RMSProp/read"
  op: "Identity"
  input: "TargetNetwork/TargetNetwork/advantage_fc/bias/RMSProp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/advantage_fc/bias"
      }
    }
  }
}
node {
  name: "TargetNetwork/TargetNetwork/advantage_fc/bias/RMSProp_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/advantage_fc/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "TargetNetwork/TargetNetwork/advantage_fc/bias/RMSProp_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/advantage_fc/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "TargetNetwork/TargetNetwork/advantage_fc/bias/RMSProp_1/Assign"
  op: "Assign"
  input: "TargetNetwork/TargetNetwork/advantage_fc/bias/RMSProp_1"
  input: "TargetNetwork/TargetNetwork/advantage_fc/bias/RMSProp_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/advantage_fc/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "TargetNetwork/TargetNetwork/advantage_fc/bias/RMSProp_1/read"
  op: "Identity"
  input: "TargetNetwork/TargetNetwork/advantage_fc/bias/RMSProp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/advantage_fc/bias"
      }
    }
  }
}
node {
  name: "TargetNetwork/TargetNetwork/advantages/kernel/RMSProp/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/advantages/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "TargetNetwork/TargetNetwork/advantages/kernel/RMSProp/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/advantages/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "TargetNetwork/TargetNetwork/advantages/kernel/RMSProp/Initializer/ones"
  op: "Fill"
  input: "TargetNetwork/TargetNetwork/advantages/kernel/RMSProp/Initializer/ones/shape_as_tensor"
  input: "TargetNetwork/TargetNetwork/advantages/kernel/RMSProp/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/advantages/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "TargetNetwork/TargetNetwork/advantages/kernel/RMSProp"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/advantages/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 3
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "TargetNetwork/TargetNetwork/advantages/kernel/RMSProp/Assign"
  op: "Assign"
  input: "TargetNetwork/TargetNetwork/advantages/kernel/RMSProp"
  input: "TargetNetwork/TargetNetwork/advantages/kernel/RMSProp/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/advantages/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "TargetNetwork/TargetNetwork/advantages/kernel/RMSProp/read"
  op: "Identity"
  input: "TargetNetwork/TargetNetwork/advantages/kernel/RMSProp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/advantages/kernel"
      }
    }
  }
}
node {
  name: "TargetNetwork/TargetNetwork/advantages/kernel/RMSProp_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/advantages/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "TargetNetwork/TargetNetwork/advantages/kernel/RMSProp_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/advantages/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "TargetNetwork/TargetNetwork/advantages/kernel/RMSProp_1/Initializer/zeros"
  op: "Fill"
  input: "TargetNetwork/TargetNetwork/advantages/kernel/RMSProp_1/Initializer/zeros/shape_as_tensor"
  input: "TargetNetwork/TargetNetwork/advantages/kernel/RMSProp_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/advantages/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "TargetNetwork/TargetNetwork/advantages/kernel/RMSProp_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/advantages/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 3
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "TargetNetwork/TargetNetwork/advantages/kernel/RMSProp_1/Assign"
  op: "Assign"
  input: "TargetNetwork/TargetNetwork/advantages/kernel/RMSProp_1"
  input: "TargetNetwork/TargetNetwork/advantages/kernel/RMSProp_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/advantages/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "TargetNetwork/TargetNetwork/advantages/kernel/RMSProp_1/read"
  op: "Identity"
  input: "TargetNetwork/TargetNetwork/advantages/kernel/RMSProp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/advantages/kernel"
      }
    }
  }
}
node {
  name: "TargetNetwork/TargetNetwork/advantages/bias/RMSProp/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/advantages/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "TargetNetwork/TargetNetwork/advantages/bias/RMSProp"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/advantages/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "TargetNetwork/TargetNetwork/advantages/bias/RMSProp/Assign"
  op: "Assign"
  input: "TargetNetwork/TargetNetwork/advantages/bias/RMSProp"
  input: "TargetNetwork/TargetNetwork/advantages/bias/RMSProp/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/advantages/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "TargetNetwork/TargetNetwork/advantages/bias/RMSProp/read"
  op: "Identity"
  input: "TargetNetwork/TargetNetwork/advantages/bias/RMSProp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/advantages/bias"
      }
    }
  }
}
node {
  name: "TargetNetwork/TargetNetwork/advantages/bias/RMSProp_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/advantages/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "TargetNetwork/TargetNetwork/advantages/bias/RMSProp_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/advantages/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "TargetNetwork/TargetNetwork/advantages/bias/RMSProp_1/Assign"
  op: "Assign"
  input: "TargetNetwork/TargetNetwork/advantages/bias/RMSProp_1"
  input: "TargetNetwork/TargetNetwork/advantages/bias/RMSProp_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/advantages/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "TargetNetwork/TargetNetwork/advantages/bias/RMSProp_1/read"
  op: "Identity"
  input: "TargetNetwork/TargetNetwork/advantages/bias/RMSProp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/advantages/bias"
      }
    }
  }
}
node {
  name: "TargetNetwork/RMSProp/learning_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0002500000118743628
      }
    }
  }
}
node {
  name: "TargetNetwork/RMSProp/decay"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "TargetNetwork/RMSProp/momentum"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "TargetNetwork/RMSProp/epsilon"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.000000013351432e-10
      }
    }
  }
}
node {
  name: "TargetNetwork/RMSProp/update_TargetNetwork/mlp1/kernel/ApplyRMSProp"
  op: "ApplyRMSProp"
  input: "TargetNetwork/mlp1/kernel"
  input: "TargetNetwork/TargetNetwork/mlp1/kernel/RMSProp"
  input: "TargetNetwork/TargetNetwork/mlp1/kernel/RMSProp_1"
  input: "TargetNetwork/RMSProp/learning_rate"
  input: "TargetNetwork/RMSProp/decay"
  input: "TargetNetwork/RMSProp/momentum"
  input: "TargetNetwork/RMSProp/epsilon"
  input: "TargetNetwork/gradients/TargetNetwork/mlp1/Tensordot/transpose_1_grad/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/mlp1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "TargetNetwork/RMSProp/update_TargetNetwork/mlp1/bias/ApplyRMSProp"
  op: "ApplyRMSProp"
  input: "TargetNetwork/mlp1/bias"
  input: "TargetNetwork/TargetNetwork/mlp1/bias/RMSProp"
  input: "TargetNetwork/TargetNetwork/mlp1/bias/RMSProp_1"
  input: "TargetNetwork/RMSProp/learning_rate"
  input: "TargetNetwork/RMSProp/decay"
  input: "TargetNetwork/RMSProp/momentum"
  input: "TargetNetwork/RMSProp/epsilon"
  input: "TargetNetwork/gradients/TargetNetwork/mlp1/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/mlp1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "TargetNetwork/RMSProp/update_TargetNetwork/mlp2/kernel/ApplyRMSProp"
  op: "ApplyRMSProp"
  input: "TargetNetwork/mlp2/kernel"
  input: "TargetNetwork/TargetNetwork/mlp2/kernel/RMSProp"
  input: "TargetNetwork/TargetNetwork/mlp2/kernel/RMSProp_1"
  input: "TargetNetwork/RMSProp/learning_rate"
  input: "TargetNetwork/RMSProp/decay"
  input: "TargetNetwork/RMSProp/momentum"
  input: "TargetNetwork/RMSProp/epsilon"
  input: "TargetNetwork/gradients/TargetNetwork/mlp2/Tensordot/transpose_1_grad/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/mlp2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "TargetNetwork/RMSProp/update_TargetNetwork/mlp2/bias/ApplyRMSProp"
  op: "ApplyRMSProp"
  input: "TargetNetwork/mlp2/bias"
  input: "TargetNetwork/TargetNetwork/mlp2/bias/RMSProp"
  input: "TargetNetwork/TargetNetwork/mlp2/bias/RMSProp_1"
  input: "TargetNetwork/RMSProp/learning_rate"
  input: "TargetNetwork/RMSProp/decay"
  input: "TargetNetwork/RMSProp/momentum"
  input: "TargetNetwork/RMSProp/epsilon"
  input: "TargetNetwork/gradients/TargetNetwork/mlp2/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/mlp2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "TargetNetwork/RMSProp/update_TargetNetwork/mlp3/kernel/ApplyRMSProp"
  op: "ApplyRMSProp"
  input: "TargetNetwork/mlp3/kernel"
  input: "TargetNetwork/TargetNetwork/mlp3/kernel/RMSProp"
  input: "TargetNetwork/TargetNetwork/mlp3/kernel/RMSProp_1"
  input: "TargetNetwork/RMSProp/learning_rate"
  input: "TargetNetwork/RMSProp/decay"
  input: "TargetNetwork/RMSProp/momentum"
  input: "TargetNetwork/RMSProp/epsilon"
  input: "TargetNetwork/gradients/TargetNetwork/mlp3/Tensordot/transpose_1_grad/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/mlp3/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "TargetNetwork/RMSProp/update_TargetNetwork/mlp3/bias/ApplyRMSProp"
  op: "ApplyRMSProp"
  input: "TargetNetwork/mlp3/bias"
  input: "TargetNetwork/TargetNetwork/mlp3/bias/RMSProp"
  input: "TargetNetwork/TargetNetwork/mlp3/bias/RMSProp_1"
  input: "TargetNetwork/RMSProp/learning_rate"
  input: "TargetNetwork/RMSProp/decay"
  input: "TargetNetwork/RMSProp/momentum"
  input: "TargetNetwork/RMSProp/epsilon"
  input: "TargetNetwork/gradients/TargetNetwork/mlp3/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/mlp3/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "TargetNetwork/RMSProp/update_TargetNetwork/value_fc/kernel/ApplyRMSProp"
  op: "ApplyRMSProp"
  input: "TargetNetwork/value_fc/kernel"
  input: "TargetNetwork/TargetNetwork/value_fc/kernel/RMSProp"
  input: "TargetNetwork/TargetNetwork/value_fc/kernel/RMSProp_1"
  input: "TargetNetwork/RMSProp/learning_rate"
  input: "TargetNetwork/RMSProp/decay"
  input: "TargetNetwork/RMSProp/momentum"
  input: "TargetNetwork/RMSProp/epsilon"
  input: "TargetNetwork/gradients/TargetNetwork/value_fc/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/value_fc/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "TargetNetwork/RMSProp/update_TargetNetwork/value_fc/bias/ApplyRMSProp"
  op: "ApplyRMSProp"
  input: "TargetNetwork/value_fc/bias"
  input: "TargetNetwork/TargetNetwork/value_fc/bias/RMSProp"
  input: "TargetNetwork/TargetNetwork/value_fc/bias/RMSProp_1"
  input: "TargetNetwork/RMSProp/learning_rate"
  input: "TargetNetwork/RMSProp/decay"
  input: "TargetNetwork/RMSProp/momentum"
  input: "TargetNetwork/RMSProp/epsilon"
  input: "TargetNetwork/gradients/TargetNetwork/value_fc/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/value_fc/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "TargetNetwork/RMSProp/update_TargetNetwork/value/kernel/ApplyRMSProp"
  op: "ApplyRMSProp"
  input: "TargetNetwork/value/kernel"
  input: "TargetNetwork/TargetNetwork/value/kernel/RMSProp"
  input: "TargetNetwork/TargetNetwork/value/kernel/RMSProp_1"
  input: "TargetNetwork/RMSProp/learning_rate"
  input: "TargetNetwork/RMSProp/decay"
  input: "TargetNetwork/RMSProp/momentum"
  input: "TargetNetwork/RMSProp/epsilon"
  input: "TargetNetwork/gradients/TargetNetwork/value/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/value/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "TargetNetwork/RMSProp/update_TargetNetwork/value/bias/ApplyRMSProp"
  op: "ApplyRMSProp"
  input: "TargetNetwork/value/bias"
  input: "TargetNetwork/TargetNetwork/value/bias/RMSProp"
  input: "TargetNetwork/TargetNetwork/value/bias/RMSProp_1"
  input: "TargetNetwork/RMSProp/learning_rate"
  input: "TargetNetwork/RMSProp/decay"
  input: "TargetNetwork/RMSProp/momentum"
  input: "TargetNetwork/RMSProp/epsilon"
  input: "TargetNetwork/gradients/TargetNetwork/value/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/value/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "TargetNetwork/RMSProp/update_TargetNetwork/advantage_fc/kernel/ApplyRMSProp"
  op: "ApplyRMSProp"
  input: "TargetNetwork/advantage_fc/kernel"
  input: "TargetNetwork/TargetNetwork/advantage_fc/kernel/RMSProp"
  input: "TargetNetwork/TargetNetwork/advantage_fc/kernel/RMSProp_1"
  input: "TargetNetwork/RMSProp/learning_rate"
  input: "TargetNetwork/RMSProp/decay"
  input: "TargetNetwork/RMSProp/momentum"
  input: "TargetNetwork/RMSProp/epsilon"
  input: "TargetNetwork/gradients/TargetNetwork/advantage_fc/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/advantage_fc/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "TargetNetwork/RMSProp/update_TargetNetwork/advantage_fc/bias/ApplyRMSProp"
  op: "ApplyRMSProp"
  input: "TargetNetwork/advantage_fc/bias"
  input: "TargetNetwork/TargetNetwork/advantage_fc/bias/RMSProp"
  input: "TargetNetwork/TargetNetwork/advantage_fc/bias/RMSProp_1"
  input: "TargetNetwork/RMSProp/learning_rate"
  input: "TargetNetwork/RMSProp/decay"
  input: "TargetNetwork/RMSProp/momentum"
  input: "TargetNetwork/RMSProp/epsilon"
  input: "TargetNetwork/gradients/TargetNetwork/advantage_fc/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/advantage_fc/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "TargetNetwork/RMSProp/update_TargetNetwork/advantages/kernel/ApplyRMSProp"
  op: "ApplyRMSProp"
  input: "TargetNetwork/advantages/kernel"
  input: "TargetNetwork/TargetNetwork/advantages/kernel/RMSProp"
  input: "TargetNetwork/TargetNetwork/advantages/kernel/RMSProp_1"
  input: "TargetNetwork/RMSProp/learning_rate"
  input: "TargetNetwork/RMSProp/decay"
  input: "TargetNetwork/RMSProp/momentum"
  input: "TargetNetwork/RMSProp/epsilon"
  input: "TargetNetwork/gradients/TargetNetwork/advantages/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/advantages/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "TargetNetwork/RMSProp/update_TargetNetwork/advantages/bias/ApplyRMSProp"
  op: "ApplyRMSProp"
  input: "TargetNetwork/advantages/bias"
  input: "TargetNetwork/TargetNetwork/advantages/bias/RMSProp"
  input: "TargetNetwork/TargetNetwork/advantages/bias/RMSProp_1"
  input: "TargetNetwork/RMSProp/learning_rate"
  input: "TargetNetwork/RMSProp/decay"
  input: "TargetNetwork/RMSProp/momentum"
  input: "TargetNetwork/RMSProp/epsilon"
  input: "TargetNetwork/gradients/TargetNetwork/advantages/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/advantages/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "TargetNetwork/RMSProp"
  op: "NoOp"
  input: "^TargetNetwork/RMSProp/update_TargetNetwork/advantage_fc/bias/ApplyRMSProp"
  input: "^TargetNetwork/RMSProp/update_TargetNetwork/advantage_fc/kernel/ApplyRMSProp"
  input: "^TargetNetwork/RMSProp/update_TargetNetwork/advantages/bias/ApplyRMSProp"
  input: "^TargetNetwork/RMSProp/update_TargetNetwork/advantages/kernel/ApplyRMSProp"
  input: "^TargetNetwork/RMSProp/update_TargetNetwork/mlp1/bias/ApplyRMSProp"
  input: "^TargetNetwork/RMSProp/update_TargetNetwork/mlp1/kernel/ApplyRMSProp"
  input: "^TargetNetwork/RMSProp/update_TargetNetwork/mlp2/bias/ApplyRMSProp"
  input: "^TargetNetwork/RMSProp/update_TargetNetwork/mlp2/kernel/ApplyRMSProp"
  input: "^TargetNetwork/RMSProp/update_TargetNetwork/mlp3/bias/ApplyRMSProp"
  input: "^TargetNetwork/RMSProp/update_TargetNetwork/mlp3/kernel/ApplyRMSProp"
  input: "^TargetNetwork/RMSProp/update_TargetNetwork/value/bias/ApplyRMSProp"
  input: "^TargetNetwork/RMSProp/update_TargetNetwork/value/kernel/ApplyRMSProp"
  input: "^TargetNetwork/RMSProp/update_TargetNetwork/value_fc/bias/ApplyRMSProp"
  input: "^TargetNetwork/RMSProp/update_TargetNetwork/value_fc/kernel/ApplyRMSProp"
}
node {
  name: "Loss/tags"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Loss"
      }
    }
  }
}
node {
  name: "Loss"
  op: "ScalarSummary"
  input: "Loss/tags"
  input: "DQNetwork/Mean_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Merge/MergeSummary"
  op: "MergeSummary"
  input: "Loss"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
}
node {
  name: "save/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/SaveV2/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 84
          }
        }
        string_val: "DQNetwork/DQNetwork/advantage_fc/bias/RMSProp"
        string_val: "DQNetwork/DQNetwork/advantage_fc/bias/RMSProp_1"
        string_val: "DQNetwork/DQNetwork/advantage_fc/kernel/RMSProp"
        string_val: "DQNetwork/DQNetwork/advantage_fc/kernel/RMSProp_1"
        string_val: "DQNetwork/DQNetwork/advantages/bias/RMSProp"
        string_val: "DQNetwork/DQNetwork/advantages/bias/RMSProp_1"
        string_val: "DQNetwork/DQNetwork/advantages/kernel/RMSProp"
        string_val: "DQNetwork/DQNetwork/advantages/kernel/RMSProp_1"
        string_val: "DQNetwork/DQNetwork/mlp1/bias/RMSProp"
        string_val: "DQNetwork/DQNetwork/mlp1/bias/RMSProp_1"
        string_val: "DQNetwork/DQNetwork/mlp1/kernel/RMSProp"
        string_val: "DQNetwork/DQNetwork/mlp1/kernel/RMSProp_1"
        string_val: "DQNetwork/DQNetwork/mlp2/bias/RMSProp"
        string_val: "DQNetwork/DQNetwork/mlp2/bias/RMSProp_1"
        string_val: "DQNetwork/DQNetwork/mlp2/kernel/RMSProp"
        string_val: "DQNetwork/DQNetwork/mlp2/kernel/RMSProp_1"
        string_val: "DQNetwork/DQNetwork/mlp3/bias/RMSProp"
        string_val: "DQNetwork/DQNetwork/mlp3/bias/RMSProp_1"
        string_val: "DQNetwork/DQNetwork/mlp3/kernel/RMSProp"
        string_val: "DQNetwork/DQNetwork/mlp3/kernel/RMSProp_1"
        string_val: "DQNetwork/DQNetwork/value/bias/RMSProp"
        string_val: "DQNetwork/DQNetwork/value/bias/RMSProp_1"
        string_val: "DQNetwork/DQNetwork/value/kernel/RMSProp"
        string_val: "DQNetwork/DQNetwork/value/kernel/RMSProp_1"
        string_val: "DQNetwork/DQNetwork/value_fc/bias/RMSProp"
        string_val: "DQNetwork/DQNetwork/value_fc/bias/RMSProp_1"
        string_val: "DQNetwork/DQNetwork/value_fc/kernel/RMSProp"
        string_val: "DQNetwork/DQNetwork/value_fc/kernel/RMSProp_1"
        string_val: "DQNetwork/advantage_fc/bias"
        string_val: "DQNetwork/advantage_fc/kernel"
        string_val: "DQNetwork/advantages/bias"
        string_val: "DQNetwork/advantages/kernel"
        string_val: "DQNetwork/mlp1/bias"
        string_val: "DQNetwork/mlp1/kernel"
        string_val: "DQNetwork/mlp2/bias"
        string_val: "DQNetwork/mlp2/kernel"
        string_val: "DQNetwork/mlp3/bias"
        string_val: "DQNetwork/mlp3/kernel"
        string_val: "DQNetwork/value/bias"
        string_val: "DQNetwork/value/kernel"
        string_val: "DQNetwork/value_fc/bias"
        string_val: "DQNetwork/value_fc/kernel"
        string_val: "TargetNetwork/TargetNetwork/advantage_fc/bias/RMSProp"
        string_val: "TargetNetwork/TargetNetwork/advantage_fc/bias/RMSProp_1"
        string_val: "TargetNetwork/TargetNetwork/advantage_fc/kernel/RMSProp"
        string_val: "TargetNetwork/TargetNetwork/advantage_fc/kernel/RMSProp_1"
        string_val: "TargetNetwork/TargetNetwork/advantages/bias/RMSProp"
        string_val: "TargetNetwork/TargetNetwork/advantages/bias/RMSProp_1"
        string_val: "TargetNetwork/TargetNetwork/advantages/kernel/RMSProp"
        string_val: "TargetNetwork/TargetNetwork/advantages/kernel/RMSProp_1"
        string_val: "TargetNetwork/TargetNetwork/mlp1/bias/RMSProp"
        string_val: "TargetNetwork/TargetNetwork/mlp1/bias/RMSProp_1"
        string_val: "TargetNetwork/TargetNetwork/mlp1/kernel/RMSProp"
        string_val: "TargetNetwork/TargetNetwork/mlp1/kernel/RMSProp_1"
        string_val: "TargetNetwork/TargetNetwork/mlp2/bias/RMSProp"
        string_val: "TargetNetwork/TargetNetwork/mlp2/bias/RMSProp_1"
        string_val: "TargetNetwork/TargetNetwork/mlp2/kernel/RMSProp"
        string_val: "TargetNetwork/TargetNetwork/mlp2/kernel/RMSProp_1"
        string_val: "TargetNetwork/TargetNetwork/mlp3/bias/RMSProp"
        string_val: "TargetNetwork/TargetNetwork/mlp3/bias/RMSProp_1"
        string_val: "TargetNetwork/TargetNetwork/mlp3/kernel/RMSProp"
        string_val: "TargetNetwork/TargetNetwork/mlp3/kernel/RMSProp_1"
        string_val: "TargetNetwork/TargetNetwork/value/bias/RMSProp"
        string_val: "TargetNetwork/TargetNetwork/value/bias/RMSProp_1"
        string_val: "TargetNetwork/TargetNetwork/value/kernel/RMSProp"
        string_val: "TargetNetwork/TargetNetwork/value/kernel/RMSProp_1"
        string_val: "TargetNetwork/TargetNetwork/value_fc/bias/RMSProp"
        string_val: "TargetNetwork/TargetNetwork/value_fc/bias/RMSProp_1"
        string_val: "TargetNetwork/TargetNetwork/value_fc/kernel/RMSProp"
        string_val: "TargetNetwork/TargetNetwork/value_fc/kernel/RMSProp_1"
        string_val: "TargetNetwork/advantage_fc/bias"
        string_val: "TargetNetwork/advantage_fc/kernel"
        string_val: "TargetNetwork/advantages/bias"
        string_val: "TargetNetwork/advantages/kernel"
        string_val: "TargetNetwork/mlp1/bias"
        string_val: "TargetNetwork/mlp1/kernel"
        string_val: "TargetNetwork/mlp2/bias"
        string_val: "TargetNetwork/mlp2/kernel"
        string_val: "TargetNetwork/mlp3/bias"
        string_val: "TargetNetwork/mlp3/kernel"
        string_val: "TargetNetwork/value/bias"
        string_val: "TargetNetwork/value/kernel"
        string_val: "TargetNetwork/value_fc/bias"
        string_val: "TargetNetwork/value_fc/kernel"
      }
    }
  }
}
node {
  name: "save/SaveV2/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 84
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/SaveV2"
  op: "SaveV2"
  input: "save/Const"
  input: "save/SaveV2/tensor_names"
  input: "save/SaveV2/shape_and_slices"
  input: "DQNetwork/DQNetwork/advantage_fc/bias/RMSProp"
  input: "DQNetwork/DQNetwork/advantage_fc/bias/RMSProp_1"
  input: "DQNetwork/DQNetwork/advantage_fc/kernel/RMSProp"
  input: "DQNetwork/DQNetwork/advantage_fc/kernel/RMSProp_1"
  input: "DQNetwork/DQNetwork/advantages/bias/RMSProp"
  input: "DQNetwork/DQNetwork/advantages/bias/RMSProp_1"
  input: "DQNetwork/DQNetwork/advantages/kernel/RMSProp"
  input: "DQNetwork/DQNetwork/advantages/kernel/RMSProp_1"
  input: "DQNetwork/DQNetwork/mlp1/bias/RMSProp"
  input: "DQNetwork/DQNetwork/mlp1/bias/RMSProp_1"
  input: "DQNetwork/DQNetwork/mlp1/kernel/RMSProp"
  input: "DQNetwork/DQNetwork/mlp1/kernel/RMSProp_1"
  input: "DQNetwork/DQNetwork/mlp2/bias/RMSProp"
  input: "DQNetwork/DQNetwork/mlp2/bias/RMSProp_1"
  input: "DQNetwork/DQNetwork/mlp2/kernel/RMSProp"
  input: "DQNetwork/DQNetwork/mlp2/kernel/RMSProp_1"
  input: "DQNetwork/DQNetwork/mlp3/bias/RMSProp"
  input: "DQNetwork/DQNetwork/mlp3/bias/RMSProp_1"
  input: "DQNetwork/DQNetwork/mlp3/kernel/RMSProp"
  input: "DQNetwork/DQNetwork/mlp3/kernel/RMSProp_1"
  input: "DQNetwork/DQNetwork/value/bias/RMSProp"
  input: "DQNetwork/DQNetwork/value/bias/RMSProp_1"
  input: "DQNetwork/DQNetwork/value/kernel/RMSProp"
  input: "DQNetwork/DQNetwork/value/kernel/RMSProp_1"
  input: "DQNetwork/DQNetwork/value_fc/bias/RMSProp"
  input: "DQNetwork/DQNetwork/value_fc/bias/RMSProp_1"
  input: "DQNetwork/DQNetwork/value_fc/kernel/RMSProp"
  input: "DQNetwork/DQNetwork/value_fc/kernel/RMSProp_1"
  input: "DQNetwork/advantage_fc/bias"
  input: "DQNetwork/advantage_fc/kernel"
  input: "DQNetwork/advantages/bias"
  input: "DQNetwork/advantages/kernel"
  input: "DQNetwork/mlp1/bias"
  input: "DQNetwork/mlp1/kernel"
  input: "DQNetwork/mlp2/bias"
  input: "DQNetwork/mlp2/kernel"
  input: "DQNetwork/mlp3/bias"
  input: "DQNetwork/mlp3/kernel"
  input: "DQNetwork/value/bias"
  input: "DQNetwork/value/kernel"
  input: "DQNetwork/value_fc/bias"
  input: "DQNetwork/value_fc/kernel"
  input: "TargetNetwork/TargetNetwork/advantage_fc/bias/RMSProp"
  input: "TargetNetwork/TargetNetwork/advantage_fc/bias/RMSProp_1"
  input: "TargetNetwork/TargetNetwork/advantage_fc/kernel/RMSProp"
  input: "TargetNetwork/TargetNetwork/advantage_fc/kernel/RMSProp_1"
  input: "TargetNetwork/TargetNetwork/advantages/bias/RMSProp"
  input: "TargetNetwork/TargetNetwork/advantages/bias/RMSProp_1"
  input: "TargetNetwork/TargetNetwork/advantages/kernel/RMSProp"
  input: "TargetNetwork/TargetNetwork/advantages/kernel/RMSProp_1"
  input: "TargetNetwork/TargetNetwork/mlp1/bias/RMSProp"
  input: "TargetNetwork/TargetNetwork/mlp1/bias/RMSProp_1"
  input: "TargetNetwork/TargetNetwork/mlp1/kernel/RMSProp"
  input: "TargetNetwork/TargetNetwork/mlp1/kernel/RMSProp_1"
  input: "TargetNetwork/TargetNetwork/mlp2/bias/RMSProp"
  input: "TargetNetwork/TargetNetwork/mlp2/bias/RMSProp_1"
  input: "TargetNetwork/TargetNetwork/mlp2/kernel/RMSProp"
  input: "TargetNetwork/TargetNetwork/mlp2/kernel/RMSProp_1"
  input: "TargetNetwork/TargetNetwork/mlp3/bias/RMSProp"
  input: "TargetNetwork/TargetNetwork/mlp3/bias/RMSProp_1"
  input: "TargetNetwork/TargetNetwork/mlp3/kernel/RMSProp"
  input: "TargetNetwork/TargetNetwork/mlp3/kernel/RMSProp_1"
  input: "TargetNetwork/TargetNetwork/value/bias/RMSProp"
  input: "TargetNetwork/TargetNetwork/value/bias/RMSProp_1"
  input: "TargetNetwork/TargetNetwork/value/kernel/RMSProp"
  input: "TargetNetwork/TargetNetwork/value/kernel/RMSProp_1"
  input: "TargetNetwork/TargetNetwork/value_fc/bias/RMSProp"
  input: "TargetNetwork/TargetNetwork/value_fc/bias/RMSProp_1"
  input: "TargetNetwork/TargetNetwork/value_fc/kernel/RMSProp"
  input: "TargetNetwork/TargetNetwork/value_fc/kernel/RMSProp_1"
  input: "TargetNetwork/advantage_fc/bias"
  input: "TargetNetwork/advantage_fc/kernel"
  input: "TargetNetwork/advantages/bias"
  input: "TargetNetwork/advantages/kernel"
  input: "TargetNetwork/mlp1/bias"
  input: "TargetNetwork/mlp1/kernel"
  input: "TargetNetwork/mlp2/bias"
  input: "TargetNetwork/mlp2/kernel"
  input: "TargetNetwork/mlp3/bias"
  input: "TargetNetwork/mlp3/kernel"
  input: "TargetNetwork/value/bias"
  input: "TargetNetwork/value/kernel"
  input: "TargetNetwork/value_fc/bias"
  input: "TargetNetwork/value_fc/kernel"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/Const"
  input: "^save/SaveV2"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/Const"
      }
    }
  }
}
node {
  name: "save/RestoreV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 84
          }
        }
        string_val: "DQNetwork/DQNetwork/advantage_fc/bias/RMSProp"
        string_val: "DQNetwork/DQNetwork/advantage_fc/bias/RMSProp_1"
        string_val: "DQNetwork/DQNetwork/advantage_fc/kernel/RMSProp"
        string_val: "DQNetwork/DQNetwork/advantage_fc/kernel/RMSProp_1"
        string_val: "DQNetwork/DQNetwork/advantages/bias/RMSProp"
        string_val: "DQNetwork/DQNetwork/advantages/bias/RMSProp_1"
        string_val: "DQNetwork/DQNetwork/advantages/kernel/RMSProp"
        string_val: "DQNetwork/DQNetwork/advantages/kernel/RMSProp_1"
        string_val: "DQNetwork/DQNetwork/mlp1/bias/RMSProp"
        string_val: "DQNetwork/DQNetwork/mlp1/bias/RMSProp_1"
        string_val: "DQNetwork/DQNetwork/mlp1/kernel/RMSProp"
        string_val: "DQNetwork/DQNetwork/mlp1/kernel/RMSProp_1"
        string_val: "DQNetwork/DQNetwork/mlp2/bias/RMSProp"
        string_val: "DQNetwork/DQNetwork/mlp2/bias/RMSProp_1"
        string_val: "DQNetwork/DQNetwork/mlp2/kernel/RMSProp"
        string_val: "DQNetwork/DQNetwork/mlp2/kernel/RMSProp_1"
        string_val: "DQNetwork/DQNetwork/mlp3/bias/RMSProp"
        string_val: "DQNetwork/DQNetwork/mlp3/bias/RMSProp_1"
        string_val: "DQNetwork/DQNetwork/mlp3/kernel/RMSProp"
        string_val: "DQNetwork/DQNetwork/mlp3/kernel/RMSProp_1"
        string_val: "DQNetwork/DQNetwork/value/bias/RMSProp"
        string_val: "DQNetwork/DQNetwork/value/bias/RMSProp_1"
        string_val: "DQNetwork/DQNetwork/value/kernel/RMSProp"
        string_val: "DQNetwork/DQNetwork/value/kernel/RMSProp_1"
        string_val: "DQNetwork/DQNetwork/value_fc/bias/RMSProp"
        string_val: "DQNetwork/DQNetwork/value_fc/bias/RMSProp_1"
        string_val: "DQNetwork/DQNetwork/value_fc/kernel/RMSProp"
        string_val: "DQNetwork/DQNetwork/value_fc/kernel/RMSProp_1"
        string_val: "DQNetwork/advantage_fc/bias"
        string_val: "DQNetwork/advantage_fc/kernel"
        string_val: "DQNetwork/advantages/bias"
        string_val: "DQNetwork/advantages/kernel"
        string_val: "DQNetwork/mlp1/bias"
        string_val: "DQNetwork/mlp1/kernel"
        string_val: "DQNetwork/mlp2/bias"
        string_val: "DQNetwork/mlp2/kernel"
        string_val: "DQNetwork/mlp3/bias"
        string_val: "DQNetwork/mlp3/kernel"
        string_val: "DQNetwork/value/bias"
        string_val: "DQNetwork/value/kernel"
        string_val: "DQNetwork/value_fc/bias"
        string_val: "DQNetwork/value_fc/kernel"
        string_val: "TargetNetwork/TargetNetwork/advantage_fc/bias/RMSProp"
        string_val: "TargetNetwork/TargetNetwork/advantage_fc/bias/RMSProp_1"
        string_val: "TargetNetwork/TargetNetwork/advantage_fc/kernel/RMSProp"
        string_val: "TargetNetwork/TargetNetwork/advantage_fc/kernel/RMSProp_1"
        string_val: "TargetNetwork/TargetNetwork/advantages/bias/RMSProp"
        string_val: "TargetNetwork/TargetNetwork/advantages/bias/RMSProp_1"
        string_val: "TargetNetwork/TargetNetwork/advantages/kernel/RMSProp"
        string_val: "TargetNetwork/TargetNetwork/advantages/kernel/RMSProp_1"
        string_val: "TargetNetwork/TargetNetwork/mlp1/bias/RMSProp"
        string_val: "TargetNetwork/TargetNetwork/mlp1/bias/RMSProp_1"
        string_val: "TargetNetwork/TargetNetwork/mlp1/kernel/RMSProp"
        string_val: "TargetNetwork/TargetNetwork/mlp1/kernel/RMSProp_1"
        string_val: "TargetNetwork/TargetNetwork/mlp2/bias/RMSProp"
        string_val: "TargetNetwork/TargetNetwork/mlp2/bias/RMSProp_1"
        string_val: "TargetNetwork/TargetNetwork/mlp2/kernel/RMSProp"
        string_val: "TargetNetwork/TargetNetwork/mlp2/kernel/RMSProp_1"
        string_val: "TargetNetwork/TargetNetwork/mlp3/bias/RMSProp"
        string_val: "TargetNetwork/TargetNetwork/mlp3/bias/RMSProp_1"
        string_val: "TargetNetwork/TargetNetwork/mlp3/kernel/RMSProp"
        string_val: "TargetNetwork/TargetNetwork/mlp3/kernel/RMSProp_1"
        string_val: "TargetNetwork/TargetNetwork/value/bias/RMSProp"
        string_val: "TargetNetwork/TargetNetwork/value/bias/RMSProp_1"
        string_val: "TargetNetwork/TargetNetwork/value/kernel/RMSProp"
        string_val: "TargetNetwork/TargetNetwork/value/kernel/RMSProp_1"
        string_val: "TargetNetwork/TargetNetwork/value_fc/bias/RMSProp"
        string_val: "TargetNetwork/TargetNetwork/value_fc/bias/RMSProp_1"
        string_val: "TargetNetwork/TargetNetwork/value_fc/kernel/RMSProp"
        string_val: "TargetNetwork/TargetNetwork/value_fc/kernel/RMSProp_1"
        string_val: "TargetNetwork/advantage_fc/bias"
        string_val: "TargetNetwork/advantage_fc/kernel"
        string_val: "TargetNetwork/advantages/bias"
        string_val: "TargetNetwork/advantages/kernel"
        string_val: "TargetNetwork/mlp1/bias"
        string_val: "TargetNetwork/mlp1/kernel"
        string_val: "TargetNetwork/mlp2/bias"
        string_val: "TargetNetwork/mlp2/kernel"
        string_val: "TargetNetwork/mlp3/bias"
        string_val: "TargetNetwork/mlp3/kernel"
        string_val: "TargetNetwork/value/bias"
        string_val: "TargetNetwork/value/kernel"
        string_val: "TargetNetwork/value_fc/bias"
        string_val: "TargetNetwork/value_fc/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 84
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2/tensor_names"
  input: "save/RestoreV2/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign"
  op: "Assign"
  input: "DQNetwork/DQNetwork/advantage_fc/bias/RMSProp"
  input: "save/RestoreV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/advantage_fc/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_1"
  op: "Assign"
  input: "DQNetwork/DQNetwork/advantage_fc/bias/RMSProp_1"
  input: "save/RestoreV2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/advantage_fc/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_2"
  op: "Assign"
  input: "DQNetwork/DQNetwork/advantage_fc/kernel/RMSProp"
  input: "save/RestoreV2:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/advantage_fc/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_3"
  op: "Assign"
  input: "DQNetwork/DQNetwork/advantage_fc/kernel/RMSProp_1"
  input: "save/RestoreV2:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/advantage_fc/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_4"
  op: "Assign"
  input: "DQNetwork/DQNetwork/advantages/bias/RMSProp"
  input: "save/RestoreV2:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/advantages/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_5"
  op: "Assign"
  input: "DQNetwork/DQNetwork/advantages/bias/RMSProp_1"
  input: "save/RestoreV2:5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/advantages/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_6"
  op: "Assign"
  input: "DQNetwork/DQNetwork/advantages/kernel/RMSProp"
  input: "save/RestoreV2:6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/advantages/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_7"
  op: "Assign"
  input: "DQNetwork/DQNetwork/advantages/kernel/RMSProp_1"
  input: "save/RestoreV2:7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/advantages/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_8"
  op: "Assign"
  input: "DQNetwork/DQNetwork/mlp1/bias/RMSProp"
  input: "save/RestoreV2:8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/mlp1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_9"
  op: "Assign"
  input: "DQNetwork/DQNetwork/mlp1/bias/RMSProp_1"
  input: "save/RestoreV2:9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/mlp1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_10"
  op: "Assign"
  input: "DQNetwork/DQNetwork/mlp1/kernel/RMSProp"
  input: "save/RestoreV2:10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/mlp1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_11"
  op: "Assign"
  input: "DQNetwork/DQNetwork/mlp1/kernel/RMSProp_1"
  input: "save/RestoreV2:11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/mlp1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_12"
  op: "Assign"
  input: "DQNetwork/DQNetwork/mlp2/bias/RMSProp"
  input: "save/RestoreV2:12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/mlp2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_13"
  op: "Assign"
  input: "DQNetwork/DQNetwork/mlp2/bias/RMSProp_1"
  input: "save/RestoreV2:13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/mlp2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_14"
  op: "Assign"
  input: "DQNetwork/DQNetwork/mlp2/kernel/RMSProp"
  input: "save/RestoreV2:14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/mlp2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_15"
  op: "Assign"
  input: "DQNetwork/DQNetwork/mlp2/kernel/RMSProp_1"
  input: "save/RestoreV2:15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/mlp2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_16"
  op: "Assign"
  input: "DQNetwork/DQNetwork/mlp3/bias/RMSProp"
  input: "save/RestoreV2:16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/mlp3/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_17"
  op: "Assign"
  input: "DQNetwork/DQNetwork/mlp3/bias/RMSProp_1"
  input: "save/RestoreV2:17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/mlp3/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_18"
  op: "Assign"
  input: "DQNetwork/DQNetwork/mlp3/kernel/RMSProp"
  input: "save/RestoreV2:18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/mlp3/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_19"
  op: "Assign"
  input: "DQNetwork/DQNetwork/mlp3/kernel/RMSProp_1"
  input: "save/RestoreV2:19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/mlp3/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_20"
  op: "Assign"
  input: "DQNetwork/DQNetwork/value/bias/RMSProp"
  input: "save/RestoreV2:20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/value/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_21"
  op: "Assign"
  input: "DQNetwork/DQNetwork/value/bias/RMSProp_1"
  input: "save/RestoreV2:21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/value/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_22"
  op: "Assign"
  input: "DQNetwork/DQNetwork/value/kernel/RMSProp"
  input: "save/RestoreV2:22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/value/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_23"
  op: "Assign"
  input: "DQNetwork/DQNetwork/value/kernel/RMSProp_1"
  input: "save/RestoreV2:23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/value/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_24"
  op: "Assign"
  input: "DQNetwork/DQNetwork/value_fc/bias/RMSProp"
  input: "save/RestoreV2:24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/value_fc/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_25"
  op: "Assign"
  input: "DQNetwork/DQNetwork/value_fc/bias/RMSProp_1"
  input: "save/RestoreV2:25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/value_fc/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_26"
  op: "Assign"
  input: "DQNetwork/DQNetwork/value_fc/kernel/RMSProp"
  input: "save/RestoreV2:26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/value_fc/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_27"
  op: "Assign"
  input: "DQNetwork/DQNetwork/value_fc/kernel/RMSProp_1"
  input: "save/RestoreV2:27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/value_fc/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_28"
  op: "Assign"
  input: "DQNetwork/advantage_fc/bias"
  input: "save/RestoreV2:28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/advantage_fc/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_29"
  op: "Assign"
  input: "DQNetwork/advantage_fc/kernel"
  input: "save/RestoreV2:29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/advantage_fc/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_30"
  op: "Assign"
  input: "DQNetwork/advantages/bias"
  input: "save/RestoreV2:30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/advantages/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_31"
  op: "Assign"
  input: "DQNetwork/advantages/kernel"
  input: "save/RestoreV2:31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/advantages/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_32"
  op: "Assign"
  input: "DQNetwork/mlp1/bias"
  input: "save/RestoreV2:32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/mlp1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_33"
  op: "Assign"
  input: "DQNetwork/mlp1/kernel"
  input: "save/RestoreV2:33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/mlp1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_34"
  op: "Assign"
  input: "DQNetwork/mlp2/bias"
  input: "save/RestoreV2:34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/mlp2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_35"
  op: "Assign"
  input: "DQNetwork/mlp2/kernel"
  input: "save/RestoreV2:35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/mlp2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_36"
  op: "Assign"
  input: "DQNetwork/mlp3/bias"
  input: "save/RestoreV2:36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/mlp3/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_37"
  op: "Assign"
  input: "DQNetwork/mlp3/kernel"
  input: "save/RestoreV2:37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/mlp3/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_38"
  op: "Assign"
  input: "DQNetwork/value/bias"
  input: "save/RestoreV2:38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/value/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_39"
  op: "Assign"
  input: "DQNetwork/value/kernel"
  input: "save/RestoreV2:39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/value/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_40"
  op: "Assign"
  input: "DQNetwork/value_fc/bias"
  input: "save/RestoreV2:40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/value_fc/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_41"
  op: "Assign"
  input: "DQNetwork/value_fc/kernel"
  input: "save/RestoreV2:41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DQNetwork/value_fc/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_42"
  op: "Assign"
  input: "TargetNetwork/TargetNetwork/advantage_fc/bias/RMSProp"
  input: "save/RestoreV2:42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/advantage_fc/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_43"
  op: "Assign"
  input: "TargetNetwork/TargetNetwork/advantage_fc/bias/RMSProp_1"
  input: "save/RestoreV2:43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/advantage_fc/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_44"
  op: "Assign"
  input: "TargetNetwork/TargetNetwork/advantage_fc/kernel/RMSProp"
  input: "save/RestoreV2:44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/advantage_fc/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_45"
  op: "Assign"
  input: "TargetNetwork/TargetNetwork/advantage_fc/kernel/RMSProp_1"
  input: "save/RestoreV2:45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/advantage_fc/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_46"
  op: "Assign"
  input: "TargetNetwork/TargetNetwork/advantages/bias/RMSProp"
  input: "save/RestoreV2:46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/advantages/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_47"
  op: "Assign"
  input: "TargetNetwork/TargetNetwork/advantages/bias/RMSProp_1"
  input: "save/RestoreV2:47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/advantages/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_48"
  op: "Assign"
  input: "TargetNetwork/TargetNetwork/advantages/kernel/RMSProp"
  input: "save/RestoreV2:48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/advantages/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_49"
  op: "Assign"
  input: "TargetNetwork/TargetNetwork/advantages/kernel/RMSProp_1"
  input: "save/RestoreV2:49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/advantages/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_50"
  op: "Assign"
  input: "TargetNetwork/TargetNetwork/mlp1/bias/RMSProp"
  input: "save/RestoreV2:50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/mlp1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_51"
  op: "Assign"
  input: "TargetNetwork/TargetNetwork/mlp1/bias/RMSProp_1"
  input: "save/RestoreV2:51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/mlp1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_52"
  op: "Assign"
  input: "TargetNetwork/TargetNetwork/mlp1/kernel/RMSProp"
  input: "save/RestoreV2:52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/mlp1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_53"
  op: "Assign"
  input: "TargetNetwork/TargetNetwork/mlp1/kernel/RMSProp_1"
  input: "save/RestoreV2:53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/mlp1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_54"
  op: "Assign"
  input: "TargetNetwork/TargetNetwork/mlp2/bias/RMSProp"
  input: "save/RestoreV2:54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/mlp2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_55"
  op: "Assign"
  input: "TargetNetwork/TargetNetwork/mlp2/bias/RMSProp_1"
  input: "save/RestoreV2:55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/mlp2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_56"
  op: "Assign"
  input: "TargetNetwork/TargetNetwork/mlp2/kernel/RMSProp"
  input: "save/RestoreV2:56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/mlp2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_57"
  op: "Assign"
  input: "TargetNetwork/TargetNetwork/mlp2/kernel/RMSProp_1"
  input: "save/RestoreV2:57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/mlp2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_58"
  op: "Assign"
  input: "TargetNetwork/TargetNetwork/mlp3/bias/RMSProp"
  input: "save/RestoreV2:58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/mlp3/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_59"
  op: "Assign"
  input: "TargetNetwork/TargetNetwork/mlp3/bias/RMSProp_1"
  input: "save/RestoreV2:59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/mlp3/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_60"
  op: "Assign"
  input: "TargetNetwork/TargetNetwork/mlp3/kernel/RMSProp"
  input: "save/RestoreV2:60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/mlp3/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_61"
  op: "Assign"
  input: "TargetNetwork/TargetNetwork/mlp3/kernel/RMSProp_1"
  input: "save/RestoreV2:61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/mlp3/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_62"
  op: "Assign"
  input: "TargetNetwork/TargetNetwork/value/bias/RMSProp"
  input: "save/RestoreV2:62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/value/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_63"
  op: "Assign"
  input: "TargetNetwork/TargetNetwork/value/bias/RMSProp_1"
  input: "save/RestoreV2:63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/value/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_64"
  op: "Assign"
  input: "TargetNetwork/TargetNetwork/value/kernel/RMSProp"
  input: "save/RestoreV2:64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/value/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_65"
  op: "Assign"
  input: "TargetNetwork/TargetNetwork/value/kernel/RMSProp_1"
  input: "save/RestoreV2:65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/value/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_66"
  op: "Assign"
  input: "TargetNetwork/TargetNetwork/value_fc/bias/RMSProp"
  input: "save/RestoreV2:66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/value_fc/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_67"
  op: "Assign"
  input: "TargetNetwork/TargetNetwork/value_fc/bias/RMSProp_1"
  input: "save/RestoreV2:67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/value_fc/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_68"
  op: "Assign"
  input: "TargetNetwork/TargetNetwork/value_fc/kernel/RMSProp"
  input: "save/RestoreV2:68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/value_fc/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_69"
  op: "Assign"
  input: "TargetNetwork/TargetNetwork/value_fc/kernel/RMSProp_1"
  input: "save/RestoreV2:69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/value_fc/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_70"
  op: "Assign"
  input: "TargetNetwork/advantage_fc/bias"
  input: "save/RestoreV2:70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/advantage_fc/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_71"
  op: "Assign"
  input: "TargetNetwork/advantage_fc/kernel"
  input: "save/RestoreV2:71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/advantage_fc/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_72"
  op: "Assign"
  input: "TargetNetwork/advantages/bias"
  input: "save/RestoreV2:72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/advantages/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_73"
  op: "Assign"
  input: "TargetNetwork/advantages/kernel"
  input: "save/RestoreV2:73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/advantages/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_74"
  op: "Assign"
  input: "TargetNetwork/mlp1/bias"
  input: "save/RestoreV2:74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/mlp1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_75"
  op: "Assign"
  input: "TargetNetwork/mlp1/kernel"
  input: "save/RestoreV2:75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/mlp1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_76"
  op: "Assign"
  input: "TargetNetwork/mlp2/bias"
  input: "save/RestoreV2:76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/mlp2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_77"
  op: "Assign"
  input: "TargetNetwork/mlp2/kernel"
  input: "save/RestoreV2:77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/mlp2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_78"
  op: "Assign"
  input: "TargetNetwork/mlp3/bias"
  input: "save/RestoreV2:78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/mlp3/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_79"
  op: "Assign"
  input: "TargetNetwork/mlp3/kernel"
  input: "save/RestoreV2:79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/mlp3/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_80"
  op: "Assign"
  input: "TargetNetwork/value/bias"
  input: "save/RestoreV2:80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/value/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_81"
  op: "Assign"
  input: "TargetNetwork/value/kernel"
  input: "save/RestoreV2:81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/value/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_82"
  op: "Assign"
  input: "TargetNetwork/value_fc/bias"
  input: "save/RestoreV2:82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/value_fc/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_83"
  op: "Assign"
  input: "TargetNetwork/value_fc/kernel"
  input: "save/RestoreV2:83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TargetNetwork/value_fc/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/Assign"
  input: "^save/Assign_1"
  input: "^save/Assign_10"
  input: "^save/Assign_11"
  input: "^save/Assign_12"
  input: "^save/Assign_13"
  input: "^save/Assign_14"
  input: "^save/Assign_15"
  input: "^save/Assign_16"
  input: "^save/Assign_17"
  input: "^save/Assign_18"
  input: "^save/Assign_19"
  input: "^save/Assign_2"
  input: "^save/Assign_20"
  input: "^save/Assign_21"
  input: "^save/Assign_22"
  input: "^save/Assign_23"
  input: "^save/Assign_24"
  input: "^save/Assign_25"
  input: "^save/Assign_26"
  input: "^save/Assign_27"
  input: "^save/Assign_28"
  input: "^save/Assign_29"
  input: "^save/Assign_3"
  input: "^save/Assign_30"
  input: "^save/Assign_31"
  input: "^save/Assign_32"
  input: "^save/Assign_33"
  input: "^save/Assign_34"
  input: "^save/Assign_35"
  input: "^save/Assign_36"
  input: "^save/Assign_37"
  input: "^save/Assign_38"
  input: "^save/Assign_39"
  input: "^save/Assign_4"
  input: "^save/Assign_40"
  input: "^save/Assign_41"
  input: "^save/Assign_42"
  input: "^save/Assign_43"
  input: "^save/Assign_44"
  input: "^save/Assign_45"
  input: "^save/Assign_46"
  input: "^save/Assign_47"
  input: "^save/Assign_48"
  input: "^save/Assign_49"
  input: "^save/Assign_5"
  input: "^save/Assign_50"
  input: "^save/Assign_51"
  input: "^save/Assign_52"
  input: "^save/Assign_53"
  input: "^save/Assign_54"
  input: "^save/Assign_55"
  input: "^save/Assign_56"
  input: "^save/Assign_57"
  input: "^save/Assign_58"
  input: "^save/Assign_59"
  input: "^save/Assign_6"
  input: "^save/Assign_60"
  input: "^save/Assign_61"
  input: "^save/Assign_62"
  input: "^save/Assign_63"
  input: "^save/Assign_64"
  input: "^save/Assign_65"
  input: "^save/Assign_66"
  input: "^save/Assign_67"
  input: "^save/Assign_68"
  input: "^save/Assign_69"
  input: "^save/Assign_7"
  input: "^save/Assign_70"
  input: "^save/Assign_71"
  input: "^save/Assign_72"
  input: "^save/Assign_73"
  input: "^save/Assign_74"
  input: "^save/Assign_75"
  input: "^save/Assign_76"
  input: "^save/Assign_77"
  input: "^save/Assign_78"
  input: "^save/Assign_79"
  input: "^save/Assign_8"
  input: "^save/Assign_80"
  input: "^save/Assign_81"
  input: "^save/Assign_82"
  input: "^save/Assign_83"
  input: "^save/Assign_9"
}
versions {
  producer: 27
}
